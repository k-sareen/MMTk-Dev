Ljava/lang/ClassLoader$StaticData; <clinit> ()V 1 -1
Lgnu/java/net/loader/JarURLLoader; <init> (Ljava/net/URLClassLoader;Lgnu/java/net/loader/URLStreamHandlerCache;Ljava/net/URLStreamHandlerFactory;Ljava/net/URL;Ljava/net/URL;)V 1 -1
Lgnu/java/net/loader/JarURLLoader; <init> (Ljava/net/URLClassLoader;Lgnu/java/net/loader/URLStreamHandlerCache;Ljava/net/URLStreamHandlerFactory;Ljava/net/URL;Ljava/net/URL;Ljava/util/Set;)V 1 -1
Lgnu/java/net/loader/URLLoader; <init> (Ljava/net/URLClassLoader;Lgnu/java/net/loader/URLStreamHandlerCache;Ljava/net/URLStreamHandlerFactory;Ljava/net/URL;Ljava/net/URL;)V 1 -1
Lgnu/java/net/loader/JarURLLoader; initialize ()V 1 -1
Lgnu/java/net/IndexListParser; <init> (Ljava/util/jar/JarFile;Ljava/net/URL;Ljava/net/URL;)V 1 -1
Lgnu/java/net/IndexListParser; clearAll ()V 1 -1
Lgnu/java/net/IndexListParser; getHeaders ()Ljava/util/LinkedHashMap; 1 -1
Lgnu/java/net/loader/JarURLLoader; getClassPath ()Ljava/util/ArrayList; 1 -1
Ljava/lang/InheritableThreadLocal; newChildThread (Ljava/lang/Thread;)V 1 -1
Lgnu/java/net/loader/URLLoader; getClass (Ljava/lang/String;)Ljava/lang/Class; 1 -1
Lgnu/java/net/loader/JarURLLoader; getResource (Ljava/lang/String;)Lgnu/java/net/loader/Resource; 1 -1
Lgnu/java/net/loader/JarURLResource; <init> (Lgnu/java/net/loader/JarURLLoader;Ljava/lang/String;Ljava/util/jar/JarEntry;)V 1 -1
Lgnu/java/net/loader/Resource; <init> (Lgnu/java/net/loader/URLLoader;)V 1 -1
Lgnu/java/net/loader/JarURLResource; getInputStream ()Ljava/io/InputStream; 1 -1
Lgnu/java/net/loader/JarURLResource; getLength ()I 1 -1
Lgnu/java/net/loader/Resource; getCodeSource ()Ljava/security/CodeSource; 1 -1
Lgnu/java/net/loader/JarURLResource; getCertificates ()[Ljava/security/cert/Certificate; 1 -1
LHarness; main ([Ljava/lang/String;)V 1 -1
Lgnu/java/net/loader/Resource; getLoader ()Lgnu/java/net/loader/URLLoader; 1 -1
Lgnu/java/net/loader/JarURLLoader; getManifest ()Ljava/util/jar/Manifest; 1 -1
Lgnu/java/net/loader/URLLoader; getBaseURL ()Ljava/net/URL; 1 -1
Lorg/dacapo/harness/TestHarness; <clinit> ()V 1 -1
Lorg/dacapo/harness/TestHarness; twoDecimalPlaces ()Ljava/text/DecimalFormat; 1 -1
Ljava/text/DecimalFormat; <clinit> ()V 1 -1
Ljava/text/DecimalFormatSymbols; <init> (Ljava/util/Locale;)V 1 -1
Ljava/util/Currency; <clinit> ()V 1 -1
Ljava/util/Currency; getInstance (Ljava/lang/String;)Ljava/util/Currency; 1 -1
Ljava/util/Currency; <init> (Ljava/lang/String;)V 1 -1
Ljava/util/Currency; getInstance (Ljava/util/Locale;)Ljava/util/Currency; 1 -1
Ljava/util/Currency; <init> (Ljava/util/Locale;)V 1 -1
Ljava/util/Currency; getCurrencyCode ()Ljava/lang/String; 1 -1
Ljava/text/DecimalFormatSymbols; setCurrency (Ljava/util/Currency;)V 1 -1
Ljava/util/Currency; getSymbol (Ljava/util/Locale;)Ljava/lang/String; 1 -1
Ljava/text/DecimalFormatSymbols; safeGetChar (Ljava/util/ResourceBundle;Ljava/lang/String;C)C 1 -1
Ljava/text/DecimalFormatSymbols; safeGetString (Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Ljava/text/DecimalFormat; <init> ()V 1 -1
Ljava/text/DecimalFormat; <init> (Ljava/lang/String;)V 1 -1
Ljava/text/DecimalFormatSymbols; <init> ()V 1 -1
Ljava/text/DecimalFormat; <init> (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V 1 -1
Ljava/text/NumberFormat; <init> ()V 1 -1
Ljava/text/Format; <init> ()V 1 -1
Ljava/text/DecimalFormatSymbols; clone ()Ljava/lang/Object; 1 -1
Ljava/text/DecimalFormat; applyPatternWithSymbols (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V 1 -1
Ljava/text/DecimalFormat; setDefaultValues ()V 1 -1
Ljava/text/DecimalFormatSymbols; getMinusSign ()C 1 -1
Ljava/text/DecimalFormat; scanFix (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;IZ)I 1 -1
Ljava/text/DecimalFormatSymbols; getDecimalSeparator ()C 1 -1
Ljava/text/DecimalFormatSymbols; getPatternSeparator ()C 1 -1
Ljava/text/DecimalFormatSymbols; getGroupingSeparator ()C 1 -1
Ljava/text/DecimalFormatSymbols; getDigit ()C 1 -1
Ljava/text/DecimalFormatSymbols; getZeroDigit ()C 1 -1
Ljava/text/DecimalFormatSymbols; getPercent ()C 1 -1
Ljava/text/DecimalFormatSymbols; getPerMill ()C 1 -1
Ljava/text/DecimalFormatSymbols; getCurrencySymbol ()Ljava/lang/String; 1 -1
Ljava/text/DecimalFormat; scanNumberInteger (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;I)I 1 -1
Ljava/text/DecimalFormatSymbols; getExponential ()C 1 -1
Ljava/text/DecimalFormat; scanFractionalPortion (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;I)I 1 -1
Ljava/text/DecimalFormat; setMaximumFractionDigits (I)V 1 -1
Ljava/text/NumberFormat; setMaximumFractionDigits (I)V 1 -1
Ljava/text/NumberFormat; getMinimumFractionDigits ()I 1 -1
Ljava/text/DecimalFormat; setMinimumFractionDigits (I)V 1 -1
Ljava/text/NumberFormat; setMinimumFractionDigits (I)V 1 -1
Ljava/text/NumberFormat; getMaximumFractionDigits ()I 1 -1
Ljava/text/NumberFormat; setGroupingUsed (Z)V 1 -1
Lorg/dacapo/harness/TestHarness; main ([Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; <clinit> ()V 1 -1
Lorg/dacapo/harness/CommandLineArgs; makeOption (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/cli/Option; 1 -1
Lorg/apache/commons/cli/Option; <init> (Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V 1 -1
Lorg/apache/commons/cli/OptionValidator; validateOption (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/OptionValidator; isValidOpt (C)Z 1 -1
Lorg/apache/commons/cli/OptionValidator; isValidChar (C)Z 1 -1
Lorg/apache/commons/cli/Option; setValueSeparator (C)V 1 -1
Lorg/apache/commons/cli/Option; setArgName (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/PosixParser; <init> ()V 1 -1
Lorg/apache/commons/cli/Parser; <init> ()V 1 -1
Lorg/apache/commons/cli/Options; <init> ()V 1 -1
Lorg/dacapo/harness/CommandLineArgs; <init> ([Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/Options; addOption (Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options; 1 -1
Lorg/apache/commons/cli/Option; getKey ()Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Option; hasLongOpt ()Z 1 -1
Lorg/apache/commons/cli/Option; getLongOpt ()Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Option; isRequired ()Z 1 -1
Lorg/apache/commons/cli/Option; getDescription ()Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Parser; parse (Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine; 1 -1
Lorg/apache/commons/cli/Parser; parse (Lorg/apache/commons/cli/Options;[Ljava/lang/String;Ljava/util/Properties;Z)Lorg/apache/commons/cli/CommandLine; 1 -1
Lorg/apache/commons/cli/Options; helpOptions ()Ljava/util/List; 1 -1
Lorg/apache/commons/cli/Option; clearValues ()V 1 -1
Lorg/apache/commons/cli/Parser; setOptions (Lorg/apache/commons/cli/Options;)V 1 -1
Lorg/apache/commons/cli/Options; getRequiredOptions ()Ljava/util/List; 1 -1
Lorg/apache/commons/cli/CommandLine; <init> ()V 1 -1
Lorg/apache/commons/cli/Parser; getOptions ()Lorg/apache/commons/cli/Options; 1 -1
Lorg/apache/commons/cli/PosixParser; flatten (Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/PosixParser; init ()V 1 -1
Lorg/apache/commons/cli/PosixParser; processOptionToken (Ljava/lang/String;Z)V 1 -1
Lorg/apache/commons/cli/Options; hasOption (Ljava/lang/String;)Z 1 -1
Lorg/apache/commons/cli/Util; stripLeadingHyphens (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Options; getOption (Ljava/lang/String;)Lorg/apache/commons/cli/Option; 1 -1
Lorg/apache/commons/cli/PosixParser; gobble (Ljava/util/Iterator;)V 1 -1
Lorg/apache/commons/cli/PosixParser; processNonOptionToken (Ljava/lang/String;Z)V 1 -1
Lorg/apache/commons/cli/Parser; processOption (Ljava/lang/String;Ljava/util/ListIterator;)V 1 -1
Lorg/apache/commons/cli/Option; clone ()Ljava/lang/Object; 1 -1
Lorg/apache/commons/cli/Options; getOptionGroup (Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup; 1 -1
Lorg/apache/commons/cli/Option; hasArg ()Z 1 -1
Lorg/apache/commons/cli/Parser; processArgs (Lorg/apache/commons/cli/Option;Ljava/util/ListIterator;)V 1 -1
Lorg/apache/commons/cli/Util; stripLeadingAndTrailingQuotes (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Option; addValueForProcessing (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/Option; processValue (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/Option; hasValueSeparator ()Z 1 -1
Lorg/apache/commons/cli/Option; getValueSeparator ()C 1 -1
Lorg/apache/commons/cli/Option; add (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/Option; getValues ()[Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Option; hasNoValues ()Z 1 -1
Lorg/apache/commons/cli/CommandLine; addOption (Lorg/apache/commons/cli/Option;)V 1 -1
Lorg/apache/commons/cli/CommandLine; addArg (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/Parser; processProperties (Ljava/util/Properties;)V 1 -1
Lorg/apache/commons/cli/Parser; checkRequiredOptions ()V 1 -1
Lorg/apache/commons/cli/Parser; getRequiredOptions ()Ljava/util/List; 1 -1
Lorg/apache/commons/cli/CommandLine; hasOption (Ljava/lang/String;)Z 1 -1
Lorg/apache/commons/cli/CommandLine; resolveOption (Ljava/lang/String;)Lorg/apache/commons/cli/Option; 1 -1
Lorg/apache/commons/cli/Option; getOpt ()Ljava/lang/String; 1 -1
Lorg/dacapo/harness/CommandLineArgs; defineCallback ()V 1 -1
Lorg/apache/commons/cli/Option; equals (Ljava/lang/Object;)Z 1 -1
Lorg/apache/commons/cli/CommandLine; getOptionValue (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/CommandLine; getOptionValues (Ljava/lang/String;)[Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Option; getValuesList ()Ljava/util/List; 1 -1
Lorg/dacapo/harness/Callback; <clinit> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40503; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40503; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
LMMTkCallback; <init> (Lorg/dacapo/harness/CommandLineArgs;)V 1 -1
Lorg/dacapo/harness/Callback; <init> (Lorg/dacapo/harness/CommandLineArgs;)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; getMethodology ()Lorg/dacapo/harness/CommandLineArgs$Methodology; 1 -1
Lorg/dacapo/harness/CommandLineArgs$Methodology; <clinit> ()V 1 -1
Lorg/dacapo/harness/CommandLineArgs$Methodology; <init> (Ljava/lang/String;I)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; getDebug ()Z 1 -1
LMMTkHarness; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect26119; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect26120; <init> ()V 1 -1
Lorg/dacapo/harness/CommandLineArgs; getCallback ()Lorg/dacapo/harness/Callback; 1 -1
Lorg/apache/commons/cli/CommandLine; getArgList ()Ljava/util/List; 1 -1
Lorg/dacapo/harness/CommandLineArgs; extractBenchmarkSet ()Ljava/util/List; 1 -1
Lgnu/java/net/loader/JarURLResource; getURL ()Ljava/net/URL; 1 -1
Lorg/dacapo/harness/CommandLineArgs; getScratchDir ()Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/CommandLine; getOptionValue (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/dacapo/harness/TestHarness; makeCleanScratch (Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/TestHarness; rmdir (Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/Benchmark; <clinit> ()V 1 -1
Lorg/dacapo/harness/Benchmark; setCommandLineOptions (Lorg/dacapo/harness/CommandLineArgs;)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; getSilent ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getVerbose ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getPreserve ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getValidate ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getValidateOutput ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getPreIterationGC ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getValidationReport ()Ljava/lang/String; 1 -1
Lorg/dacapo/harness/CommandLineArgs; getThreadCount ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; <clinit> ()V 1 -1
Lorg/dacapo/parser/Config; setThreadCountOverride (I)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; benchmarks ()Ljava/lang/Iterable; 1 -1
Lorg/dacapo/harness/CommandLineArgs; getCnfOverride ()Ljava/lang/String; 1 -1
Lorg/dacapo/harness/TestHarness; <init> (Ljava/io/InputStream;)V 1 -1
Lorg/dacapo/parser/Config; parse (Ljava/io/InputStream;)Lorg/dacapo/parser/Config; 1 -1
Lorg/dacapo/parser/ConfigFile; <clinit> ()V 1 -1
Lorg/dacapo/parser/ConfigFile; jj_la1_init_0 ()V 1 -1
Lorg/dacapo/parser/ConfigFile; jj_la1_init_1 ()V 1 -1
Lorg/dacapo/parser/ConfigFile; <init> (Ljava/io/InputStream;)V 1 -1
Lorg/dacapo/parser/ConfigFile; <init> (Ljava/io/InputStream;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/SimpleCharStream; <init> (Ljava/io/InputStream;Ljava/lang/String;II)V 1 -1
Lorg/dacapo/parser/SimpleCharStream; <init> (Ljava/io/InputStream;Ljava/lang/String;III)V 1 -1
Lorg/dacapo/parser/SimpleCharStream; <init> (Ljava/io/Reader;III)V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; <clinit> ()V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; <init> (Lorg/dacapo/parser/SimpleCharStream;)V 1 -1
Lorg/dacapo/parser/Token; <init> ()V 1 -1
Lorg/dacapo/parser/ConfigFile; configFile ()Lorg/dacapo/parser/Config; 1 -1
Lorg/dacapo/parser/ConfigFile; config ()Lorg/dacapo/parser/Config; 1 -1
Lorg/dacapo/parser/ConfigFile; jj_consume_token (I)Lorg/dacapo/parser/Token; 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; getNextToken ()Lorg/dacapo/parser/Token; 1 -1
Lorg/dacapo/parser/SimpleCharStream; BeginToken ()C 1 -1
Lorg/dacapo/parser/SimpleCharStream; readChar ()C 1 -1
Lorg/dacapo/parser/SimpleCharStream; FillBuff ()V 1 -1
Lorg/dacapo/parser/SimpleCharStream; UpdateLineColumn (C)V 1 -1
Lorg/dacapo/parser/SimpleCharStream; backup (I)V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa0_0 ()I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa1_0 (J)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa2_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa3_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa4_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa5_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa6_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa7_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa8_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjStartNfaWithStates_0 (III)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveNfa_0 (II)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjFillToken ()Lorg/dacapo/parser/Token; 1 -1
Lorg/dacapo/parser/SimpleCharStream; getBeginLine ()I 1 -1
Lorg/dacapo/parser/SimpleCharStream; getBeginColumn ()I 1 -1
Lorg/dacapo/parser/SimpleCharStream; getEndLine ()I 1 -1
Lorg/dacapo/parser/SimpleCharStream; getEndColumn ()I 1 -1
Lorg/dacapo/parser/Token; newToken (ILjava/lang/String;)Lorg/dacapo/parser/Token; 1 -1
Lorg/dacapo/parser/Token; <init> (ILjava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjStartNfa_0 (IJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjStopStringLiteralDfa_0 (IJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjCheckNAdd (I)V 1 -1
Lorg/dacapo/parser/SimpleCharStream; GetImage ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; <init> (Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFile; jj_ntk ()I 1 -1
Lorg/dacapo/parser/ConfigFile; configOption (Lorg/dacapo/parser/Config;)V 1 -1
Lorg/dacapo/parser/ConfigFile; identifier ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; setClass (Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa9_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa10_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa11_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFile; threadModel ()Lorg/dacapo/parser/Config$ThreadModel; 1 -1
Lorg/dacapo/parser/Config$ThreadModel; <clinit> ()V 1 -1
Lorg/dacapo/parser/Config$ThreadModel; <init> (Ljava/lang/String;ILjava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; setThreadModel (Lorg/dacapo/parser/Config$ThreadModel;)V 1 -1
Lorg/dacapo/parser/ConfigFile; string ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjCheckNAddStates (II)V 1 -1
Lorg/dacapo/parser/ConfigFile; unQuote (Lorg/dacapo/parser/Token;)Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; setJar (Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFile; libraries (Lorg/dacapo/parser/Config;)V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjStopAtPos (II)I 1 -1
Ljava/lang/reflect/Array; newInstance (Ljava/lang/Class;I)Ljava/lang/Object; 1 -1
Lorg/dacapo/parser/Config; setLibs ([Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFile; sizeSpec (Lorg/dacapo/parser/Config;)V 1 -1
Lorg/dacapo/parser/ConfigFile; sizeClause (Lorg/dacapo/parser/Config;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; addSize (Ljava/lang/String;Ljava/util/Vector;)V 1 -1
Lorg/dacapo/parser/Config$Size; <init> (Lorg/dacapo/parser/Config;Ljava/lang/String;Ljava/util/Vector;)V 1 -1
Lorg/dacapo/parser/ConfigFile; integer ()I 1 -1
Lorg/dacapo/parser/Config; setThreadLimit (Ljava/lang/String;I)V 1 -1
Lorg/dacapo/parser/Config; getSize (Ljava/lang/String;)Lorg/dacapo/parser/Config$Size; 1 -1
Lorg/dacapo/parser/Config$Size; setThreadLimit (I)V 1 -1
Lorg/dacapo/parser/ConfigFile; outputFile (Lorg/dacapo/parser/Config;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; addOutputFile (Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config$Size; addOutputFile (Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config$OutputFile; <init> (Lorg/dacapo/parser/Config;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; setTextFile (Ljava/lang/String;Ljava/lang/String;Z)V 1 -1
Lorg/dacapo/parser/Config$Size; getOutputFile (Ljava/lang/String;)Lorg/dacapo/parser/Config$OutputFile; 1 -1
Lorg/dacapo/parser/Config; setFilterScratch (Ljava/lang/String;Ljava/lang/String;Z)V 1 -1
Lorg/dacapo/parser/ConfigFile; outputClause (Lorg/dacapo/parser/Config;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFile; hex ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/ConfigFile; unHex (Lorg/dacapo/parser/Token;)Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; setDigest (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFile; description (Lorg/dacapo/parser/Config;)V 1 -1
Lorg/dacapo/parser/ConfigFile; descElement (Lorg/dacapo/parser/Config;)V 1 -1
Lorg/dacapo/parser/ConfigFile; descId ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; addDesc (Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; getSize ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; getThreadLimit (Ljava/lang/String;)I 1 -1
Lorg/dacapo/parser/Config$Size; getThreadLimit ()I 1 -1
Lorg/dacapo/harness/CommandLineArgs; getThreadFactor ()Ljava/lang/String; 1 -1
Lorg/dacapo/harness/TestHarness; isValidSize (Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config; getSizes ()Ljava/util/Collection; 1 -1
Lorg/dacapo/harness/TestHarness; isValidThreadCount (Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config; getThreadCount (Ljava/lang/String;)I 1 -1
Lorg/dacapo/parser/Config$1; <clinit> ()V 1 -1
Lorg/dacapo/parser/Config$ThreadModel; values ()[Lorg/dacapo/parser/Config$ThreadModel; 1 -1
Lorg/dacapo/parser/Config; getThreadModel ()Lorg/dacapo/parser/Config$ThreadModel; 1 -1
Lorg/dacapo/parser/Config; getThreadFactor (Ljava/lang/String;)I 1 -1
Lorg/dacapo/parser/Config$Size; getThreadCount ()I 1 -1
Lorg/dacapo/harness/CommandLineArgs; getInformation ()Z 1 -1
Lorg/dacapo/harness/TestHarness; dump (Z)V 1 -1
Lorg/dacapo/harness/TestHarness; runBenchmark (Ljava/io/File;Ljava/lang/String;Lorg/dacapo/harness/TestHarness;)V 1 -1
Lorg/dacapo/parser/Config; printThreadModel (Ljava/io/PrintStream;Ljava/lang/String;Z)V 1 -1
Lorg/dacapo/harness/TestHarness; findClass ()Ljava/lang/Class; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40961; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40961; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/dacapo/harness/Sunflow; <init> (Lorg/dacapo/parser/Config;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/Benchmark; <init> (Lorg/dacapo/parser/Config;Ljava/io/File;Z)V 1 -1
Lorg/dacapo/harness/Benchmark; initialize ()V 1 -1
Lorg/dacapo/harness/Benchmark; fileIn (Ljava/io/File;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/dacapo/harness/TeePrintStream; <init> (Ljava/io/OutputStream;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/TeeOutputStream; <init> (Ljava/io/OutputStream;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/TeeOutputStream; newLog ()V 1 -1
Lorg/dacapo/harness/TeePrintStream; enableOutput (Z)V 1 -1
Lorg/dacapo/harness/TeeOutputStream; enableOutput (Z)V 1 -1
Lorg/dacapo/harness/Benchmark; prepareJars ()V 1 -1
Lorg/dacapo/harness/Benchmark; extractFileResource (Ljava/lang/String;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/Benchmark; getURL (Ljava/lang/String;)Ljava/net/URL; 1 -1
Lorg/dacapo/harness/Benchmark; fileFromInputStream (Ljava/io/InputStream;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/DacapoClassLoader; create (Lorg/dacapo/parser/Config;Ljava/io/File;)Lorg/dacapo/harness/DacapoClassLoader; 1 -1
Lorg/dacapo/harness/DacapoClassLoader; getJars (Lorg/dacapo/parser/Config;Ljava/io/File;)[Ljava/net/URL; 1 -1
Lorg/dacapo/harness/Benchmark; getVerbose ()Z 1 -1
Lorg/dacapo/harness/DacapoClassLoader; <init> ([Ljava/net/URL;Ljava/lang/ClassLoader;)V 1 -1
Lorg/dacapo/harness/Sunflow; prepare ()V 1 -1
Lorg/dacapo/harness/DacapoClassLoader; loadClass (Ljava/lang/String;Z)Ljava/lang/Class; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40994; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40996; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40997; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40995; <init> ()V 1 -1
Lorg/dacapo/harness/Callback; init (Lorg/dacapo/parser/Config;)V 1 -1
Lorg/dacapo/harness/Callback$1; <clinit> ()V 1 -1
Lorg/dacapo/harness/CommandLineArgs$Methodology; values ()[Lorg/dacapo/harness/CommandLineArgs$Methodology; 1 -1
Lorg/dacapo/harness/CommandLineArgs; getIterations ()I 1 -1
Lorg/dacapo/harness/Callback$Mode; <clinit> ()V 1 -1
Lorg/dacapo/harness/Callback$Mode; <init> (Ljava/lang/String;I)V 1 -1
Lorg/dacapo/harness/Benchmark; run (Lorg/dacapo/harness/Callback;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/harness/Benchmark; prepare (Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/Sunflow; preIteration (Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; preprocessArgs (Ljava/lang/String;Ljava/io/File;)[Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; getArgs (Ljava/lang/String;)[Ljava/lang/String; 1 -1
Lorg/dacapo/harness/Benchmark; useBenchmarkClassLoader ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40995; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/sunflow/Benchmark; <init> (IZZZI)V 1 -1
Lorg/sunflow/system/UI; <clinit> ()V 1 -1
Lorg/sunflow/system/ui/ConsoleInterface; <init> ()V 1 -1
Lorg/sunflow/system/UI; set (Lorg/sunflow/system/UserInterface;)V 1 -1
Ljava/util/Formatter; <clinit> ()V 1 -1
Ljava/util/Formatter; <init> (Ljava/util/Locale;)V 1 -1
Ljava/util/Formatter; <init> (Ljava/lang/Appendable;Ljava/util/Locale;)V 1 -1
Ljava/util/Formatter; format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter; 1 -1
Ljava/util/Formatter; format (Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter; 1 -1
Ljava/util/Formatter; advance ()V 1 -1
Ljava/util/Formatter; parseArgumentIndex ()I 1 -1
Ljava/util/Formatter; parseInt ()I 1 -1
Ljava/util/Formatter; parseFlags ()I 1 -1
Ljava/util/Formatter; parseWidth ()I 1 -1
Ljava/util/Formatter; parsePrecision ()I 1 -1
Ljava/util/Formatter; hexOrOctalConversion (Ljava/lang/Object;IIIIC)V 1 -1
Ljava/util/Formatter; basicIntegralConversion (Ljava/lang/Object;IIIIC)Lgnu/java/lang/CPStringBuilder; 1 -1
Ljava/util/Formatter; noPrecision (I)V 1 -1
Ljava/util/Formatter; checkFlags (IIC)V 1 -1
Ljava/util/Formatter; toString ()Ljava/lang/String; 1 -1
Lorg/sunflow/system/UI$Module; <clinit> ()V 1 -1
Lorg/sunflow/system/UI$Module; <init> (Ljava/lang/String;I)V 1 -1
Lorg/sunflow/system/UI; printInfo (Lorg/sunflow/system/UI$Module;Ljava/lang/String;[Ljava/lang/Object;)V 1 -1
Lorg/sunflow/system/UI$PrintLevel; <clinit> ()V 1 -1
Lorg/sunflow/system/UI$PrintLevel; <init> (Ljava/lang/String;I)V 1 -1
Ljava/util/Formatter; stringFormat (Ljava/lang/Object;IIIC)V 1 -1
Ljava/util/Formatter; genericFormat (Ljava/lang/String;III)V 1 -1
Lorg/sunflow/Benchmark; print (Lorg/sunflow/system/UI$Module;Lorg/sunflow/system/UI$PrintLevel;Ljava/lang/String;)V 1 -1
Ljavax/imageio/ImageIO; <clinit> ()V 1 -1
Ljavax/imageio/ImageIO; read (Ljava/net/URL;)Ljava/awt/image/BufferedImage; 1 -1
Ljavax/imageio/ImageIO; read (Ljava/io/InputStream;)Ljava/awt/image/BufferedImage; 1 -1
Ljavax/imageio/stream/MemoryCacheImageInputStream; <init> (Ljava/io/InputStream;)V 1 -1
Ljavax/imageio/stream/ImageInputStreamImpl; <init> ()V 1 -1
Ljavax/imageio/ImageIO; read (Ljavax/imageio/stream/ImageInputStream;)Ljava/awt/image/BufferedImage; 1 -1
Ljavax/imageio/ImageIO; getRegistry ()Ljavax/imageio/spi/IIORegistry; 1 -1
Ljavax/imageio/spi/IIORegistry; <clinit> ()V 1 -1
Ljavax/imageio/spi/IIORegistry; getDefaultInstance ()Ljavax/imageio/spi/IIORegistry; 1 -1
Ljavax/imageio/spi/IIORegistry; <init> ()V 1 -1
Ljavax/imageio/spi/ServiceRegistry; <init> (Ljava/util/Iterator;)V 1 -1
Ljavax/imageio/spi/ImageReaderSpi; <clinit> ()V 1 -1
Lgnu/javax/imageio/png/PNGImageReaderSpi; <clinit> ()V 1 -1
Lgnu/javax/imageio/png/PNGImageReaderSpi; <init> ()V 1 -1
Ljavax/imageio/spi/ImageReaderSpi; <init> (Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V 1 -1
Ljavax/imageio/spi/ImageReaderWriterSpi; <init> (Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V 1 -1
Ljavax/imageio/spi/IIOServiceProvider; <init> (Ljava/lang/String;Ljava/lang/String;)V 1 -1
Ljavax/imageio/spi/ServiceRegistry; registerServiceProvider (Ljava/lang/Object;)V 1 -1
Ljavax/imageio/spi/ServiceRegistry; registerServiceProvider (Ljava/lang/Object;I)Z 1 -1
Ljavax/imageio/spi/IIOServiceProvider; onRegistration (Ljavax/imageio/spi/ServiceRegistry;Ljava/lang/Class;)V 1 -1
Lgnu/javax/imageio/gif/GIFImageReaderSpi; <clinit> ()V 1 -1
Lgnu/javax/imageio/gif/GIFImageReaderSpi; <init> ()V 1 -1
Lgnu/javax/imageio/bmp/BMPImageReaderSpi; <clinit> ()V 1 -1
Lgnu/javax/imageio/bmp/BMPImageReaderSpi; <init> ()V 1 -1
Ljavax/imageio/spi/ImageWriterSpi; <clinit> ()V 1 -1
Lgnu/javax/imageio/bmp/BMPImageWriterSpi; <clinit> ()V 1 -1
Lgnu/javax/imageio/bmp/BMPImageWriterSpi; <init> ()V 1 -1
Ljavax/imageio/spi/ImageWriterSpi; <init> (Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V 1 -1
Ljava/awt/Toolkit; <clinit> ()V 1 -1
Ljava/awt/Toolkit; getDefaultToolkit ()Ljava/awt/Toolkit; 1 -1
Ljava/awt/GraphicsEnvironment; isHeadless ()Z 1 -1
Lgnu/java/awt/peer/headless/HeadlessToolkit; <init> ()V 1 -1
Lgnu/java/awt/ClasspathToolkit; <init> ()V 1 -1
Ljava/awt/Toolkit; <init> ()V 1 -1
Lgnu/java/awt/ClasspathToolkit; registerImageIOSpis (Ljavax/imageio/spi/IIORegistry;)V 1 -1
Ljavax/imageio/spi/IIORegistry; registerApplicationClasspathSpis ()V 1 -1
Ljavax/imageio/spi/ServiceRegistry; getCategories ()Ljava/util/Iterator; 1 -1
Ljavax/imageio/spi/ServiceRegistry$1; <init> (Ljavax/imageio/spi/ServiceRegistry;)V 1 -1
Ljavax/imageio/spi/ServiceRegistry$1; hasNext ()Z 1 -1
Ljavax/imageio/spi/ServiceRegistry$1; next ()Ljava/lang/Object; 1 -1
Lgnu/classpath/ServiceFactory; <clinit> ()V 1 -1
Lgnu/classpath/ServiceFactory; lookupProviders (Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/Iterator; 1 -1
Lgnu/classpath/ServiceFactory; lookupProviders (Ljava/lang/Class;Ljava/lang/ClassLoader;Z)Ljava/util/Iterator; 1 -1
Lgnu/classpath/ServiceFactory$ServiceIterator; <init> (Ljava/lang/Class;Ljava/util/Enumeration;Ljava/lang/ClassLoader;ZLjava/security/AccessControlContext;)V 1 -1
Lgnu/classpath/ServiceFactory$ServiceIterator; loadNextServiceProvider ()Ljava/lang/Object; 1 -1
Lgnu/classpath/ServiceFactory$ServiceIterator; advanceReader ()V 1 -1
Lgnu/classpath/ServiceFactory$ServiceIterator; hasNext ()Z 1 -1
Ljavax/imageio/spi/ServiceRegistry; getServiceProviders (Ljava/lang/Class;Z)Ljava/util/Iterator; 1 -1
Ljavax/imageio/spi/ServiceRegistry; getServiceProviders (Ljava/lang/Class;Ljavax/imageio/spi/ServiceRegistry$Filter;Z)Ljava/util/Iterator; 1 -1
Ljavax/imageio/spi/ServiceRegistry; getCategoryID (Ljava/lang/Class;)I 1 -1
Lgnu/javax/imageio/png/PNGImageReaderSpi; canDecodeInput (Ljava/lang/Object;)Z 1 -1
Ljavax/imageio/stream/ImageInputStreamImpl; mark ()V 1 -1
Ljavax/imageio/stream/ImageInputStreamImpl; getStreamPosition ()J 1 -1
Ljavax/imageio/stream/ImageInputStreamImpl; checkClosed ()V 1 -1
Ljavax/imageio/stream/MemoryCacheImageInputStream; read ()I 1 -1
Ljavax/imageio/stream/ImageInputStreamImpl; setBitOffset (I)V 1 -1
Ljavax/imageio/stream/ImageInputStreamImpl; reset ()V 1 -1
Ljavax/imageio/stream/MemoryCacheImageInputStream; seek (J)V 1 -1
Ljavax/imageio/stream/ImageInputStreamImpl; seek (J)V 1 -1
Ljavax/imageio/stream/ImageInputStreamImpl; getFlushedPosition ()J 1 -1
Ljavax/imageio/spi/ImageReaderSpi; createReaderInstance ()Ljavax/imageio/ImageReader; 1 -1
Lgnu/javax/imageio/png/PNGImageReaderSpi; createReaderInstance (Ljava/lang/Object;)Ljavax/imageio/ImageReader; 1 -1
Lgnu/javax/imageio/png/PNGImageReader; <clinit> ()V 1 -1
Lgnu/javax/imageio/png/PNGImageReader; <init> (Lgnu/javax/imageio/png/PNGImageReaderSpi;)V 1 -1
Ljavax/imageio/ImageReader; <init> (Ljavax/imageio/spi/ImageReaderSpi;)V 1 -1
Ljavax/imageio/ImageReader; setInput (Ljava/lang/Object;)V 1 -1
Lgnu/javax/imageio/png/PNGImageReader; setInput (Ljava/lang/Object;ZZ)V 1 -1
Ljavax/imageio/ImageReader; setInput (Ljava/lang/Object;ZZ)V 1 -1
Ljavax/imageio/spi/ImageReaderSpi; getInputTypes ()[Ljava/lang/Class; 1 -1
Lgnu/javax/imageio/png/PNGImageReader; read (ILjavax/imageio/ImageReadParam;)Ljava/awt/image/BufferedImage; 1 -1
Lgnu/javax/imageio/png/PNGImageReader; checkIndex (I)V 1 -1
Lgnu/javax/imageio/png/PNGImageReader; readImage ()V 1 -1
Lgnu/javax/imageio/png/PNGFile; <clinit> ()V 1 -1
Lgnu/javax/imageio/IIOInputStream; <init> (Ljavax/imageio/stream/ImageInputStream;)V 1 -1
Lgnu/javax/imageio/png/PNGFile; <init> (Ljava/io/InputStream;)V 1 -1
Lgnu/javax/imageio/IIOInputStream; read ([B)I 1 -1
Ljavax/imageio/stream/ImageInputStreamImpl; read ([B)I 1 -1
Ljavax/imageio/stream/MemoryCacheImageInputStream; read ([BII)I 1 -1
Lgnu/javax/imageio/png/PNGFile; validateHeader ([B)Z 1 -1
Lgnu/javax/imageio/png/PNGChunk; <clinit> ()V 1 -1
Lgnu/javax/imageio/png/PNGChunk; readChunk (Ljava/io/InputStream;Z)Lgnu/javax/imageio/png/PNGChunk; 1 -1
Lgnu/javax/imageio/png/PNGChunk; getChunk (I[BI)Lgnu/javax/imageio/png/PNGChunk; 1 -1
Lgnu/javax/imageio/png/PNGHeader; <init> (I[BI)V 1 -1
Lgnu/javax/imageio/png/PNGChunk; <init> (I[BI)V 1 -1
Lgnu/javax/imageio/png/PNGHeader; isValidChunk ()Z 1 -1
Lgnu/javax/imageio/png/PNGChunk; isValidChunk ()Z 1 -1
Lgnu/javax/imageio/png/PNGChunk; calcCRC ()I 1 -1
Lgnu/javax/imageio/png/PNGChunk; getInt (I)[B 1 -1
Lgnu/javax/imageio/png/PNGHeader; toString ()Ljava/lang/String; 1 -1
Lgnu/javax/imageio/png/PNGDecoder; <init> (Lgnu/javax/imageio/png/PNGHeader;)V 1 -1
Lgnu/javax/imageio/png/PNGHeader; getScanlineStride ()I 1 -1
Lgnu/javax/imageio/png/PNGHeader; getHeight ()I 1 -1
Lgnu/javax/imageio/png/PNGHeader; bytesPerPixel ()I 1 -1
Lgnu/javax/imageio/png/PNGData; <init> (I[BI)V 1 -1
Lgnu/javax/imageio/png/PNGDecoder; addData (Lgnu/javax/imageio/png/PNGData;)V 1 -1
Lgnu/javax/imageio/png/PNGDecoder; isFinished ()Z 1 -1
Lgnu/javax/imageio/png/PNGData; feedToInflater (Ljava/util/zip/Inflater;)V 1 -1
Lgnu/javax/imageio/png/PNGDecoder; getBytes ([BI)I 1 -1
Lgnu/javax/imageio/png/PNGFilter; unFilterScanline (I[B[BI)[B 1 -1
Lgnu/javax/imageio/png/PNGChunk; getType ()I 1 -1
Lgnu/javax/imageio/png/PNGHeader; isIndexed ()Z 1 -1
Lgnu/javax/imageio/png/PNGHeader; getWidth ()I 1 -1
Lgnu/javax/imageio/png/PNGFile; getBufferedImage ()Ljava/awt/image/BufferedImage; 1 -1
Lgnu/javax/imageio/png/PNGDecoder; getRaster (Lgnu/javax/imageio/png/PNGHeader;)Ljava/awt/image/WritableRaster; 1 -1
Lgnu/javax/imageio/png/PNGHeader; getDepth ()I 1 -1
Lgnu/javax/imageio/png/PNGHeader; getColorType ()I 1 -1
Lgnu/javax/imageio/png/PNGDecoder; getByteBuffer ()Ljava/awt/image/DataBuffer; 1 -1
Ljava/awt/image/DataBufferByte; <init> ([BI)V 1 -1
Ljava/awt/image/DataBuffer; <init> (IIII)V 1 -1
Ljava/awt/image/ComponentSampleModel; <init> (IIIII[I)V 1 -1
Ljava/awt/image/ComponentSampleModel; <init> (IIIII[I[I)V 1 -1
Ljava/awt/image/SampleModel; <init> (IIII)V 1 -1
Ljava/awt/image/Raster; createWritableRaster (Ljava/awt/image/SampleModel;Ljava/awt/image/DataBuffer;Ljava/awt/Point;)Ljava/awt/image/WritableRaster; 1 -1
Ljava/awt/image/WritableRaster; <init> (Ljava/awt/image/SampleModel;Ljava/awt/image/DataBuffer;Ljava/awt/Point;)V 1 -1
Ljava/awt/image/SampleModel; getWidth ()I 1 -1
Ljava/awt/image/SampleModel; getHeight ()I 1 -1
Ljava/awt/Rectangle; <init> (IIII)V 1 -1
Ljava/awt/geom/Rectangle2D; <init> ()V 1 -1
Ljava/awt/geom/RectangularShape; <init> ()V 1 -1
Ljava/awt/image/WritableRaster; <init> (Ljava/awt/image/SampleModel;Ljava/awt/image/DataBuffer;Ljava/awt/Rectangle;Ljava/awt/Point;Ljava/awt/image/WritableRaster;)V 1 -1
Ljava/awt/image/Raster; <init> (Ljava/awt/image/SampleModel;Ljava/awt/image/DataBuffer;Ljava/awt/Rectangle;Ljava/awt/Point;Ljava/awt/image/Raster;)V 1 -1
Ljava/awt/image/SampleModel; getNumBands ()I 1 -1
Ljava/awt/image/ComponentSampleModel; getNumDataElements ()I 1 -1
Lgnu/javax/imageio/png/PNGFile; getColorSpace ()Ljava/awt/color/ColorSpace; 1 -1
Lgnu/javax/imageio/png/PNGDecoder; getColorModel (Ljava/awt/color/ColorSpace;II)Ljava/awt/image/ColorModel; 1 -1
Ljava/awt/color/ColorSpace; <clinit> ()V 1 -1
Ljava/awt/color/ColorSpace; getInstance (I)Ljava/awt/color/ColorSpace; 1 -1
Ljava/awt/color/ICC_Profile; <clinit> ()V 1 -1
Ljava/awt/color/ICC_Profile; <init> (I)V 1 -1
Ljava/awt/color/ICC_Profile; createProfile (I)V 1 -1
Lgnu/java/awt/color/ProfileHeader; <clinit> ()V 1 -1
Lgnu/java/awt/color/ProfileHeader; <init> ()V 1 -1
Ljava/awt/color/ICC_Profile; createRGBProfile ()V 1 -1
Lgnu/java/awt/color/ProfileHeader; setColorSpace (I)V 1 -1
Lgnu/java/awt/color/ProfileHeader; setProfileColorSpace (I)V 1 -1
Ljava/awt/color/ICC_ColorSpace; <init> (Ljava/awt/color/ICC_Profile;)V 1 -1
Ljava/awt/color/ICC_Profile; getColorSpaceType ()I 1 -1
Lgnu/java/awt/color/ProfileHeader; getColorSpace ()I 1 -1
Ljava/awt/color/ICC_Profile; getNumComponents ()I 1 -1
Ljava/awt/color/ColorSpace; <init> (II)V 1 -1
Ljava/awt/color/ICC_ColorSpace; getConverter (Ljava/awt/color/ICC_Profile;)Lgnu/java/awt/color/ColorSpaceConverter; 1 -1
Ljava/awt/color/ICC_Profile; isPredefined ()I 1 -1
Lgnu/java/awt/color/SrgbConverter; <init> ()V 1 -1
Ljava/awt/color/ICC_ColorSpace; makeArrays ()V 1 -1
Ljava/awt/color/ICC_ColorSpace; getMinValue (I)F 1 -1
Ljava/awt/color/ICC_ColorSpace; getMaxValue (I)F 1 -1
Ljava/awt/color/ICC_ColorSpace; toCIEXYZ ([F)[F 1 -1
Lgnu/java/awt/color/SrgbConverter; toCIEXYZ ([F)[F 1 -1
Lgnu/java/awt/color/SrgbConverter; RGBtoXYZ ([F)[F 1 -1
Ljava/awt/color/ICC_Profile; getInstance (I)Ljava/awt/color/ICC_Profile; 1 -1
Ljava/awt/color/ICC_ProfileRGB; <init> (I)V 1 -1
Ljava/awt/color/ICC_Profile; createLinearRGBProfile ()V 1 -1
Lgnu/java/awt/color/LinearRGBConverter; <init> ()V 1 -1
Lgnu/java/awt/color/LinearRGBConverter; toCIEXYZ ([F)[F 1 -1
Ljava/awt/color/ICC_Profile; makeXYZData ([F)[B 1 -1
Ljava/nio/ByteBufferHelper; putInt (Ljava/nio/ByteBuffer;IILjava/nio/ByteOrder;)V 1 -1
Ljava/awt/color/ICC_Profile; setData (I[B)V 1 -1
Lgnu/java/awt/color/TagEntry; <init> (I[B)V 1 -1
Lgnu/java/awt/color/TagEntry; hashKey ()Ljava/lang/String; 1 -1
Lgnu/java/awt/color/TagEntry; tagHashKey (I)Ljava/lang/String; 1 -1
Ljava/awt/color/ICC_Profile; makeTRC ()[B 1 -1
Ljava/awt/color/ICC_Profile; makeTextTag (Ljava/lang/String;)[B 1 -1
Ljava/awt/color/ICC_Profile; makeDescTag (Ljava/lang/String;)[B 1 -1
Ljava/nio/ByteBufferHelper; putShort (Ljava/nio/ByteBuffer;ISLjava/nio/ByteOrder;)V 1 -1
Ljava/awt/color/ICC_ProfileRGB; createMatrix ()[[F 1 -1
Ljava/awt/color/ICC_Profile; getXYZData (I)[F 1 -1
Ljava/awt/color/ICC_Profile; getData (I)[B 1 -1
Lgnu/java/awt/color/TagEntry; getData ()[B 1 -1
Ljava/nio/ByteBufferHelper; getInt (Ljava/nio/ByteBuffer;ILjava/nio/ByteOrder;)I 1 -1
Ljava/awt/color/ICC_ColorSpace; fromRGB ([F)[F 1 -1
Lgnu/java/awt/color/LinearRGBConverter; fromRGB ([F)[F 1 -1
Ljava/awt/color/ICC_Profile; makeTRC ([F)[B 1 -1
Ljava/awt/image/ColorModel; <clinit> ()V 1 -1
Ljava/awt/image/ColorModel$SRGBColorModel; <init> ()V 1 -1
Ljava/awt/image/DirectColorModel; <init> (IIIII)V 1 -1
Lgnu/java/awt/Buffers; smallestAppropriateTransferType (I)I 1 -1
Ljava/awt/image/DirectColorModel; <init> (Ljava/awt/color/ColorSpace;IIIIIZI)V 1 -1
Ljava/awt/image/PackedColorModel; <init> (Ljava/awt/color/ColorSpace;IIIIIZII)V 1 -1
Ljava/awt/image/PackedColorModel; makeColorMaskArray (III)[I 1 -1
Ljava/awt/image/PackedColorModel; <init> (Ljava/awt/color/ColorSpace;I[IIZII)V 1 -1
Ljava/awt/image/PackedColorModel; calcBitsPerComponent ([II)[I 1 -1
Lgnu/java/awt/BitMaskExtent; <init> ()V 1 -1
Lgnu/java/awt/BitMaskExtent; setMask (J)V 1 -1
Ljava/awt/image/ColorModel; <init> (I[ILjava/awt/color/ColorSpace;ZZII)V 1 -1
Ljava/awt/color/ColorSpace; getNumComponents ()I 1 -1
Ljava/awt/image/PackedColorModel; initMasks ([II)V 1 -1
Ljava/awt/image/ComponentColorModel; <init> (Ljava/awt/color/ColorSpace;[IZZII)V 1 -1
Ljava/awt/image/ComponentColorModel; sum ([I)I 1 -1
Ljava/awt/Image; <clinit> ()V 1 -1
Ljava/awt/image/BufferedImage; <clinit> ()V 1 -1
Ljava/awt/Point; <init> ()V 1 -1
Ljava/awt/geom/Point2D; <init> ()V 1 -1
Ljava/awt/image/BufferedImage; <init> (Ljava/awt/image/ColorModel;Ljava/awt/image/WritableRaster;ZLjava/util/Hashtable;)V 1 -1
Ljava/awt/Image; <init> ()V 1 -1
Ljava/awt/image/BufferedImage; init (Ljava/awt/image/ColorModel;Ljava/awt/image/WritableRaster;ZLjava/util/Hashtable;I)V 1 -1
Ljava/awt/image/BufferedImage; getWidth ()I 1 -1
Ljava/awt/image/Raster; getWidth ()I 1 -1
Ljava/awt/image/BufferedImage; getHeight ()I 1 -1
Ljava/awt/image/Raster; getHeight ()I 1 -1
Ljava/awt/image/BufferedImage; getRGB (II)I 1 -1
Ljava/awt/image/Raster; getDataElements (IILjava/lang/Object;)Ljava/lang/Object; 1 -1
Ljava/awt/image/ComponentSampleModel; getDataElements (IILjava/lang/Object;Ljava/awt/image/DataBuffer;)Ljava/lang/Object; 1 -1
Ljava/awt/image/SampleModel; getTransferType ()I 1 -1
Ljava/awt/image/DataBufferByte; getElem (II)I 1 -1
Ljava/awt/image/ComponentColorModel; getRGB (Ljava/lang/Object;)I 1 -1
Ljava/awt/image/ComponentColorModel; getRGBFloat (Ljava/lang/Object;)[F 1 -1
Ljava/awt/image/ColorModel; getNumComponents ()I 1 -1
Ljava/awt/image/ColorModel; getNumColorComponents ()I 1 -1
Lgnu/java/awt/Buffers; createBufferFromData (ILjava/lang/Object;I)Ljava/awt/image/DataBuffer; 1 -1
Ljava/awt/image/ColorModel; getComponentSize (I)I 1 -1
Ljava/awt/image/DataBuffer; getElemFloat (I)F 1 -1
Ljava/awt/image/DataBufferByte; getElem (I)I 1 -1
Ljava/awt/color/ICC_ColorSpace; toRGB ([F)[F 1 -1
Lgnu/java/awt/color/SrgbConverter; toRGB ([F)[F 1 -1
Ljava/awt/image/ComponentColorModel; getRGB ([F)I 1 -1
Ljava/awt/image/ColorModel; hasAlpha ()Z 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40996; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/sunflow/Benchmark; kernelBegin ()V 1 -1
Lorg/dacapo/harness/Benchmark; revertClassLoader ()V 1 -1
LMMTkCallback; start (Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/Callback; isWarmup ()Z 1 -1
Lorg/dacapo/harness/Callback; start (Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/Callback; start (Ljava/lang/String;Z)V 1 -1
Lorg/dacapo/harness/TestHarness; getBuildVersion ()Ljava/lang/String; 1 -1
Lorg/dacapo/harness/Benchmark; startIteration ()V 1 -1
Lorg/dacapo/harness/TeePrintStream; openLog ()V 1 -1
Lorg/dacapo/harness/TeeOutputStream; openLog ()V 1 -1
Lorg/dacapo/harness/Sunflow; iterate (Ljava/lang/String;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40994; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/sunflow/Benchmark; kernelMain ()V 1 -1
Lorg/sunflow/SunflowAPI; <clinit> ()V 1 -1
Lorg/sunflow/Benchmark$BenchmarkScene; <init> (Lorg/sunflow/Benchmark;)V 1 -1
Lorg/sunflow/SunflowAPI; <init> ()V 1 -1
Lorg/sunflow/SunflowAPI; reset ()V 1 -1
Lorg/sunflow/core/Scene; <init> ()V 1 -1
Lorg/sunflow/core/LightServer; <init> (Lorg/sunflow/core/Scene;)V 1 -1
Lorg/sunflow/core/LightServer; shadingCache (F)V 1 -1
Lorg/sunflow/core/InstanceList; <init> ()V 1 -1
Lorg/sunflow/core/renderer/BucketRenderer; <init> ()V 1 -1
Lorg/sunflow/core/renderer/ProgressiveRenderer; <init> ()V 1 -1
Lorg/sunflow/system/SearchPath; <init> (Ljava/lang/String;)V 1 -1
Lorg/sunflow/core/ParameterList; <init> ()V 1 -1
Lorg/sunflow/util/FastHashMap; <clinit> ()V 1 -1
Lorg/sunflow/util/FastHashMap; <init> ()V 1 -1
Lorg/sunflow/util/FastHashMap; clear ()V 1 -1
Lorg/sunflow/util/FastHashMap; alloc (I)[Lorg/sunflow/util/FastHashMap$Entry; 1 -1
Lorg/sunflow/RenderObjectMap; <init> ()V 1 -1
Lorg/sunflow/Benchmark$BenchmarkScene; build ()V 1 -1
Lorg/sunflow/Benchmark; access$200 (Lorg/sunflow/Benchmark;)I 1 -1
Lorg/sunflow/SunflowAPI; parameter (Ljava/lang/String;I)V 1 -1
Lorg/sunflow/core/ParameterList; addInteger (Ljava/lang/String;I)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; <init> (ILorg/sunflow/core/ParameterList$1;)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; <init> (I)V 1 -1
Lorg/sunflow/core/ParameterList$ParameterType; <clinit> ()V 1 -1
Lorg/sunflow/core/ParameterList$ParameterType; <init> (Ljava/lang/String;I)V 1 -1
Lorg/sunflow/core/ParameterList$InterpolationType; <clinit> ()V 1 -1
Lorg/sunflow/core/ParameterList$InterpolationType; <init> (Ljava/lang/String;I)V 1 -1
Lorg/sunflow/core/ParameterList; add (Ljava/lang/String;Lorg/sunflow/core/ParameterList$Parameter;)V 1 -1
Lorg/sunflow/util/FastHashMap; put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/sunflow/util/FastHashMap$Entry; <init> (Ljava/lang/Object;Ljava/lang/Object;Lorg/sunflow/util/FastHashMap$1;)V 1 -1
Lorg/sunflow/util/FastHashMap$Entry; <init> (Ljava/lang/Object;Ljava/lang/Object;)V 1 -1
Lorg/sunflow/SunflowAPI; parameter (Ljava/lang/String;Z)V 1 -1
Lorg/sunflow/core/ParameterList; addBoolean (Ljava/lang/String;Z)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; <init> (ZLorg/sunflow/core/ParameterList$1;)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; <init> (Z)V 1 -1
Lorg/sunflow/Benchmark; access$100 (Lorg/sunflow/Benchmark;)I 1 -1
Lorg/sunflow/util/FastHashMap; resize (I)V 1 -1
Lorg/sunflow/util/FastHashMap$Entry; access$000 (Lorg/sunflow/util/FastHashMap$Entry;)Z 1 -1
Lorg/sunflow/util/FastHashMap$Entry; isRemoved ()Z 1 -1
Lorg/sunflow/util/FastHashMap$Entry; access$100 (Lorg/sunflow/util/FastHashMap$Entry;)Ljava/lang/Object; 1 -1
Lorg/sunflow/util/FastHashMap$Entry; access$200 (Lorg/sunflow/util/FastHashMap$Entry;)Ljava/lang/Object; 1 -1
Lorg/sunflow/SunflowAPI; parameter (Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/sunflow/core/ParameterList; addString (Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; <init> (Ljava/lang/String;Lorg/sunflow/core/ParameterList$1;)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; <init> (Ljava/lang/String;)V 1 -1
Lorg/sunflow/SunflowAPI; parameter (Ljava/lang/String;F)V 1 -1
Lorg/sunflow/core/ParameterList; addFloat (Ljava/lang/String;F)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; <init> (FLorg/sunflow/core/ParameterList$1;)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; <init> (F)V 1 -1
Lorg/sunflow/SunflowAPI; options (Ljava/lang/String;)V 1 -1
Lorg/sunflow/SunflowAPI; lookupOptions (Ljava/lang/String;)Lorg/sunflow/core/Options; 1 -1
Lorg/sunflow/RenderObjectMap; lookupOptions (Ljava/lang/String;)Lorg/sunflow/core/Options; 1 -1
Lorg/sunflow/util/FastHashMap; get (Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/sunflow/RenderObjectMap; has (Ljava/lang/String;)Z 1 -1
Lorg/sunflow/util/FastHashMap; containsKey (Ljava/lang/Object;)Z 1 -1
Lorg/sunflow/core/Options; <init> ()V 1 -1
Lorg/sunflow/RenderObjectMap; put (Ljava/lang/String;Lorg/sunflow/core/Options;)V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; <init> (Lorg/sunflow/core/Options;Lorg/sunflow/RenderObjectMap$1;)V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; <init> (Lorg/sunflow/core/Options;)V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectType; <clinit> ()V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectType; <init> (Ljava/lang/String;I)V 1 -1
Lorg/sunflow/SunflowAPI; update (Ljava/lang/String;)Z 1 -1
Lorg/sunflow/RenderObjectMap; update (Ljava/lang/String;Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; access$500 (Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Ljava/lang/String; 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; typeName ()Ljava/lang/String; 1 -1
Lorg/sunflow/system/UI; printDetailed (Lorg/sunflow/system/UI$Module;Ljava/lang/String;[Ljava/lang/Object;)V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; access$600 (Lorg/sunflow/RenderObjectMap$RenderObjectHandle;Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; update (Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z 1 -1
Lorg/sunflow/core/Options; update (Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z 1 -1
Lorg/sunflow/util/FastHashMap; iterator ()Ljava/util/Iterator; 1 -1
Lorg/sunflow/util/FastHashMap$EntryIterator; <init> (Lorg/sunflow/util/FastHashMap;Lorg/sunflow/util/FastHashMap$1;)V 1 -1
Lorg/sunflow/util/FastHashMap$EntryIterator; <init> (Lorg/sunflow/util/FastHashMap;)V 1 -1
Lorg/sunflow/util/FastHashMap$EntryIterator; readable ()Z 1 -1
Lorg/sunflow/util/FastHashMap; access$500 (Lorg/sunflow/util/FastHashMap;)[Lorg/sunflow/util/FastHashMap$Entry; 1 -1
Lorg/sunflow/util/FastHashMap$EntryIterator; inc ()V 1 -1
Lorg/sunflow/util/FastHashMap$EntryIterator; hasNext ()Z 1 -1
Lorg/sunflow/util/FastHashMap$EntryIterator; next ()Ljava/lang/Object; 1 -1
Lorg/sunflow/util/FastHashMap$EntryIterator; next ()Lorg/sunflow/util/FastHashMap$Entry; 1 -1
Lorg/sunflow/util/FastHashMap$Entry; getKey ()Ljava/lang/Object; 1 -1
Lorg/sunflow/util/FastHashMap$Entry; getValue ()Ljava/lang/Object; 1 -1
Lorg/sunflow/core/ParameterList$Parameter; check ()V 1 -1
Lorg/sunflow/RenderObjectMap$1; <clinit> ()V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectType; values ()[Lorg/sunflow/RenderObjectMap$RenderObjectType; 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; access$000 (Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Lorg/sunflow/RenderObjectMap$RenderObjectType; 1 -1
Lorg/sunflow/core/ParameterList; clear (Z)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; access$000 (Lorg/sunflow/core/ParameterList$Parameter;)Z 1 -1
Lorg/sunflow/Benchmark$BenchmarkScene; buildCornellBox ()V 1 -1
Lorg/sunflow/math/Point3; <init> (FFF)V 1 -1
Lorg/sunflow/SunflowAPI; parameter (Ljava/lang/String;Lorg/sunflow/math/Point3;)V 1 -1
Lorg/sunflow/core/ParameterList; addPoints (Ljava/lang/String;Lorg/sunflow/core/ParameterList$InterpolationType;[F)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; <init> (Lorg/sunflow/core/ParameterList$ParameterType;Lorg/sunflow/core/ParameterList$InterpolationType;[FLorg/sunflow/core/ParameterList$1;)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; <init> (Lorg/sunflow/core/ParameterList$ParameterType;Lorg/sunflow/core/ParameterList$InterpolationType;[F)V 1 -1
Lorg/sunflow/math/Vector3; <clinit> ()V 1 -1
Lorg/sunflow/math/Vector3; <init> (FFF)V 1 -1
Lorg/sunflow/SunflowAPI; parameter (Ljava/lang/String;Lorg/sunflow/math/Vector3;)V 1 -1
Lorg/sunflow/core/ParameterList; addVectors (Ljava/lang/String;Lorg/sunflow/core/ParameterList$InterpolationType;[F)V 1 -1
Lorg/sunflow/core/camera/PinholeLens; <init> ()V 1 -1
Lorg/sunflow/core/camera/PinholeLens; update ()V 1 -1
Lorg/sunflow/SunflowAPI; camera (Ljava/lang/String;Lorg/sunflow/core/CameraLens;)V 1 -1
Ljava/lang/reflect/VMProxy; <clinit> ()V 1 -1
Lorg/sunflow/core/Camera; <init> (Lorg/sunflow/core/CameraLens;)V 1 -1
Ljava/lang/reflect/Modifier; isPublic (I)Z 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect2253; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect1294; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect2250; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect2251; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect2252; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect4619; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect4619; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/sunflow/RenderObjectMap; put (Ljava/lang/String;Lorg/sunflow/core/Camera;)V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; <init> (Lorg/sunflow/core/Camera;Lorg/sunflow/RenderObjectMap$1;)V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; <init> (Lorg/sunflow/core/Camera;)V 1 -1
Lorg/sunflow/SunflowAPI; lookupCamera (Ljava/lang/String;)Lorg/sunflow/core/Camera; 1 -1
Lorg/sunflow/RenderObjectMap; lookupCamera (Ljava/lang/String;)Lorg/sunflow/core/Camera; 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; access$1600 (Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Lorg/sunflow/core/Camera; 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; getCamera ()Lorg/sunflow/core/Camera; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44199; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44199; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/sunflow/core/ParameterList; getInt (Ljava/lang/String;I)I 1 -1
Lorg/sunflow/core/ParameterList; isValidParameter (Ljava/lang/String;Lorg/sunflow/core/ParameterList$ParameterType;Lorg/sunflow/core/ParameterList$InterpolationType;ILorg/sunflow/core/ParameterList$Parameter;)Z 1 -1
Lorg/sunflow/core/Camera; updateCameraMatrix (ILorg/sunflow/core/ParameterList;)Z 1 -1
Lorg/sunflow/core/ParameterList; getMatrix (Ljava/lang/String;Lorg/sunflow/math/Matrix4;)Lorg/sunflow/math/Matrix4; 1 -1
Lorg/sunflow/core/ParameterList; getPoint (Ljava/lang/String;Lorg/sunflow/math/Point3;)Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/core/ParameterList$Parameter; access$2000 (Lorg/sunflow/core/ParameterList$Parameter;)Lorg/sunflow/core/ParameterList$ParameterType; 1 -1
Lorg/sunflow/core/ParameterList$Parameter; access$2100 (Lorg/sunflow/core/ParameterList$Parameter;)Lorg/sunflow/core/ParameterList$InterpolationType; 1 -1
Lorg/sunflow/core/ParameterList$Parameter; access$2200 (Lorg/sunflow/core/ParameterList$Parameter;)I 1 -1
Lorg/sunflow/core/ParameterList$Parameter; size ()I 1 -1
Lorg/sunflow/core/ParameterList$1; <clinit> ()V 1 -1
Lorg/sunflow/core/ParameterList$ParameterType; values ()[Lorg/sunflow/core/ParameterList$ParameterType; 1 -1
Lorg/sunflow/core/ParameterList$InterpolationType; values ()[Lorg/sunflow/core/ParameterList$InterpolationType; 1 -1
Lorg/sunflow/core/ParameterList$Parameter; access$002 (Lorg/sunflow/core/ParameterList$Parameter;Z)Z 1 -1
Lorg/sunflow/core/ParameterList$Parameter; access$1600 (Lorg/sunflow/core/ParameterList$Parameter;)Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/core/ParameterList$Parameter; getPoint ()Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/core/ParameterList; getVector (Ljava/lang/String;Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/core/ParameterList$Parameter; access$1700 (Lorg/sunflow/core/ParameterList$Parameter;)Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/core/ParameterList$Parameter; getVector ()Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/math/Vector3; <init> ()V 1 -1
Lorg/sunflow/math/Point3; sub (Lorg/sunflow/math/Point3;Lorg/sunflow/math/Point3;Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/math/OrthoNormalBasis; makeFromWV (Lorg/sunflow/math/Vector3;Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/OrthoNormalBasis; 1 -1
Ljava/awt/image/ComponentColorModel; getRGBFloat (Ljava/lang/Object;)[F 3 0
Lorg/sunflow/math/OrthoNormalBasis; <init> ()V 1 -1
Lorg/sunflow/math/Vector3; normalize (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/math/Vector3; cross (Lorg/sunflow/math/Vector3;Lorg/sunflow/math/Vector3;Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/math/Vector3; normalize ()Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/math/Matrix4; <clinit> ()V 1 -1
Lorg/sunflow/math/Matrix4; <init> ()V 1 -1
Lorg/sunflow/math/Matrix4; scale (F)Lorg/sunflow/math/Matrix4; 1 -1
Lorg/sunflow/math/Matrix4; fromBasis (Lorg/sunflow/math/OrthoNormalBasis;)Lorg/sunflow/math/Matrix4; 1 -1
Lorg/sunflow/math/OrthoNormalBasis; transform (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/math/Vector3; set (FFF)Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/math/Matrix4; translation (FFF)Lorg/sunflow/math/Matrix4; 1 -1
Lgnu/java/net/loader/JarURLResource; getLength ()I 3 0
Lorg/sunflow/math/Matrix4; multiply (Lorg/sunflow/math/Matrix4;)Lorg/sunflow/math/Matrix4; 1 -1
Lorg/sunflow/math/Matrix4; <init> (FFFFFFFFFFFFFFFF)V 1 -1
Lorg/sunflow/math/Matrix4; inverse ()Lorg/sunflow/math/Matrix4; 1 -1
Lorg/sunflow/core/camera/PinholeLens; update (Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z 1 -1
Lorg/sunflow/core/ParameterList; getFloat (Ljava/lang/String;F)F 1 -1
Lorg/sunflow/core/ParameterList$Parameter; access$1400 (Lorg/sunflow/core/ParameterList$Parameter;)F 1 -1
Lorg/sunflow/core/ParameterList$Parameter; getFloatValue ()F 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; access$1700 (Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Lorg/sunflow/core/Options; 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; getOptions ()Lorg/sunflow/core/Options; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44226; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44226; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy1; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect536; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect537; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44264; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44264; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy2; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
L$Proxy2; value ()Lorg/vmmagic/pragma/Inline$When; 1 -1
L$Proxy2; arguments ()[I 1 -1
Lorg/sunflow/image/Color; <clinit> ()V 1 -1
Lorg/sunflow/image/Color; <init> (FFF)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect1186; <init> ()V 1 -1
Lorg/sunflow/SunflowAPI; parameter (Ljava/lang/String;Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/core/ParameterList; addColor (Ljava/lang/String;Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; <init> (Lorg/sunflow/image/Color;Lorg/sunflow/core/ParameterList$1;)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; <init> (Lorg/sunflow/image/Color;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44311; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44311; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy3; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect3762; <init> ()V 1 -1
Lorg/sunflow/core/shader/DiffuseShader; <init> ()V 1 -1
Lorg/sunflow/SunflowAPI; shader (Ljava/lang/String;Lorg/sunflow/core/Shader;)V 1 -1
Lorg/sunflow/RenderObjectMap; put (Ljava/lang/String;Lorg/sunflow/core/Shader;)V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; <init> (Lorg/sunflow/core/Shader;Lorg/sunflow/RenderObjectMap$1;)V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; <init> (Lorg/sunflow/core/Shader;)V 1 -1
Lorg/sunflow/SunflowAPI; lookupShader (Ljava/lang/String;)Lorg/sunflow/core/Shader; 1 -1
Lorg/sunflow/RenderObjectMap; lookupShader (Ljava/lang/String;)Lorg/sunflow/core/Shader; 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; access$100 (Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Lorg/sunflow/core/Shader; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44338; <init> ()V 1 -1
Lorg/sunflow/core/shader/DiffuseShader; update (Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44338; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/sunflow/core/ParameterList$Parameter; access$1500 (Lorg/sunflow/core/ParameterList$Parameter;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/ParameterList$Parameter; getColor ()Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/SunflowAPI; parameter (Ljava/lang/String;[I)V 1 -1
Lorg/sunflow/core/ParameterList; addIntegerArray (Ljava/lang/String;[I)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; <init> ([ILorg/sunflow/core/ParameterList$1;)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; <init> ([I)V 1 -1
Lorg/sunflow/SunflowAPI; parameter (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[F)V 1 -1
Lorg/sunflow/core/ParameterList$InterpolationType; valueOf (Ljava/lang/String;)Lorg/sunflow/core/ParameterList$InterpolationType; 1 -1
Lgnu/java/awt/color/SrgbConverter; toRGB ([F)[F 3 0
Lorg/sunflow/core/primitive/TriangleMesh; <clinit> ()V 1 -1
Lorg/sunflow/core/primitive/TriangleMesh; <init> ()V 1 -1
Ljava/awt/image/DataBufferByte; getElem (I)I 3 0
Lorg/sunflow/core/ParameterList$FloatParameter; <init> ()V 1 -1
Lorg/sunflow/core/ParameterList$FloatParameter; <init> (Lorg/sunflow/core/ParameterList$InterpolationType;[F)V 1 -1
Lorg/sunflow/SunflowAPI; geometry (Ljava/lang/String;Lorg/sunflow/core/PrimitiveList;)V 1 -1
Lorg/sunflow/RenderObjectMap; put (Ljava/lang/String;Lorg/sunflow/core/PrimitiveList;)V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; <init> (Lorg/sunflow/core/PrimitiveList;Lorg/sunflow/RenderObjectMap$1;)V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; <init> (Lorg/sunflow/core/PrimitiveList;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44408; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44408; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy5; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/sunflow/core/Geometry; <init> (Lorg/sunflow/core/PrimitiveList;)V 1 -1
Lorg/sunflow/SunflowAPI; lookupGeometry (Ljava/lang/String;)Lorg/sunflow/core/Geometry; 1 -1
Lorg/sunflow/RenderObjectMap; lookupGeometry (Ljava/lang/String;)Lorg/sunflow/core/Geometry; 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; access$400 (Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Lorg/sunflow/core/Geometry; 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; getGeometry ()Lorg/sunflow/core/Geometry; 1 -1
Lorg/sunflow/core/Geometry; update (Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z 1 -1
Lorg/sunflow/core/ParameterList; getString (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44431; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44431; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy6; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/sunflow/core/primitive/TriangleMesh; update (Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z 1 -1
Lorg/sunflow/core/ParameterList; getIntArray (Ljava/lang/String;)[I 1 -1
Lorg/sunflow/core/ParameterList$Parameter; access$1200 (Lorg/sunflow/core/ParameterList$Parameter;)[I 1 -1
Lorg/sunflow/core/ParameterList$Parameter; getInts ()[I 1 -1
Lorg/sunflow/core/ParameterList; setFaceCount (I)V 1 -1
Lorg/sunflow/core/ParameterList; getPointArray (Ljava/lang/String;)Lorg/sunflow/core/ParameterList$FloatParameter; 1 -1
Lorg/sunflow/core/ParameterList; getFloatParameter (Ljava/lang/String;Lorg/sunflow/core/ParameterList$ParameterType;Lorg/sunflow/core/ParameterList$Parameter;)Lorg/sunflow/core/ParameterList$FloatParameter; 1 -1
Lorg/sunflow/core/ParameterList$Parameter; access$2300 (Lorg/sunflow/core/ParameterList$Parameter;)Lorg/sunflow/core/ParameterList$FloatParameter; 1 -1
Lorg/sunflow/core/ParameterList$Parameter; getFloats ()Lorg/sunflow/core/ParameterList$FloatParameter; 1 -1
Lorg/sunflow/core/ParameterList$FloatParameter; <init> (Lorg/sunflow/core/ParameterList$InterpolationType;[FLorg/sunflow/core/ParameterList$1;)V 1 -1
Lorg/sunflow/core/ParameterList; setVertexCount (I)V 1 -1
Lorg/sunflow/core/ParameterList; setFaceVertexCount (I)V 1 -1
Lorg/sunflow/core/ParameterList; getVectorArray (Ljava/lang/String;)Lorg/sunflow/core/ParameterList$FloatParameter; 1 -1
Lorg/sunflow/core/ParameterList; getTexCoordArray (Ljava/lang/String;)Lorg/sunflow/core/ParameterList$FloatParameter; 1 -1
Lorg/sunflow/core/primitive/TriangleMesh; init ()V 1 -1
Lorg/sunflow/core/primitive/TriangleMesh; getNumPrimitives ()I 1 -1
Lorg/sunflow/core/primitive/TriangleMesh$WaldTriangle; <init> (Lorg/sunflow/core/primitive/TriangleMesh;ILorg/sunflow/core/primitive/TriangleMesh$1;)V 1 -1
Lorg/sunflow/core/primitive/TriangleMesh$WaldTriangle; <init> (Lorg/sunflow/core/primitive/TriangleMesh;I)V 1 -1
Lorg/sunflow/core/primitive/TriangleMesh; getPoint (I)Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/math/Point3; normal (Lorg/sunflow/math/Point3;Lorg/sunflow/math/Point3;Lorg/sunflow/math/Point3;)Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/SunflowAPI; parameter (Ljava/lang/String;[Ljava/lang/String;)V 1 -1
Lorg/sunflow/core/ParameterList; addStringArray (Ljava/lang/String;[Ljava/lang/String;)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; <init> ([Ljava/lang/String;Lorg/sunflow/core/ParameterList$1;)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; <init> ([Ljava/lang/String;)V 1 -1
Lorg/sunflow/SunflowAPI; instance (Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/sunflow/core/Instance; <init> ()V 1 -1
Lorg/sunflow/RenderObjectMap; put (Ljava/lang/String;Lorg/sunflow/core/Instance;)V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; <init> (Lorg/sunflow/core/Instance;Lorg/sunflow/RenderObjectMap$1;)V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; <init> (Lorg/sunflow/core/Instance;)V 1 -1
Lorg/sunflow/SunflowAPI; lookupInstance (Ljava/lang/String;)Lorg/sunflow/core/Instance; 1 -1
Lorg/sunflow/RenderObjectMap; lookupInstance (Ljava/lang/String;)Lorg/sunflow/core/Instance; 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; access$200 (Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Lorg/sunflow/core/Instance; 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; getInstance ()Lorg/sunflow/core/Instance; 1 -1
Lorg/sunflow/core/Instance; update (Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z 1 -1
Lorg/sunflow/core/ParameterList$Parameter; access$900 (Lorg/sunflow/core/ParameterList$Parameter;)Ljava/lang/String; 1 -1
Lorg/sunflow/core/ParameterList$Parameter; getStringValue ()Ljava/lang/String; 1 -1
Lorg/sunflow/core/ParameterList; getStringArray (Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String; 1 -1
Lorg/sunflow/core/ParameterList$Parameter; access$1000 (Lorg/sunflow/core/ParameterList$Parameter;)[Ljava/lang/String; 1 -1
Lorg/sunflow/core/ParameterList$Parameter; getStrings ()[Ljava/lang/String; 1 -1
Lgnu/java/awt/color/LinearRGBConverter; fromRGB ([F)[F 3 0
Lorg/sunflow/core/light/TriangleMeshLight; <init> ()V 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; init (Ljava/lang/String;Lorg/sunflow/SunflowAPI;)V 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; update (Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z 1 -1
Lorg/sunflow/core/ParameterList$Parameter; access$1100 (Lorg/sunflow/core/ParameterList$Parameter;)I 1 -1
Lorg/sunflow/core/ParameterList$Parameter; getIntValue ()I 1 -1
Lorg/sunflow/core/light/TriangleMeshLight$TriangleLight; <init> (Lorg/sunflow/core/light/TriangleMeshLight;I)V 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$000 (Lorg/sunflow/core/light/TriangleMeshLight;)[I 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$100 (Lorg/sunflow/core/light/TriangleMeshLight;)[I 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$200 (Lorg/sunflow/core/light/TriangleMeshLight;)[I 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$300 (Lorg/sunflow/core/light/TriangleMeshLight;I)Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$400 (Lorg/sunflow/core/light/TriangleMeshLight;I)Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$500 (Lorg/sunflow/core/light/TriangleMeshLight;I)Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/math/Vector3; length ()F 1 -1
Ljava/util/Formatter; decimalConversion (Ljava/lang/Object;IIIC)V 1 -1
Ljava/util/Formatter; applyLocalization (Lgnu/java/lang/CPStringBuilder;IIZ)V 1 -1
Ljava/awt/image/ComponentSampleModel; getDataElements (IILjava/lang/Object;Ljava/awt/image/DataBuffer;)Ljava/lang/Object; 3 0
Lorg/sunflow/SunflowAPI; light (Ljava/lang/String;Lorg/sunflow/core/LightSource;)V 1 -1
Lorg/sunflow/RenderObjectMap; put (Ljava/lang/String;Lorg/sunflow/core/LightSource;)V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; <init> (Lorg/sunflow/core/LightSource;Lorg/sunflow/RenderObjectMap$1;)V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; <init> (Lorg/sunflow/core/LightSource;)V 1 -1
Lorg/sunflow/SunflowAPI; lookupLight (Ljava/lang/String;)Lorg/sunflow/core/LightSource; 1 -1
Lorg/sunflow/RenderObjectMap; lookupLight (Ljava/lang/String;)Lorg/sunflow/core/LightSource; 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; access$700 (Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Lorg/sunflow/core/LightSource; 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; getLight ()Lorg/sunflow/core/LightSource; 1 -1
Lorg/sunflow/core/light/TriangleMeshLight$TriangleLight; update (Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z 1 -1
Lorg/sunflow/core/shader/GlassShader; <init> ()V 1 -1
Lorg/sunflow/core/shader/GlassShader; update (Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z 1 -1
Lorg/sunflow/Benchmark$BenchmarkScene; sphere (Ljava/lang/String;Ljava/lang/String;FFFF)V 1 -1
Lorg/sunflow/core/primitive/Sphere; <init> ()V 1 -1
Lorg/sunflow/core/primitive/Sphere; update (Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z 1 -1
Lorg/sunflow/SunflowAPI; parameter (Ljava/lang/String;Lorg/sunflow/math/Matrix4;)V 1 -1
Lorg/sunflow/math/Matrix4; asRowMajor ()[F 1 -1
Lorg/sunflow/core/ParameterList; addMatrices (Ljava/lang/String;Lorg/sunflow/core/ParameterList$InterpolationType;[F)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; access$1900 (Lorg/sunflow/core/ParameterList$Parameter;)Lorg/sunflow/math/Matrix4; 1 -1
Lorg/sunflow/core/ParameterList$Parameter; getMatrix ()Lorg/sunflow/math/Matrix4; 1 -1
Lorg/sunflow/math/Matrix4; <init> ([FZ)V 1 -1
Lorg/sunflow/core/shader/MirrorShader; <init> ()V 1 -1
Lorg/sunflow/core/shader/MirrorShader; update (Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z 1 -1
Lorg/sunflow/core/tesselatable/Teapot; <clinit> ()V 1 -1
Lorg/sunflow/core/tesselatable/Teapot; <init> ()V 1 -1
Lorg/sunflow/core/tesselatable/BezierMesh; <init> ([[F)V 1 -1
Lorg/sunflow/SunflowAPI; geometry (Ljava/lang/String;Lorg/sunflow/core/Tesselatable;)V 1 -1
Lorg/sunflow/RenderObjectMap; put (Ljava/lang/String;Lorg/sunflow/core/Tesselatable;)V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; <init> (Lorg/sunflow/core/Tesselatable;Lorg/sunflow/RenderObjectMap$1;)V 1 -1
Lorg/sunflow/RenderObjectMap$RenderObjectHandle; <init> (Lorg/sunflow/core/Tesselatable;)V 1 -1
Lorg/sunflow/core/Geometry; <init> (Lorg/sunflow/core/Tesselatable;)V 1 -1
Lorg/sunflow/core/tesselatable/BezierMesh; update (Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z 1 -1
Lorg/sunflow/core/ParameterList; getBoolean (Ljava/lang/String;Z)Z 1 -1
Lorg/sunflow/math/Matrix4; rotateX (F)Lorg/sunflow/math/Matrix4; 1 -1
Lorg/sunflow/math/Matrix4; rotateY (F)Lorg/sunflow/math/Matrix4; 1 -1
Lorg/sunflow/Benchmark; access$000 (Lorg/sunflow/Benchmark;)Z 1 -1
Lorg/sunflow/SunflowAPI; render (Ljava/lang/String;Lorg/sunflow/core/Display;)V 1 -1
Lorg/sunflow/RenderObjectMap; updateScene (Lorg/sunflow/core/Scene;)V 1 -1
Lorg/sunflow/core/Instance; updateBounds ()V 1 -1
Lorg/sunflow/core/Geometry; getWorldBounds (Lorg/sunflow/math/Matrix4;)Lorg/sunflow/math/BoundingBox; 1 -1
Lorg/sunflow/core/primitive/Sphere; getWorldBounds (Lorg/sunflow/math/Matrix4;)Lorg/sunflow/math/BoundingBox; 1 -1
Lorg/sunflow/math/BoundingBox; <init> (F)V 1 -1
Lorg/sunflow/math/Matrix4; transform (Lorg/sunflow/math/BoundingBox;)Lorg/sunflow/math/BoundingBox; 1 -1
Lorg/sunflow/math/BoundingBox; isEmpty ()Z 1 -1
Lorg/sunflow/math/BoundingBox; getMinimum ()Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/math/Matrix4; transformP (Lorg/sunflow/math/Point3;)Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/math/Point3; <init> ()V 1 -1
Lorg/sunflow/math/BoundingBox; <init> (Lorg/sunflow/math/Point3;)V 1 -1
Lorg/sunflow/math/BoundingBox; <init> (FFF)V 1 -1
Lorg/sunflow/math/BoundingBox; getMaximum ()Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/math/BoundingBox; include (Lorg/sunflow/math/Point3;)V 1 -1
Lorg/sunflow/math/BoundingBox; getCorner (I)Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/core/Instance; getBounds ()Lorg/sunflow/math/BoundingBox; 1 -1
Lorg/sunflow/core/tesselatable/BezierMesh; getWorldBounds (Lorg/sunflow/math/Matrix4;)Lorg/sunflow/math/BoundingBox; 1 -1
Lorg/sunflow/math/BoundingBox; <init> ()V 1 -1
Lorg/sunflow/math/Matrix4; transformPX (FFF)F 1 -1
Lorg/sunflow/math/Matrix4; transformPY (FFF)F 1 -1
Lorg/sunflow/math/Matrix4; transformPZ (FFF)F 1 -1
Lorg/sunflow/math/BoundingBox; include (FFF)V 1 -1
Lorg/sunflow/core/primitive/TriangleMesh; getWorldBounds (Lorg/sunflow/math/Matrix4;)Lorg/sunflow/math/BoundingBox; 1 -1
Lorg/sunflow/core/Scene; setInstanceLists ([Lorg/sunflow/core/Instance;[Lorg/sunflow/core/Instance;)V 1 -1
Lorg/sunflow/core/InstanceList; <init> ([Lorg/sunflow/core/Instance;)V 1 -1
Lorg/sunflow/core/Scene; setLightList ([Lorg/sunflow/core/LightSource;)V 1 -1
Lorg/sunflow/core/LightServer; setLights ([Lorg/sunflow/core/LightSource;)V 1 -1
Lorg/sunflow/core/Scene; setCamera (Lorg/sunflow/core/Camera;)V 1 -1
Lorg/sunflow/core/Scene; setBakingInstance (Lorg/sunflow/core/Instance;)V 1 -1
Lorg/sunflow/core/Scene; render (Lorg/sunflow/core/Options;Lorg/sunflow/core/ImageSampler;Lorg/sunflow/core/Display;)V 1 -1
Lorg/sunflow/core/ParameterList$Parameter; access$1300 (Lorg/sunflow/core/ParameterList$Parameter;)Z 1 -1
Lorg/sunflow/core/ParameterList$Parameter; getBoolValue ()Z 1 -1
Lorg/sunflow/math/MathUtils; clamp (III)I 1 -1
Lorg/sunflow/core/InstanceList; getNumPrimitives ()I 1 -1
Lorg/sunflow/core/InstanceList; getNumPrimitives (I)I 1 -1
Lorg/sunflow/core/Instance; getNumPrimitives ()I 1 -1
Lorg/sunflow/core/Geometry; getNumPrimitives ()I 1 -1
Lorg/sunflow/core/primitive/Sphere; getNumPrimitives ()I 1 -1
Lorg/sunflow/core/AccelerationStructureFactory; create (Ljava/lang/String;IZ)Lorg/sunflow/core/AccelerationStructure; 1 -1
Lorg/sunflow/core/accel/BoundingIntervalHierarchy; <init> ()V 1 -1
Lorg/sunflow/core/accel/BoundingIntervalHierarchy; build (Lorg/sunflow/core/PrimitiveList;)V 1 -1
Lorg/sunflow/core/InstanceList; getWorldBounds (Lorg/sunflow/math/Matrix4;)Lorg/sunflow/math/BoundingBox; 1 -1
Lorg/sunflow/math/BoundingBox; include (Lorg/sunflow/math/BoundingBox;)V 1 -1
Lorg/sunflow/util/IntArray; <init> (I)V 1 -1
Lorg/sunflow/core/accel/BoundingIntervalHierarchy$BuildStats; <init> ()V 1 -1
Lorg/sunflow/system/Timer; <init> ()V 1 -1
Lorg/sunflow/system/Timer; start ()V 1 -1
Lorg/sunflow/core/accel/BoundingIntervalHierarchy; buildHierarchy (Lorg/sunflow/util/IntArray;[ILorg/sunflow/core/accel/BoundingIntervalHierarchy$BuildStats;)V 1 -1
Lorg/sunflow/util/IntArray; add (I)V 1 -1
Lorg/sunflow/core/accel/BoundingIntervalHierarchy; subdivide (IILorg/sunflow/util/IntArray;[I[F[FIILorg/sunflow/core/accel/BoundingIntervalHierarchy$BuildStats;)V 1 -1
Lorg/sunflow/core/InstanceList; getPrimitiveBound (II)F 1 -1
Lorg/sunflow/math/BoundingBox; getBound (I)F 1 -1
Lorg/sunflow/util/IntArray; getSize ()I 1 -1
Lorg/sunflow/core/accel/BoundingIntervalHierarchy$BuildStats; updateInner ()V 1 -1
Lorg/sunflow/util/IntArray; set (II)V 1 -1
Lorg/sunflow/core/accel/BoundingIntervalHierarchy$BuildStats; updateLeaf (II)V 1 -1
Lorg/sunflow/core/accel/BoundingIntervalHierarchy; createNode (Lorg/sunflow/util/IntArray;III)V 1 -1
Lorg/sunflow/system/Timer; end ()V 1 -1
Lorg/sunflow/util/IntArray; trim ()[I 1 -1
Lorg/sunflow/core/accel/BoundingIntervalHierarchy$BuildStats; printStats ()V 1 -1
Lorg/sunflow/system/Memory; sizeof ([I)Ljava/lang/String; 1 -1
Lorg/sunflow/system/Memory; bytesToString (J)Ljava/lang/String; 1 -1
Lorg/sunflow/core/Scene; getBounds ()Lorg/sunflow/math/BoundingBox; 1 -1
Lorg/sunflow/math/BoundingBox; toString ()Ljava/lang/String; 1 -1
Ljava/util/Formatter; floatingDecimalConversion (Ljava/lang/Object;IIIC)V 1 -1
Ljava/math/BigDecimal; <clinit> ()V 1 -1
Ljava/math/BigInteger; <clinit> ()V 1 -1
Ljava/math/BigInteger; <init> (I)V 1 -1
Ljava/math/BigDecimal; <init> (Ljava/math/BigInteger;I)V 1 -1
Ljava/math/BigDecimal; <init> (D)V 1 -1
Ljava/math/BigInteger; valueOf (J)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; shiftLeft (I)Ljava/math/BigInteger; 1 -1
Ljava/math/BigDecimal; setScale (II)Ljava/math/BigDecimal; 1 -1
Ljava/math/BigDecimal; divide (Ljava/math/BigDecimal;II)Ljava/math/BigDecimal; 1 -1
Ljava/math/BigInteger; signum ()I 1 -1
Ljava/math/BigInteger; pow (I)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; isZero ()Z 1 -1
Ljava/math/BigInteger; bitLength ()I 1 -1
Lgnu/java/math/MPN; intLength (I)I 1 -1
Lgnu/java/math/MPN; count_leading_zeros (I)I 1 -1
Ljava/math/BigInteger; isNegative ()Z 1 -1
Ljava/math/BigInteger; getAbsolute ([I)V 1 -1
Lgnu/java/math/MPN; mul ([I[II[II)V 1 -1
Lgnu/java/math/MPN; mul_1 ([I[III)I 1 -1
Ljava/math/BigInteger; make ([II)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; wordsNeeded ([II)I 1 -1
Ljava/math/BigInteger; multiply (Ljava/math/BigInteger;)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; times (Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; times (Ljava/math/BigInteger;I)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; divideAndRemainder (Ljava/math/BigInteger;)[Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; <init> ()V 1 -1
Ljava/math/BigInteger; divide (Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;I)V 1 -1
Ljava/math/BigInteger; longValue ()J 1 -1
Ljava/math/BigInteger; divide (JJLjava/math/BigInteger;Ljava/math/BigInteger;I)V 1 -1
Ljava/math/BigInteger; set (J)V 1 -1
Ljava/math/BigInteger; canonicalize ()Ljava/math/BigInteger; 1 -1
Ljava/math/BigDecimal; toString ()Ljava/lang/String; 1 -1
Ljava/math/BigInteger; toString ()Ljava/lang/String; 1 -1
Ljava/math/BigInteger; toString (I)Ljava/lang/String; 1 -1
Ljava/math/BigInteger; alloc (I)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; realloc (I)V 1 -1
Ljava/math/BigInteger; shift (Ljava/math/BigInteger;I)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; setShift (Ljava/math/BigInteger;I)V 1 -1
Ljava/math/BigInteger; setShiftLeft (Ljava/math/BigInteger;I)V 1 -1
Lgnu/java/math/MPN; lshift ([II[III)I 1 -1
Ljava/math/BigInteger; compareTo (Ljava/math/BigInteger;)I 1 -1
Ljava/math/BigInteger; compareTo (Ljava/math/BigInteger;Ljava/math/BigInteger;)I 1 -1
Lgnu/java/math/MPN; cmp ([I[II)I 1 -1
Ljava/math/BigInteger; add (Ljava/math/BigInteger;)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; add (Ljava/math/BigInteger;Ljava/math/BigInteger;I)Ljava/math/BigInteger; 1 -1
Lorg/sunflow/math/BoundingBox; getCenter ()Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/math/Point3; mid (Lorg/sunflow/math/Point3;Lorg/sunflow/math/Point3;Lorg/sunflow/math/Point3;)Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/math/Point3; toString ()Ljava/lang/String; 1 -1
Lorg/sunflow/math/BoundingBox; getExtents ()Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/core/LightServer; build (Lorg/sunflow/core/Options;)Z 1 -1
Lorg/sunflow/core/gi/GIEngineFactory; create (Lorg/sunflow/core/Options;)Lorg/sunflow/core/GIEngine; 1 -1
Lorg/sunflow/core/gi/InstantGI; <init> (Lorg/sunflow/core/Options;)V 1 -1
Lorg/sunflow/core/light/TriangleMeshLight$TriangleLight; getNumSamples ()I 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$600 (Lorg/sunflow/core/light/TriangleMeshLight;)I 1 -1
Lorg/sunflow/core/gi/InstantGI; init (Lorg/sunflow/core/Scene;)Z 1 -1
Lgnu/java/math/MPN; cmp ([II[II)I 1 -1
Lgnu/java/math/MPN; divide ([II[II)V 1 -1
Lgnu/java/math/MPN; udiv_qrnnd (JI)J 1 -1
Lgnu/java/math/MPN; submul_1 ([II[III)I 1 -1
Lgnu/java/math/MPN; rshift0 ([I[IIII)V 1 -1
Lgnu/java/math/MPN; rshift ([I[IIII)I 1 -1
Ljava/math/BigInteger; set ([II)V 1 -1
Lorg/sunflow/core/gi/InstantGI$PointLightStore; <init> (Lorg/sunflow/core/gi/InstantGI;Lorg/sunflow/core/gi/InstantGI$1;)V 1 -1
Lorg/sunflow/core/gi/InstantGI$PointLightStore; <init> (Lorg/sunflow/core/gi/InstantGI;)V 1 -1
Lorg/sunflow/core/Scene; calculatePhotons (Lorg/sunflow/core/PhotonStore;Ljava/lang/String;I)Z 1 -1
Lorg/sunflow/core/LightServer; calculatePhotons (Lorg/sunflow/core/PhotonStore;Ljava/lang/String;I)Z 1 -1
Lorg/sunflow/core/light/TriangleMeshLight$TriangleLight; getPower ()F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$3100 (Lorg/sunflow/core/light/TriangleMeshLight;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/image/Color; copy ()Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/image/Color; <init> (Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/image/Color; mul (F)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/image/Color; getLuminance ()F 1 -1
Lorg/sunflow/core/gi/InstantGI$PointLightStore; numEmit ()I 1 -1
Lorg/sunflow/core/gi/InstantGI; access$100 (Lorg/sunflow/core/gi/InstantGI;)I 1 -1
Lorg/sunflow/core/gi/InstantGI$PointLightStore; prepare (Lorg/sunflow/math/BoundingBox;)V 1 -1
Lorg/sunflow/system/UI; taskStart (Ljava/lang/String;II)V 1 -1
Lorg/sunflow/Benchmark; taskStart (Ljava/lang/String;II)V 1 -1
Lorg/sunflow/core/Scene; getThreads ()I 1 -1
Lorg/sunflow/core/LightServer$1; <init> (Lorg/sunflow/core/LightServer;III[FFLorg/sunflow/core/PhotonStore;)V 1 -1
Lorg/sunflow/core/Scene; getThreadPriority ()I 1 -1
Lorg/sunflow/core/LightServer$1; run ()V 1 -1
Lorg/sunflow/core/IntersectionState; <init> ()V 1 -1
Lorg/sunflow/core/IntersectionState$StackNode; <init> ()V 1 -1
Lorg/sunflow/core/LightServer; access$000 (Lorg/sunflow/core/LightServer;)I 1 -1
Lorg/sunflow/system/UI; taskUpdate (I)V 1 -1
Lorg/sunflow/Benchmark; taskUpdate (I)V 1 -1
Lorg/sunflow/core/LightServer; access$008 (Lorg/sunflow/core/LightServer;)I 1 -1
Lorg/sunflow/system/UI; taskCanceled ()Z 1 -1
Lorg/sunflow/math/QMC; <clinit> ()V 1 -1
Lorg/sunflow/math/QMC; nextPrime (I)I 1 -1
Lorg/sunflow/math/QMC; halton (II)D 1 -1
Lorg/sunflow/image/Color; <init> ()V 1 -1
Lorg/sunflow/core/LightServer; access$100 (Lorg/sunflow/core/LightServer;)[Lorg/sunflow/core/LightSource; 1 -1
Lorg/sunflow/core/light/TriangleMeshLight$TriangleLight; getPhoton (DDDDLorg/sunflow/math/Point3;Lorg/sunflow/math/Vector3;Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$3200 (Lorg/sunflow/core/light/TriangleMeshLight;)[I 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$3300 (Lorg/sunflow/core/light/TriangleMeshLight;)[I 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$3400 (Lorg/sunflow/core/light/TriangleMeshLight;)[I 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$3500 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$3600 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$3700 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$3800 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$3900 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$4000 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$4100 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$4200 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$4300 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/math/OrthoNormalBasis; makeFromW (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/OrthoNormalBasis; 1 -1
Lorg/sunflow/math/OrthoNormalBasis; transform (Lorg/sunflow/math/Vector3;Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/image/Color; mul (FLorg/sunflow/image/Color;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/Ray; <init> (Lorg/sunflow/math/Point3;Lorg/sunflow/math/Vector3;)V 1 -1
Lorg/sunflow/core/LightServer; access$200 (Lorg/sunflow/core/LightServer;)Lorg/sunflow/core/Scene; 1 -1
Lorg/sunflow/core/Scene; trace (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 1 -1
Lorg/sunflow/core/accel/BoundingIntervalHierarchy; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 1 -1
Lorg/sunflow/core/Ray; getMin ()F 1 -1
Lorg/sunflow/core/Ray; getMax ()F 1 -1
Lorg/sunflow/core/IntersectionState; getStack ()[Lorg/sunflow/core/IntersectionState$StackNode; 1 -1
Lorg/sunflow/core/IntersectionState; getStackTop ()I 1 -1
Lorg/sunflow/core/InstanceList; intersectPrimitive (Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V 1 -1
Lorg/sunflow/core/Instance; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 1 -1
Lorg/sunflow/core/Ray; transform (Lorg/sunflow/math/Matrix4;)Lorg/sunflow/core/Ray; 1 -1
Lorg/sunflow/core/Geometry; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 1 -1
Lorg/sunflow/core/Ray; <init> ()V 1 -1
Lorg/sunflow/math/Matrix4; transformVX (FFF)F 1 -1
Lorg/sunflow/math/Matrix4; transformVY (FFF)F 1 -1
Lorg/sunflow/math/Matrix4; transformVZ (FFF)F 1 -1
Lorg/sunflow/core/Geometry; tesselate ()V 1 -1
Lorg/sunflow/core/accel/NullAccelerator; <init> ()V 1 -1
Lorg/sunflow/core/accel/NullAccelerator; build (Lorg/sunflow/core/PrimitiveList;)V 1 -1
Lorg/sunflow/core/accel/NullAccelerator; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 1 -1
Lorg/sunflow/core/tesselatable/BezierMesh; tesselate ()Lorg/sunflow/core/PrimitiveList; 1 -1
Lorg/sunflow/core/tesselatable/BezierMesh; bernstein (F)[F 1 -1
Lorg/sunflow/core/primitive/Sphere; intersectPrimitive (Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V 1 -1
Lorg/sunflow/core/tesselatable/BezierMesh; getPatchPoint (FF[F[F[F[F[FLorg/sunflow/math/Point3;Lorg/sunflow/math/Vector3;)V 1 -1
Lorg/sunflow/core/primitive/TriangleMesh$WaldTriangle; intersect (Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V 1 -1
Lorg/sunflow/core/Ray; isInside (F)Z 1 -1
Lorg/sunflow/core/Ray; setMax (F)V 1 -1
Lorg/sunflow/math/Solvers; solveQuadric (DDD)[D 1 -1
Lorg/sunflow/core/accel/KDTree; <clinit> ()V 1 -1
Lorg/sunflow/core/accel/KDTree; <init> ()V 1 -1
Lorg/sunflow/core/accel/KDTree; <init> (I)V 1 -1
Lorg/sunflow/core/accel/KDTree; build (Lorg/sunflow/core/PrimitiveList;)V 1 -1
Lorg/sunflow/core/accel/KDTree$BuildTask; <init> (I)V 1 -1
Lorg/sunflow/core/primitive/TriangleMesh; getPrimitiveBound (II)F 1 -1
Lorg/sunflow/math/MathUtils; min (FFF)F 1 -1
Lorg/sunflow/math/MathUtils; max (FFF)F 1 -1
Lorg/sunflow/core/accel/KDTree; pack (FJII)J 1 -1
Lorg/sunflow/util/IntArray; <init> ()V 1 -1
Lorg/sunflow/core/accel/KDTree; radix12 ([JI)V 1 -1
Lorg/sunflow/core/accel/KDTree$BuildStats; <init> ()V 1 -1
Lorg/sunflow/core/accel/KDTree; buildTree (FFFFFFLorg/sunflow/core/accel/KDTree$BuildTask;ILorg/sunflow/util/IntArray;ILorg/sunflow/util/IntArray;Lorg/sunflow/core/accel/KDTree$BuildStats;)V 1 -1
Lorg/sunflow/core/accel/KDTree; unpackSplit (J)F 1 -1
Lorg/sunflow/core/accel/KDTree; unpackAxis (J)I 1 -1
Lorg/sunflow/core/accel/KDTree; unpackObject (J)I 1 -1
Lorg/sunflow/core/accel/KDTree; unpackSplitType (J)J 1 -1
Lorg/sunflow/core/accel/KDTree$BuildStats; updateLeaf (II)V 1 -1
Lorg/sunflow/core/accel/KDTree$BuildStats; printStats ()V 1 -1
Lorg/sunflow/core/accel/KDTree; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 1 -1
Lorg/sunflow/core/IntersectionState; setIntersection (IFF)V 1 -1
Lorg/sunflow/core/ParameterList; addTexCoords (Ljava/lang/String;Lorg/sunflow/core/ParameterList$InterpolationType;[F)V 1 -1
Lorg/sunflow/core/accel/KDTree$BuildTask; <init> (ILorg/sunflow/core/accel/KDTree$BuildTask;)V 1 -1
Lorg/sunflow/core/accel/KDTree$BuildStats; updateInner ()V 1 -1
Lorg/sunflow/core/IntersectionState; hit ()Z 1 -1
Lorg/sunflow/core/ShadingState; createPhotonState (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;ILorg/sunflow/core/PhotonStore;Lorg/sunflow/core/LightServer;)Lorg/sunflow/core/ShadingState; 1 -1
Lorg/sunflow/core/ShadingState; <init> (Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/IntersectionState;Lorg/sunflow/core/Ray;II)V 1 -1
Lorg/sunflow/core/LightServer; shadePhoton (Lorg/sunflow/core/ShadingState;Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/core/ShadingState; getInstance ()Lorg/sunflow/core/Instance; 1 -1
Lorg/sunflow/core/Instance; prepareShadingState (Lorg/sunflow/core/ShadingState;)V 1 -1
Lorg/sunflow/core/Geometry; prepareShadingState (Lorg/sunflow/core/ShadingState;)V 1 -1
Lorg/sunflow/core/primitive/TriangleMesh; prepareShadingState (Lorg/sunflow/core/ShadingState;)V 1 -1
Lorg/sunflow/core/ShadingState; init ()V 1 -1
Lorg/sunflow/math/Point2; <init> ()V 1 -1
Lorg/sunflow/core/ShadingState; getPrimitiveID ()I 1 -1
Lorg/sunflow/core/ShadingState; getU ()F 1 -1
Lorg/sunflow/core/ShadingState; getV ()F 1 -1
Lorg/sunflow/core/ShadingState; getRay ()Lorg/sunflow/core/Ray; 1 -1
Lorg/sunflow/core/ShadingState; getPoint ()Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/core/Ray; getPoint (Lorg/sunflow/math/Point3;)Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/core/Instance; transformNormalObjectToWorld (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/math/Matrix4; transformTransposeV (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/math/Vector3; <init> (Lorg/sunflow/math/Vector3;)V 1 -1
Lorg/sunflow/math/Vector3; set (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/core/primitive/TriangleMesh$1; <clinit> ()V 1 -1
Lorg/sunflow/core/ShadingState; getNormal ()Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/core/ShadingState; getUV ()Lorg/sunflow/math/Point2; 1 -1
Lorg/sunflow/core/ShadingState; setBasis (Lorg/sunflow/math/OrthoNormalBasis;)V 1 -1
Lorg/sunflow/core/Instance; transformVectorObjectToWorld (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/core/Instance; getShader (I)Lorg/sunflow/core/Shader; 1 -1
Lorg/sunflow/math/Matrix4; transformV (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/core/ShadingState; setShader (Lorg/sunflow/core/Shader;)V 1 -1
Lorg/sunflow/core/Instance; getModifier (I)Lorg/sunflow/core/Modifier; 1 -1
Lorg/sunflow/core/ShadingState; setModifier (Lorg/sunflow/core/Modifier;)V 1 -1
Lorg/sunflow/core/ShadingState; correctShadingNormal ()V 1 -1
Lorg/sunflow/math/Vector3; dot (Lorg/sunflow/math/Vector3;Lorg/sunflow/math/Vector3;)F 1 -1
Lorg/sunflow/core/ShadingState; getModifier ()Lorg/sunflow/core/Modifier; 1 -1
Lorg/sunflow/core/LightServer; getPhotonShader (Lorg/sunflow/core/ShadingState;)Lorg/sunflow/core/Shader; 1 -1
Lorg/sunflow/core/ShadingState; getShader ()Lorg/sunflow/core/Shader; 1 -1
Lorg/sunflow/core/shader/DiffuseShader; scatterPhoton (Lorg/sunflow/core/ShadingState;Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/core/Ray; getDirection ()Lorg/sunflow/math/Vector3; 1 -1
Lorg/sunflow/core/shader/DiffuseShader; getDiffuse (Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/ShadingState; storePhoton (Lorg/sunflow/math/Vector3;Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/core/gi/InstantGI$PointLightStore; store (Lorg/sunflow/core/ShadingState;Lorg/sunflow/math/Vector3;Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/core/ShadingState; faceforward ()V 1 -1
Lorg/sunflow/core/Ray; dot (Lorg/sunflow/math/Vector3;)F 1 -1
Lorg/sunflow/core/gi/InstantGI$PointLight; <init> (Lorg/sunflow/core/gi/InstantGI$1;)V 1 -1
Lorg/sunflow/core/gi/InstantGI$PointLight; <init> ()V 1 -1
Lorg/sunflow/image/Color; getAverage ()F 1 -1
Lorg/sunflow/core/ShadingState; getRandom (III)D 1 -1
Lorg/sunflow/math/QMC; mod1 (D)D 1 -1
Lorg/sunflow/image/Color; mul (Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/ShadingState; getBasis ()Lorg/sunflow/math/OrthoNormalBasis; 1 -1
Lorg/sunflow/core/ShadingState; traceDiffusePhoton (Lorg/sunflow/core/Ray;Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/core/gi/InstantGI$PointLightStore; allowDiffuseBounced ()Z 1 -1
Lorg/sunflow/core/LightServer; traceDiffusePhoton (Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/core/ShadingState; getDiffuseDepth ()I 1 -1
Lorg/sunflow/core/ShadingState; getIntersectionState ()Lorg/sunflow/core/IntersectionState; 1 -1
Lorg/sunflow/core/ShadingState; createDiffuseBounceState (Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;I)Lorg/sunflow/core/ShadingState; 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; scatterPhoton (Lorg/sunflow/core/ShadingState;Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/core/primitive/Sphere; prepareShadingState (Lorg/sunflow/core/ShadingState;)V 1 -1
Lorg/sunflow/core/Instance; transformWorldToObject (Lorg/sunflow/math/Point3;)Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/core/shader/MirrorShader; scatterPhoton (Lorg/sunflow/core/ShadingState;Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/core/ShadingState; getCosND ()F 1 -1
Lorg/sunflow/core/shader/GlassShader; scatterPhoton (Lorg/sunflow/core/ShadingState;Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/core/gi/InstantGI$PointLightStore; allowReflectionBounced ()Z 1 -1
Lorg/sunflow/image/Color; mul (FLorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/ShadingState; isBehind ()Z 1 -1
Lorg/sunflow/core/LightServer; traceReflectionPhoton (Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/core/ShadingState; getReflectionDepth ()I 1 -1
Lorg/sunflow/core/gi/InstantGI$PointLightStore; allowRefractionBounced ()Z 1 -1
Lorg/sunflow/core/ShadingState; createReflectionBounceState (Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;I)Lorg/sunflow/core/ShadingState; 1 -1
Lorg/sunflow/core/ShadingState; getRefractionDepth ()I 1 -1
Lorg/sunflow/core/ShadingState; createRefractionBounceState (Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;I)Lorg/sunflow/core/ShadingState; 1 -1
Lorg/sunflow/math/OrthoNormalBasis; flipW ()V 1 -1
Lorg/sunflow/system/UI; taskStop ()V 1 -1
Lorg/sunflow/Benchmark; taskStop ()V 1 -1
Lorg/sunflow/system/Timer; toString ()Ljava/lang/String; 1 -1
Lorg/sunflow/system/Timer; nanos ()J 1 -1
Lorg/sunflow/core/gi/InstantGI$PointLightStore; init ()V 1 -1
Ljava/util/Formatter; booleanFormat (Ljava/lang/Object;IIIC)V 1 -1
Lorg/sunflow/core/renderer/BucketRenderer; prepare (Lorg/sunflow/core/Options;Lorg/sunflow/core/Scene;II)Z 1 -1
Lorg/sunflow/core/bucket/BucketOrderFactory; create (Ljava/lang/String;)Lorg/sunflow/core/BucketOrder; 1 -1
Lorg/sunflow/core/bucket/HilbertBucketOrder; <init> ()V 1 -1
Lorg/sunflow/core/bucket/HilbertBucketOrder; getBucketSequence (II)[I 1 -1
Lorg/sunflow/math/MathUtils; clamp (FFF)F 1 -1
Lorg/sunflow/core/filter/FilterFactory; get (Ljava/lang/String;)Lorg/sunflow/core/Filter; 1 -1
Lorg/sunflow/core/filter/TriangleFilter; <init> (F)V 1 -1
Lorg/sunflow/core/filter/TriangleFilter; getSize ()F 1 -1
Lorg/sunflow/math/QMC; generateSigmaTable (I)[I 1 -1
Lorg/sunflow/core/renderer/BucketRenderer; aaDepthToString (I)Ljava/lang/String; 1 -1
Lorg/sunflow/core/renderer/BucketRenderer; render (Lorg/sunflow/core/Display;)V 1 -1
Lorg/sunflow/Benchmark; imageBegin (III)V 1 -1
Lorg/sunflow/core/renderer/BucketRenderer$BucketThread; <init> (Lorg/sunflow/core/renderer/BucketRenderer;I)V 1 -1
Lorg/sunflow/core/renderer/BucketRenderer$BucketThread; run ()V 1 -1
Lorg/sunflow/core/renderer/BucketRenderer; access$000 (Lorg/sunflow/core/renderer/BucketRenderer;)I 1 -1
Lorg/sunflow/core/renderer/BucketRenderer; access$100 (Lorg/sunflow/core/renderer/BucketRenderer;)[I 1 -1
Lorg/sunflow/core/renderer/BucketRenderer; access$012 (Lorg/sunflow/core/renderer/BucketRenderer;I)I 1 -1
Lorg/sunflow/core/renderer/BucketRenderer; access$200 (Lorg/sunflow/core/renderer/BucketRenderer;)Lorg/sunflow/core/Display; 1 -1
Lorg/sunflow/core/renderer/BucketRenderer; access$300 (Lorg/sunflow/core/renderer/BucketRenderer;Lorg/sunflow/core/Display;IIILorg/sunflow/core/IntersectionState;)V 1 -1
Lorg/sunflow/core/renderer/BucketRenderer; renderBucket (Lorg/sunflow/core/Display;IIILorg/sunflow/core/IntersectionState;)V 1 -1
Lorg/sunflow/Benchmark; imagePrepare (IIIII)V 1 -1
Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; <init> (FFI)V 1 -1
Lorg/sunflow/core/renderer/BucketRenderer; refineSamples ([Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;IIIIFLorg/sunflow/core/IntersectionState;)V 1 -1
Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; sampled ()Z 1 -1
Lorg/sunflow/core/renderer/BucketRenderer; computeSubPixel (Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;Lorg/sunflow/core/IntersectionState;)V 1 -1
Lorg/sunflow/core/Scene; getRadiance (Lorg/sunflow/core/IntersectionState;FFDDDI)Lorg/sunflow/core/ShadingState; 1 -1
Lorg/sunflow/core/Camera; getRay (FFIIDDD)Lorg/sunflow/core/Ray; 1 -1
Lorg/sunflow/core/camera/PinholeLens; getRay (FFIIDDD)Lorg/sunflow/core/Ray; 1 -1
Lorg/sunflow/core/Ray; <init> (FFFFFF)V 1 -1
Lorg/sunflow/core/Ray; normalize ()V 1 -1
Lorg/sunflow/core/LightServer; getRadiance (FFILorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)Lorg/sunflow/core/ShadingState; 1 -1
Lorg/sunflow/core/ShadingState; createState (Lorg/sunflow/core/IntersectionState;FFLorg/sunflow/core/Ray;ILorg/sunflow/core/LightServer;)Lorg/sunflow/core/ShadingState; 1 -1
Lorg/sunflow/core/LightServer; getShader (Lorg/sunflow/core/ShadingState;)Lorg/sunflow/core/Shader; 1 -1
Lorg/sunflow/core/shader/DiffuseShader; getRadiance (Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/ShadingState; initLightSamples ()V 1 -1
Lorg/sunflow/core/LightServer; initLightSamples (Lorg/sunflow/core/ShadingState;)V 1 -1
Lorg/sunflow/core/light/TriangleMeshLight$TriangleLight; getSamples (Lorg/sunflow/core/ShadingState;)V 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$2500 (Lorg/sunflow/core/light/TriangleMeshLight;)[I 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$2600 (Lorg/sunflow/core/light/TriangleMeshLight;I)Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$2700 (Lorg/sunflow/core/light/TriangleMeshLight;)[I 1 -1
Lorg/sunflow/core/LightServer; initCausticSamples (Lorg/sunflow/core/ShadingState;)V 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$2800 (Lorg/sunflow/core/light/TriangleMeshLight;I)Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$2900 (Lorg/sunflow/core/light/TriangleMeshLight;)[I 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$3000 (Lorg/sunflow/core/light/TriangleMeshLight;I)Lorg/sunflow/math/Point3; 1 -1
Lorg/sunflow/image/Color; black ()Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/math/Vector3; dot (FFF)F 1 -1
Lorg/sunflow/image/Color; isBlack ()Z 1 -1
Lorg/sunflow/core/ShadingState; iterator ()Ljava/util/Iterator; 1 -1
Lorg/sunflow/core/light/TriangleMeshLight$TriangleLight; intersectTriangleKensler (Lorg/sunflow/core/Ray;)Z 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$700 (Lorg/sunflow/core/light/TriangleMeshLight;)[I 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$800 (Lorg/sunflow/core/light/TriangleMeshLight;)[I 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$900 (Lorg/sunflow/core/light/TriangleMeshLight;)[I 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$1000 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$1100 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/ShadingState$LightSampleIterator; <init> (Lorg/sunflow/core/LightSample;)V 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$1300 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$1400 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$1500 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/LightServer; getIrradiance (Lorg/sunflow/core/ShadingState;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$1700 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$1800 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$1900 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$2000 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/gi/InstantGI; getIrradiance (Lorg/sunflow/core/ShadingState;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/Ray; dot (FFF)F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$2200 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$2300 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/light/TriangleMeshLight; access$2400 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 1 -1
Lorg/sunflow/core/ShadingState; traceShadow (Lorg/sunflow/core/Ray;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/LightServer; getScene ()Lorg/sunflow/core/Scene; 1 -1
Lorg/sunflow/core/Scene; traceShadow (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/image/Color; blend (Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/image/Color; blend (Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/image/Color; madd (FLorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/LightSample; <init> ()V 1 -1
Lorg/sunflow/core/LightSample; setShadowRay (Lorg/sunflow/core/Ray;)V 1 -1
Lorg/sunflow/core/LightSample; setRadiance (Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/core/LightSample; traceShadow (Lorg/sunflow/core/ShadingState;)V 1 -1
Lorg/sunflow/core/ShadingState; addSample (Lorg/sunflow/core/LightSample;)V 1 -1
Lorg/sunflow/image/Color; add (Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/ShadingState; setResult (Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/core/ShadingState$LightSampleIterator; next ()Ljava/lang/Object; 1 -1
Lorg/sunflow/core/ShadingState$LightSampleIterator; next ()Lorg/sunflow/core/LightSample; 1 -1
Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; set (Lorg/sunflow/core/ShadingState;)V 1 -1
Lorg/sunflow/core/ShadingState; getResult ()Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; checkNanInf ()V 1 -1
Lorg/sunflow/image/Color; isNan ()Z 1 -1
Lorg/sunflow/image/Color; isInf ()Z 1 -1
Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; isDifferent (Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;F)Z 1 -1
Lorg/sunflow/image/Color; hasContrast (Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;F)Z 1 -1
Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; processed ()Z 1 -1
Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; bilerp (Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;FF)Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; 1 -1
Lorg/sunflow/core/accel/KDTree; buildTree (FFFFFFLorg/sunflow/core/accel/KDTree$BuildTask;ILorg/sunflow/util/IntArray;ILorg/sunflow/util/IntArray;Lorg/sunflow/core/accel/KDTree$BuildStats;)V 3 0
Lorg/sunflow/core/accel/KDTree; unpackAxis (J)I 3 0
Lorg/sunflow/core/accel/KDTree; unpackSplit (J)F 3 0
Lorg/sunflow/core/accel/KDTree; unpackObject (J)I 3 0
Lorg/sunflow/core/tesselatable/BezierMesh; getPatchPoint (FF[F[F[F[F[FLorg/sunflow/math/Point3;Lorg/sunflow/math/Vector3;)V 3 0
Lorg/sunflow/core/primitive/TriangleMesh$WaldTriangle; intersect (Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V 3 0
Lorg/sunflow/core/primitive/TriangleMesh; intersectPrimitive (Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V 3 0
Lorg/sunflow/math/Matrix4; transformPY (FFF)F 3 0
Lorg/sunflow/core/ShadingState; getRandom (III)D 3 0
Lorg/sunflow/math/Solvers; solveQuadric (DDD)[D 3 0
Lorg/sunflow/core/Ray; transform (Lorg/sunflow/math/Matrix4;)Lorg/sunflow/core/Ray; 3 0
Lorg/sunflow/core/primitive/Sphere; intersectPrimitive (Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V 3 0
Lorg/sunflow/core/gi/InstantGI; getIrradiance (Lorg/sunflow/core/ShadingState;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 3 0
Lorg/sunflow/core/accel/KDTree; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 3 0
Lorg/sunflow/core/light/TriangleMeshLight; getRadiance (Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/ShadingState; includeLights ()Z 1 -1
Lorg/sunflow/core/accel/BoundingIntervalHierarchy; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 3 0
Lorg/sunflow/core/Instance; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 3 0
Lorg/sunflow/core/Geometry; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 3 0
Lorg/sunflow/core/Scene; trace (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 3 0
Lorg/sunflow/core/light/TriangleMeshLight; access$1400 (Lorg/sunflow/core/light/TriangleMeshLight;)[F 3 0
Lorg/sunflow/core/Ray; getMax ()F 3 0
Lorg/sunflow/core/Ray; setMax (F)V 3 0
Lorg/sunflow/core/IntersectionState; hit ()Z 3 1
Lorg/sunflow/core/ShadingState; traceShadow (Lorg/sunflow/core/Ray;)Lorg/sunflow/image/Color; 3 1
Lorg/sunflow/core/Scene; traceShadow (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)Lorg/sunflow/image/Color; 3 1
Lorg/sunflow/core/InstanceList; intersectPrimitive (Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V 3 0
Lorg/sunflow/image/Color; blend (Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 3 0
Lorg/sunflow/core/IntersectionState; getStackTop ()I 3 0
Lorg/sunflow/math/Matrix4; transformPZ (FFF)F 3 0
Lorg/sunflow/core/accel/NullAccelerator; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 3 0
Lorg/sunflow/core/Scene; trace (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 3 1
Lorg/sunflow/core/Ray; transform (Lorg/sunflow/math/Matrix4;)Lorg/sunflow/core/Ray; 3 1
Lorg/sunflow/core/light/TriangleMeshLight$TriangleLight; intersectTriangleKensler (Lorg/sunflow/core/Ray;)Z 3 0
Lorg/sunflow/core/ShadingState; setResult (Lorg/sunflow/image/Color;)V 3 1
Lorg/sunflow/math/Vector3; normalize ()Lorg/sunflow/math/Vector3; 3 0
Lorg/sunflow/core/Instance; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 3 2
Lorg/sunflow/image/Color; madd (FLorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 3 1
Lorg/sunflow/core/Geometry; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 3 2
Lorg/sunflow/math/OrthoNormalBasis; <init> ()V 3 0
Lorg/sunflow/image/Color; blend (Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 3 0
Lorg/sunflow/core/InstanceList; intersectPrimitive (Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V 3 2
Lorg/sunflow/core/Ray; <init> (FFFFFF)V 3 0
Lorg/sunflow/core/accel/KDTree; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 3 1
Ljava/lang/reflect/Array; getLength (Ljava/lang/Object;)I 1 -1
Lorg/sunflow/math/QMC; halton (II)D 3 0
Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; sampled ()Z 3 1
Lorg/sunflow/math/Point3; <init> (FFF)V 3 1
Lorg/sunflow/core/Ray; <init> (Lorg/sunflow/math/Point3;Lorg/sunflow/math/Point3;)V 3 0
Lorg/sunflow/core/primitive/TriangleMesh; intersectPrimitive (Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V 3 2
Lorg/sunflow/core/filter/TriangleFilter; get (FF)F 1 -1
Lorg/sunflow/Benchmark; imageUpdate (IIII[Lorg/sunflow/image/Color;)V 1 -1
Lorg/sunflow/image/Color; toNonLinear ()Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/image/RGBSpace; <clinit> ()V 1 -1
Lorg/sunflow/image/RGBSpace; <init> (FFFFFFFFFF)V 1 -1
Lorg/sunflow/image/RGBSpace; gammaCorrect (F)F 1 -1
Lorg/sunflow/image/RGBSpace; ungammaCorrect (F)F 1 -1
Lorg/sunflow/image/Color; toRGB ()I 1 -1
Lorg/sunflow/math/Vector3; dot (Lorg/sunflow/math/Vector3;Lorg/sunflow/math/Vector3;)F 3 1
Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; <init> (FFI)V 3 0
Lorg/sunflow/core/ShadingState; diffuse (Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 3 0
Lorg/sunflow/core/Ray; <init> (Lorg/sunflow/math/Point3;Lorg/sunflow/math/Vector3;)V 3 0
Lorg/sunflow/core/primitive/TriangleMesh$WaldTriangle; intersect (Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V 3 1
Lorg/sunflow/image/Color; blend (Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 3 1
Lorg/sunflow/core/accel/BoundingIntervalHierarchy; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 3 1
Lorg/sunflow/core/light/TriangleMeshLight$TriangleLight; getSamples (Lorg/sunflow/core/ShadingState;)V 3 0
Lorg/sunflow/core/ShadingState$LightSampleIterator; next ()Lorg/sunflow/core/LightSample; 3 1
Lorg/sunflow/core/LightSample; <init> ()V 3 1
Lorg/sunflow/core/accel/NullAccelerator; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 3 1
Lorg/sunflow/core/primitive/Sphere; intersectPrimitive (Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V 3 1
Lorg/sunflow/core/ShadingState; diffuse (Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 3 1
Lorg/sunflow/core/LightSample; traceShadow (Lorg/sunflow/core/ShadingState;)V 3 0
Lorg/sunflow/core/gi/InstantGI; getIrradiance (Lorg/sunflow/core/ShadingState;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 3 1
Lorg/sunflow/core/LightSample; traceShadow (Lorg/sunflow/core/ShadingState;)V 3 1
Lorg/sunflow/image/Color; copy ()Lorg/sunflow/image/Color; 3 1
Lorg/sunflow/image/Color; blend (Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 3 2
Lorg/sunflow/core/renderer/BucketRenderer; computeSubPixel (Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;Lorg/sunflow/core/IntersectionState;)V 3 0
Lorg/sunflow/core/filter/TriangleFilter; get (FF)F 3 1
Lorg/sunflow/core/LightServer; getRadiance (FFILorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)Lorg/sunflow/core/ShadingState; 3 0
Lorg/sunflow/math/QMC; mod1 (D)D 3 1
Lorg/sunflow/image/RGBSpace; gammaCorrect (F)F 3 0
Lorg/sunflow/math/Vector3; cross (Lorg/sunflow/math/Vector3;Lorg/sunflow/math/Vector3;Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 3 0
Lorg/sunflow/core/shader/DiffuseShader; getRadiance (Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color; 3 1
Lorg/sunflow/core/primitive/TriangleMesh; prepareShadingState (Lorg/sunflow/core/ShadingState;)V 3 0
Lorg/sunflow/core/Instance; transformNormalObjectToWorld (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 3 1
Lorg/sunflow/core/renderer/BucketRenderer; refineSamples ([Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;IIIIFLorg/sunflow/core/IntersectionState;)V 3 0
Lorg/sunflow/core/Ray; normalize ()V 3 0
Lorg/sunflow/image/Color; isNan ()Z 3 0
Lorg/sunflow/core/light/TriangleMeshLight$TriangleLight; getSamples (Lorg/sunflow/core/ShadingState;)V 3 1
Lorg/sunflow/core/Ray; getPoint (Lorg/sunflow/math/Point3;)Lorg/sunflow/math/Point3; 3 0
Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; set (Lorg/sunflow/core/ShadingState;)V 3 0
Lorg/sunflow/core/shader/MirrorShader; getRadiance (Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/ShadingState; includeSpecular ()Z 1 -1
Lorg/sunflow/image/Color; white ()Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/image/Color; sub (Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/ShadingState; traceReflection (Lorg/sunflow/core/Ray;I)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/LightServer; traceReflection (Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;I)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/LightServer; shadeHit (Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/renderer/BucketRenderer; renderBucket (Lorg/sunflow/core/Display;IIILorg/sunflow/core/IntersectionState;)V 3 0
Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; set (Lorg/sunflow/core/ShadingState;)V 3 1
Lorg/sunflow/math/QMC; halton (II)D 3 1
Lorg/sunflow/core/ShadingState; getRandom (III)D 3 1
Lorg/sunflow/core/ShadingState; createState (Lorg/sunflow/core/IntersectionState;FFLorg/sunflow/core/Ray;ILorg/sunflow/core/LightServer;)Lorg/sunflow/core/ShadingState; 3 0
Lorg/sunflow/image/Color; hasContrast (Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;F)Z 3 0
Lorg/sunflow/core/primitive/TriangleMesh; getPoint (I)Lorg/sunflow/math/Point3; 3 1
Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; bilerp (Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;FF)Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; 3 0
Lorg/sunflow/math/Vector3; normalize (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 3 0
Lorg/sunflow/core/ShadingState; init ()V 3 0
Lorg/sunflow/core/Instance; prepareShadingState (Lorg/sunflow/core/ShadingState;)V 3 0
Lorg/sunflow/math/OrthoNormalBasis; makeFromWV (Lorg/sunflow/math/Vector3;Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/OrthoNormalBasis; 3 0
Lorg/sunflow/core/Scene; getRadiance (Lorg/sunflow/core/IntersectionState;FFDDDI)Lorg/sunflow/core/ShadingState; 3 0
Lorg/sunflow/core/shader/GlassShader; getRadiance (Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/ShadingState; traceRefraction (Lorg/sunflow/core/Ray;I)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/LightServer; traceRefraction (Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;I)Lorg/sunflow/image/Color; 1 -1
Lorg/sunflow/core/accel/KDTree; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 3 2
Lorg/sunflow/core/light/TriangleMeshLight$TriangleLight; intersectTriangleKensler (Lorg/sunflow/core/Ray;)Z 3 1
Lorg/sunflow/core/accel/NullAccelerator; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 3 2
Lorg/sunflow/core/primitive/Sphere; prepareShadingState (Lorg/sunflow/core/ShadingState;)V 3 0
Lorg/sunflow/math/Matrix4; transformV (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 3 0
Lorg/sunflow/core/ShadingState; init ()V 3 1
Lorg/sunflow/core/Instance; prepareShadingState (Lorg/sunflow/core/ShadingState;)V 3 1
Lorg/sunflow/math/Vector3; normalize (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 3 1
Lorg/sunflow/core/LightServer; getShader (Lorg/sunflow/core/ShadingState;)Lorg/sunflow/core/Shader; 3 1
Lorg/sunflow/math/OrthoNormalBasis; <init> ()V 3 1
Lorg/sunflow/image/Color; mul (FLorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 3 1
Lorg/sunflow/math/Vector3; negate ()Lorg/sunflow/math/Vector3; 3 1
Lorg/sunflow/math/Matrix4; transformTransposeV (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 3 0
Lorg/sunflow/core/LightServer; traceRefraction (Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;I)Lorg/sunflow/image/Color; 3 0
Lorg/sunflow/math/Vector3; <init> (FFF)V 3 1
Lorg/sunflow/math/Matrix4; transformP (Lorg/sunflow/math/Point3;)Lorg/sunflow/math/Point3; 3 0
Lorg/sunflow/core/shader/GlassShader; getRadiance (Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color; 3 0
Lorg/sunflow/image/Color; toNonLinear ()Lorg/sunflow/image/Color; 3 0
Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; checkNanInf ()V 3 0
Lorg/sunflow/image/RGBSpace; gammaCorrect (F)F 3 1
Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; isDifferent (Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;F)Z 3 0
Lorg/sunflow/core/primitive/TriangleMesh$WaldTriangle; intersect (Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V 3 2
Lorg/sunflow/Benchmark; imageEnd ()V 1 -1
Lorg/sunflow/core/LightServer; showStats ()V 1 -1
Lorg/dacapo/harness/Benchmark; stopIteration ()V 1 -1
Lorg/dacapo/harness/TeePrintStream; closeLog ()V 1 -1
Lorg/dacapo/harness/TeeOutputStream; closeLog ()V 1 -1
Lorg/dacapo/harness/TeeOutputStream; flush ()V 1 -1
LMMTkCallback; stop ()V 1 -1
Lorg/dacapo/harness/Callback; stop ()V 1 -1
Lorg/dacapo/harness/Callback; stop (Z)V 1 -1
Lorg/dacapo/harness/Sunflow; validate (Ljava/lang/String;)Z 1 -1
Lorg/dacapo/harness/Benchmark; getValidate ()Z 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40997; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/sunflow/Benchmark; kernelEnd ()V 1 -1
Lorg/dacapo/harness/Benchmark; validate (Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config; getOutputs (Ljava/lang/String;)Ljava/util/Set; 1 -1
Lorg/dacapo/parser/Config; hasDigest (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config$OutputFile; hasDigest ()Z 1 -1
Lorg/dacapo/parser/Config; getDigest (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/dacapo/harness/Benchmark; fileInScratch (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; isTextFile (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config; filterScratch (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/harness/FileDigest; get (Ljava/lang/String;ZZLjava/io/File;)[B 1 -1
Lorg/dacapo/harness/FileDigest; getText (Ljava/io/File;ZLjava/io/File;)[B 1 -1
Lorg/dacapo/harness/Digest; create ()Ljava/security/MessageDigest; 1 -1
Ljava/security/Security; <clinit> ()V 1 -1
Ljava/security/Security; loadProviders (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lgnu/javax/crypto/jce/GnuCrypto; <init> ()V 1 -1
Lgnu/javax/crypto/jce/GnuCrypto$1; <init> (Lgnu/javax/crypto/jce/GnuCrypto;)V 1 -1
Lgnu/javax/crypto/jce/GnuCrypto$1; run ()Ljava/lang/Object; 1 -1
Lgnu/javax/crypto/jce/GnuSasl; <init> ()V 1 -1
Lgnu/javax/crypto/jce/GnuSasl$1; <init> (Lgnu/javax/crypto/jce/GnuSasl;)V 1 -1
Lgnu/javax/crypto/jce/GnuSasl$1; run ()Ljava/lang/Object; 1 -1
Lgnu/javax/net/ssl/provider/Jessie; <init> ()V 1 -1
Lgnu/javax/net/ssl/provider/Jessie$1; <init> (Lgnu/javax/net/ssl/provider/Jessie;)V 1 -1
Lgnu/javax/net/ssl/provider/Jessie$1; run ()Ljava/lang/Object; 1 -1
Lgnu/javax/security/auth/callback/GnuCallbacks; <init> ()V 1 -1
Lgnu/javax/security/auth/callback/GnuCallbacks$1; <init> (Lgnu/javax/security/auth/callback/GnuCallbacks;)V 1 -1
Lgnu/javax/security/auth/callback/GnuCallbacks$1; run ()Ljava/lang/Object; 1 -1
Ljava/security/Security; getProviders ()[Ljava/security/Provider; 1 -1
Lgnu/java/security/Engine; <clinit> ()V 1 -1
Lgnu/java/security/Engine; getInstance (Ljava/lang/String;Ljava/lang/String;Ljava/security/Provider;)Ljava/lang/Object; 1 -1
Lgnu/java/security/Engine; getInstance (Ljava/lang/String;Ljava/lang/String;Ljava/security/Provider;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lgnu/java/security/Engine; getCompatibleConstructor (Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/reflect/Constructor; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect39442; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect39442; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lgnu/java/security/jce/hash/Sha160Spi; <init> ()V 1 -1
Lgnu/java/security/jce/hash/MessageDigestAdapter; <init> (Ljava/lang/String;)V 1 -1
Lgnu/java/security/hash/HashFactory; getInstance (Ljava/lang/String;)Lgnu/java/security/hash/IMessageDigest; 1 -1
Lgnu/java/security/hash/Sha160; <clinit> ()V 1 -1
Lgnu/java/security/hash/Sha160; <init> ()V 1 -1
Lgnu/java/security/hash/BaseHash; <init> (Ljava/lang/String;II)V 1 -1
Lgnu/java/security/hash/Sha160; resetContext ()V 1 -1
Lgnu/java/security/hash/Sha160; selfTest ()Z 1 -1
Lgnu/java/security/hash/BaseHash; update (B)V 1 -1
Lgnu/java/security/hash/BaseHash; digest ()[B 1 -1
Lgnu/java/security/hash/Sha160; padBuffer ()[B 1 -1
Lgnu/java/security/hash/BaseHash; update ([BII)V 1 -1
Lgnu/java/security/hash/Sha160; transform ([BI)V 1 -1
Lgnu/java/security/hash/Sha160; sha (IIIII[BI)[I 1 -1
Lgnu/java/security/hash/Sha160; getResult ()[B 1 -1
Lgnu/java/security/hash/BaseHash; reset ()V 1 -1
Lgnu/java/security/util/Util; <clinit> ()V 1 -1
Lgnu/java/security/util/Util; toString ([B)Ljava/lang/String; 1 -1
Lgnu/java/security/util/Util; toString ([BII)Ljava/lang/String; 1 -1
Lgnu/java/security/jce/hash/MessageDigestAdapter; <init> (Lgnu/java/security/hash/IMessageDigest;)V 1 -1
Ljava/security/DummyMessageDigest; <init> (Ljava/security/MessageDigestSpi;Ljava/lang/String;)V 1 -1
Ljava/security/DummyMessageDigest; engineDigest ()[B 1 -1
Lgnu/java/security/jce/hash/Sha160Spi; engineDigest ()[B 1 -1
Lgnu/java/security/jce/hash/MessageDigestAdapter; engineDigest ()[B 1 -1
Lorg/dacapo/harness/Digest; toString ([B)Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; hasLines (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config$OutputFile; hasLines ()Z 1 -1
Lorg/dacapo/parser/Config; hasBytes (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config$OutputFile; hasBytes ()Z 1 -1
Lorg/dacapo/parser/Config; checkExists (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/harness/Callback; complete (Ljava/lang/String;Z)V 1 -1
Lorg/dacapo/harness/Callback; complete (Ljava/lang/String;ZZ)V 1 -1
Lorg/dacapo/harness/Benchmark; postIteration (Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/Benchmark; postIterationCleanup (Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; isKept (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/harness/Benchmark; deleteFile (Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/Callback; runAgain ()Z 1 -1
Lorg/dacapo/harness/TeePrintStream; version ()V 1 -1
Lorg/dacapo/harness/TeeOutputStream; version ()V 1 -1
Lorg/sunflow/core/accel/KDTree; radix12 ([JI)V 3 0
Ljava/awt/image/ColorModel; hasAlpha ()Z 3 1
Lorg/sunflow/core/primitive/TriangleMesh$WaldTriangle; <init> (Lorg/sunflow/core/primitive/TriangleMesh;ILorg/sunflow/core/primitive/TriangleMesh$1;)V 3 1
Ljava/awt/image/Raster; getDataElements (IILjava/lang/Object;)Ljava/lang/Object; 3 1
Ljava/awt/image/ComponentColorModel; getRGB (Ljava/lang/Object;)I 3 1
Lorg/sunflow/Benchmark; kernelEnd ()V 3 0
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect46250; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect46250; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy7; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; checkNanInf ()V 3 1
Lorg/sunflow/core/camera/PinholeLens; getRay (FFIIDDD)Lorg/sunflow/core/Ray; 3 0
Lorg/sunflow/core/ShadingState; createState (Lorg/sunflow/core/IntersectionState;FFLorg/sunflow/core/Ray;ILorg/sunflow/core/LightServer;)Lorg/sunflow/core/ShadingState; 3 1
Lorg/sunflow/image/Color; toRGB ()I 3 0
Lorg/sunflow/core/ShadingState; faceforward ()V 3 0
Lorg/sunflow/core/accel/BoundingIntervalHierarchy; intersect (Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V 3 2
Lorg/sunflow/core/renderer/BucketRenderer; refineSamples ([Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;IIIIFLorg/sunflow/core/IntersectionState;)V 3 1
Lorg/sunflow/core/shader/MirrorShader; getRadiance (Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color; 3 0
Lorg/sunflow/core/renderer/BucketRenderer$ImageSample; <init> (FFI)V 3 1
Lorg/sunflow/core/Instance; getShader (I)Lorg/sunflow/core/Shader; 3 1
Lorg/sunflow/core/renderer/BucketRenderer; computeSubPixel (Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;Lorg/sunflow/core/IntersectionState;)V 3 1
Lorg/sunflow/math/OrthoNormalBasis; makeFromW (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/OrthoNormalBasis; 3 0
Lorg/sunflow/math/OrthoNormalBasis; makeFromWV (Lorg/sunflow/math/Vector3;Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/OrthoNormalBasis; 3 1
Lorg/sunflow/math/Point3; normal (Lorg/sunflow/math/Point3;Lorg/sunflow/math/Point3;Lorg/sunflow/math/Point3;)Lorg/sunflow/math/Vector3; 3 0
Lorg/sunflow/core/LightServer; getRadiance (FFILorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)Lorg/sunflow/core/ShadingState; 3 1
Lorg/sunflow/core/Ray; transform (Lorg/sunflow/math/Matrix4;)Lorg/sunflow/core/Ray; 3 2
Lorg/sunflow/math/Vector3; length ()F 3 0
Lorg/sunflow/core/camera/PinholeLens; getRay (FFIIDDD)Lorg/sunflow/core/Ray; 3 1
Lorg/sunflow/core/Instance; getModifier (I)Lorg/sunflow/core/Modifier; 3 1
Lorg/sunflow/core/ShadingState; createRefractionBounceState (Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;I)Lorg/sunflow/core/ShadingState; 3 1
Lorg/sunflow/core/ShadingState; <init> (Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/IntersectionState;Lorg/sunflow/core/Ray;II)V 3 0
Ljava/awt/image/DataBuffer; getElemFloat (I)F 3 1
Ljava/awt/image/DataBufferByte; <init> ([BI)V 3 1
Ljava/awt/image/DataBuffer; <init> (IIII)V 3 0
Lorg/sunflow/core/accel/KDTree; pack (FJII)J 3 0
Lorg/sunflow/core/gi/InstantGI; getIrradiance (Lorg/sunflow/core/ShadingState;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 3 2
Lorg/sunflow/core/Instance; transformVectorObjectToWorld (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 3 1
Lorg/sunflow/core/Camera; getRay (FFIIDDD)Lorg/sunflow/core/Ray; 3 0
Lorg/sunflow/image/Color; hasContrast (Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;F)Z 3 1
Lorg/sunflow/core/Ray; getDirection ()Lorg/sunflow/math/Vector3; 3 1
Lorg/sunflow/Benchmark; imageUpdate (IIII[Lorg/sunflow/image/Color;)V 3 0
Lorg/sunflow/image/Color; toRGB ()I 3 1
Ljava/awt/image/ComponentColorModel; getRGBFloat (Ljava/lang/Object;)[F 3 1
Ljava/awt/image/ColorModel; getComponentSize (I)I 3 1
Lorg/sunflow/core/primitive/Sphere; intersectPrimitive (Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V 3 2
Lorg/sunflow/core/LightServer; traceReflection (Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;I)Lorg/sunflow/image/Color; 3 0
Lorg/sunflow/core/ShadingState; getInstance ()Lorg/sunflow/core/Instance; 3 1
Lorg/sunflow/core/ShadingState; traceRefraction (Lorg/sunflow/core/Ray;I)Lorg/sunflow/image/Color; 3 0
Lorg/sunflow/core/Instance; transformWorldToObject (Lorg/sunflow/math/Point3;)Lorg/sunflow/math/Point3; 3 1
Lorg/sunflow/core/renderer/BucketRenderer; renderBucket (Lorg/sunflow/core/Display;IIILorg/sunflow/core/IntersectionState;)V 3 1
Lorg/sunflow/core/LightServer; traceRefraction (Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;I)Lorg/sunflow/image/Color; 3 1
Lgnu/java/awt/Buffers; createBufferFromData (ILjava/lang/Object;I)Ljava/awt/image/DataBuffer; 3 0
Lorg/sunflow/Benchmark; <init> (IZZZI)V 3 0
Lorg/sunflow/Benchmark; imageUpdate (IIII[Lorg/sunflow/image/Color;)V 3 1
Lorg/sunflow/math/Matrix4; transformTransposeV (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3; 3 1
Lorg/sunflow/core/primitive/Sphere; prepareShadingState (Lorg/sunflow/core/ShadingState;)V 3 1
Lorg/sunflow/math/OrthoNormalBasis; makeFromW (Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/OrthoNormalBasis; 3 1
Lorg/sunflow/core/primitive/TriangleMesh; prepareShadingState (Lorg/sunflow/core/ShadingState;)V 3 1
Ljava/awt/image/DataBufferByte; getElem (II)I 3 1
Lorg/sunflow/core/shader/GlassShader; getRadiance (Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color; 3 1
Lorg/sunflow/core/LightServer; shadeHit (Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color; 3 1
Lorg/sunflow/core/light/TriangleMeshLight$TriangleLight; getSamples (Lorg/sunflow/core/ShadingState;)V 3 2
Lorg/sunflow/core/ShadingState; faceforward ()V 3 1
Lorg/sunflow/core/primitive/TriangleMesh; init ()V 3 0
Ljava/awt/image/ComponentColorModel; getRGB ([F)I 3 0
Lorg/sunflow/core/Camera; getRay (FFIIDDD)Lorg/sunflow/core/Ray; 3 1
Ljava/awt/image/BufferedImage; getRGB (II)I 3 1
Lorg/sunflow/core/primitive/TriangleMesh; getPrimitiveBound (II)F 3 0
Lorg/sunflow/core/accel/KDTree; buildTree (FFFFFFLorg/sunflow/core/accel/KDTree$BuildTask;ILorg/sunflow/util/IntArray;ILorg/sunflow/util/IntArray;Lorg/sunflow/core/accel/KDTree$BuildStats;)V 3 1
Lorg/sunflow/math/QMC; halton (II)D 3 2
Lorg/sunflow/core/ShadingState; diffuse (Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color; 3 2
LMMTkHarness; harnessBegin ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect26119; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/sunflow/core/tesselatable/BezierMesh; bernsteinDeriv (F)[F 3 0
LMMTkHarness; harnessEnd ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect26120; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/dacapo/harness/Benchmark; cleanup ()V 1 -1
Lorg/dacapo/harness/Benchmark; deleteTree (Ljava/io/File;)V 1 -1
Ljava/io/BufferedWriter; <init> (Ljava/io/Writer;)V 1 -1
Ljava/io/BufferedWriter; <init> (Ljava/io/Writer;I)V 1 -1
Ljava/io/BufferedWriter; write (Ljava/lang/String;II)V 1 -1
Ljava/io/BufferedWriter; flush ()V 1 -1
Ljava/io/BufferedWriter; localFlush ()V 1 -1
