Ljava/lang/ClassLoader$StaticData; <clinit> ()V 1 -1
Lgnu/java/net/loader/JarURLLoader; <init> (Ljava/net/URLClassLoader;Lgnu/java/net/loader/URLStreamHandlerCache;Ljava/net/URLStreamHandlerFactory;Ljava/net/URL;Ljava/net/URL;)V 1 -1
Lgnu/java/net/loader/JarURLLoader; <init> (Ljava/net/URLClassLoader;Lgnu/java/net/loader/URLStreamHandlerCache;Ljava/net/URLStreamHandlerFactory;Ljava/net/URL;Ljava/net/URL;Ljava/util/Set;)V 1 -1
Lgnu/java/net/loader/URLLoader; <init> (Ljava/net/URLClassLoader;Lgnu/java/net/loader/URLStreamHandlerCache;Ljava/net/URLStreamHandlerFactory;Ljava/net/URL;Ljava/net/URL;)V 1 -1
Lgnu/java/net/loader/JarURLLoader; initialize ()V 1 -1
Lgnu/java/net/IndexListParser; <init> (Ljava/util/jar/JarFile;Ljava/net/URL;Ljava/net/URL;)V 1 -1
Lgnu/java/net/IndexListParser; clearAll ()V 1 -1
Lgnu/java/net/IndexListParser; getHeaders ()Ljava/util/LinkedHashMap; 1 -1
Lgnu/java/net/loader/JarURLLoader; getClassPath ()Ljava/util/ArrayList; 1 -1
Ljava/lang/InheritableThreadLocal; newChildThread (Ljava/lang/Thread;)V 1 -1
Lgnu/java/net/loader/URLLoader; getClass (Ljava/lang/String;)Ljava/lang/Class; 1 -1
Lgnu/java/net/loader/JarURLLoader; getResource (Ljava/lang/String;)Lgnu/java/net/loader/Resource; 1 -1
Lgnu/java/net/loader/JarURLResource; <init> (Lgnu/java/net/loader/JarURLLoader;Ljava/lang/String;Ljava/util/jar/JarEntry;)V 1 -1
Lgnu/java/net/loader/Resource; <init> (Lgnu/java/net/loader/URLLoader;)V 1 -1
Lgnu/java/net/loader/JarURLResource; getInputStream ()Ljava/io/InputStream; 1 -1
Lgnu/java/net/loader/JarURLResource; getLength ()I 1 -1
Lgnu/java/net/loader/Resource; getCodeSource ()Ljava/security/CodeSource; 1 -1
Lgnu/java/net/loader/JarURLResource; getCertificates ()[Ljava/security/cert/Certificate; 1 -1
LHarness; main ([Ljava/lang/String;)V 1 -1
Lgnu/java/net/loader/Resource; getLoader ()Lgnu/java/net/loader/URLLoader; 1 -1
Lgnu/java/net/loader/JarURLLoader; getManifest ()Ljava/util/jar/Manifest; 1 -1
Lgnu/java/net/loader/URLLoader; getBaseURL ()Ljava/net/URL; 1 -1
Ldacapo/TestHarness; <clinit> ()V 1 -1
Ldacapo/TestHarness; twoDecimalPlaces ()Ljava/text/DecimalFormat; 1 -1
Ljava/text/DecimalFormat; <clinit> ()V 1 -1
Ljava/text/DecimalFormatSymbols; <init> (Ljava/util/Locale;)V 1 -1
Ljava/util/Currency; <clinit> ()V 1 -1
Ljava/util/Currency; getInstance (Ljava/lang/String;)Ljava/util/Currency; 1 -1
Ljava/util/Currency; <init> (Ljava/lang/String;)V 1 -1
Ljava/util/Currency; getInstance (Ljava/util/Locale;)Ljava/util/Currency; 1 -1
Ljava/util/Currency; <init> (Ljava/util/Locale;)V 1 -1
Ljava/util/Currency; getCurrencyCode ()Ljava/lang/String; 1 -1
Ljava/text/DecimalFormatSymbols; setCurrency (Ljava/util/Currency;)V 1 -1
Ljava/util/Currency; getSymbol (Ljava/util/Locale;)Ljava/lang/String; 1 -1
Ljava/text/DecimalFormatSymbols; safeGetChar (Ljava/util/ResourceBundle;Ljava/lang/String;C)C 1 -1
Ljava/text/DecimalFormatSymbols; safeGetString (Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Ljava/text/DecimalFormat; <init> ()V 1 -1
Ljava/text/DecimalFormat; <init> (Ljava/lang/String;)V 1 -1
Ljava/text/DecimalFormatSymbols; <init> ()V 1 -1
Ljava/text/DecimalFormat; <init> (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V 1 -1
Ljava/text/NumberFormat; <init> ()V 1 -1
Ljava/text/Format; <init> ()V 1 -1
Ljava/text/DecimalFormatSymbols; clone ()Ljava/lang/Object; 1 -1
Ljava/text/DecimalFormat; applyPatternWithSymbols (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V 1 -1
Ljava/text/DecimalFormat; setDefaultValues ()V 1 -1
Ljava/text/DecimalFormatSymbols; getMinusSign ()C 1 -1
Ljava/text/DecimalFormat; scanFix (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;IZ)I 1 -1
Ljava/text/DecimalFormatSymbols; getDecimalSeparator ()C 1 -1
Ljava/text/DecimalFormatSymbols; getPatternSeparator ()C 1 -1
Ljava/text/DecimalFormatSymbols; getGroupingSeparator ()C 1 -1
Ljava/text/DecimalFormatSymbols; getDigit ()C 1 -1
Ljava/text/DecimalFormatSymbols; getZeroDigit ()C 1 -1
Ljava/text/DecimalFormatSymbols; getPercent ()C 1 -1
Ljava/text/DecimalFormatSymbols; getPerMill ()C 1 -1
Ljava/text/DecimalFormatSymbols; getCurrencySymbol ()Ljava/lang/String; 1 -1
Ljava/text/DecimalFormat; scanNumberInteger (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;I)I 1 -1
Ljava/text/DecimalFormatSymbols; getExponential ()C 1 -1
Ljava/text/DecimalFormat; scanFractionalPortion (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;I)I 1 -1
Ljava/text/DecimalFormat; setMaximumFractionDigits (I)V 1 -1
Ljava/text/NumberFormat; setMaximumFractionDigits (I)V 1 -1
Ljava/text/NumberFormat; getMinimumFractionDigits ()I 1 -1
Ljava/text/DecimalFormat; setMinimumFractionDigits (I)V 1 -1
Ljava/text/NumberFormat; setMinimumFractionDigits (I)V 1 -1
Ljava/text/NumberFormat; getMaximumFractionDigits ()I 1 -1
Ljava/text/NumberFormat; setGroupingUsed (Z)V 1 -1
Ldacapo/TestHarness; main ([Ljava/lang/String;)V 1 -1
LMMTkCallback; <init> ()V 1 -1
Ldacapo/Callback; <init> ()V 1 -1
LMMTkHarness; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect26119; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect26120; <init> ()V 1 -1
Ldacapo/TestHarness; rmdir (Ljava/io/File;)V 1 -1
Ldacapo/TestHarness; class$ (Ljava/lang/String;)Ljava/lang/Class; 1 -1
Lgnu/java/net/loader/JarURLResource; getURL ()Ljava/net/URL; 1 -1
Ldacapo/TestHarness; <init> (Ljava/io/InputStream;)V 1 -1
Ldacapo/parser/Config; parse (Ljava/io/InputStream;)Ldacapo/parser/Config; 1 -1
Ldacapo/parser/ConfigFile; <clinit> ()V 1 -1
Ldacapo/parser/ConfigFile; jj_la1_0 ()V 1 -1
Ldacapo/parser/ConfigFile; jj_la1_1 ()V 1 -1
Ldacapo/parser/ConfigFile; <init> (Ljava/io/InputStream;)V 1 -1
Ldacapo/parser/SimpleCharStream; <init> (Ljava/io/InputStream;II)V 1 -1
Ldacapo/parser/SimpleCharStream; <init> (Ljava/io/InputStream;III)V 1 -1
Ldacapo/parser/SimpleCharStream; <init> (Ljava/io/Reader;III)V 1 -1
Ldacapo/parser/ConfigFileTokenManager; <clinit> ()V 1 -1
Ldacapo/parser/ConfigFileTokenManager; <init> (Ldacapo/parser/SimpleCharStream;)V 1 -1
Ldacapo/parser/Token; <init> ()V 1 -1
Ldacapo/parser/ConfigFile; configFile ()Ldacapo/parser/Config; 1 -1
Ldacapo/parser/ConfigFile; config ()Ldacapo/parser/Config; 1 -1
Ldacapo/parser/ConfigFile; jj_consume_token (I)Ldacapo/parser/Token; 1 -1
Ldacapo/parser/ConfigFileTokenManager; getNextToken ()Ldacapo/parser/Token; 1 -1
Ldacapo/parser/SimpleCharStream; BeginToken ()C 1 -1
Ldacapo/parser/SimpleCharStream; readChar ()C 1 -1
Ldacapo/parser/SimpleCharStream; FillBuff ()V 1 -1
Ldacapo/parser/SimpleCharStream; UpdateLineColumn (C)V 1 -1
Ldacapo/parser/SimpleCharStream; backup (I)V 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa0_0 ()I 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa1_0 (J)I 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa2_0 (JJ)I 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa3_0 (JJ)I 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa4_0 (JJ)I 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa5_0 (JJ)I 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa6_0 (JJ)I 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa7_0 (JJ)I 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa8_0 (JJ)I 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjStartNfaWithStates_0 (III)I 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjMoveNfa_0 (II)I 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjFillToken ()Ldacapo/parser/Token; 1 -1
Ldacapo/parser/Token; newToken (I)Ldacapo/parser/Token; 1 -1
Ldacapo/parser/SimpleCharStream; getBeginLine ()I 1 -1
Ldacapo/parser/SimpleCharStream; getBeginColumn ()I 1 -1
Ldacapo/parser/SimpleCharStream; getEndLine ()I 1 -1
Ldacapo/parser/SimpleCharStream; getEndColumn ()I 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjStartNfa_0 (IJ)I 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjStopStringLiteralDfa_0 (IJ)I 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjCheckNAdd (I)V 1 -1
Ldacapo/parser/SimpleCharStream; GetImage ()Ljava/lang/String; 1 -1
Ldacapo/parser/Config; <init> (Ljava/lang/String;)V 1 -1
Ldacapo/parser/ConfigFile; jj_ntk ()I 1 -1
Ldacapo/parser/Config; setClass (Ljava/lang/String;)V 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjStopAtPos (II)I 1 -1
Ldacapo/parser/ConfigFile; sizeSpec (Ldacapo/parser/Config;)V 1 -1
Ldacapo/parser/ConfigFile; sizeClause (Ldacapo/parser/Config;Ljava/lang/String;)V 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjCheckNAddStates (II)V 1 -1
Ldacapo/parser/ConfigFile; string ()Ljava/lang/String; 1 -1
Ldacapo/parser/ConfigFile; unQuote (Ldacapo/parser/Token;)Ljava/lang/String; 1 -1
Ldacapo/parser/Config; addSize (Ljava/lang/String;Ljava/util/Vector;)V 1 -1
Ldacapo/parser/Config$Size; <init> (Ldacapo/parser/Config;Ljava/lang/String;Ljava/util/Vector;)V 1 -1
Ljava/lang/reflect/Array; newInstance (Ljava/lang/Class;I)Ljava/lang/Object; 1 -1
Ldacapo/parser/ConfigFile; outputFile (Ldacapo/parser/Config;Ljava/lang/String;)V 1 -1
Ldacapo/parser/Config; addOutputFile (Ljava/lang/String;Ljava/lang/String;)V 1 -1
Ldacapo/parser/Config; getSize (Ljava/lang/String;)Ldacapo/parser/Config$Size; 1 -1
Ldacapo/parser/Config$Size; addOutputFile (Ljava/lang/String;)V 1 -1
Ldacapo/parser/Config$OutputFile; <init> (Ldacapo/parser/Config;Ljava/lang/String;)V 1 -1
Ldacapo/parser/Config; setTextFile (Ljava/lang/String;Ljava/lang/String;Z)V 1 -1
Ldacapo/parser/Config$Size; getOutputFile (Ljava/lang/String;)Ldacapo/parser/Config$OutputFile; 1 -1
Ldacapo/parser/Config; setFilterScratch (Ljava/lang/String;Ljava/lang/String;Z)V 1 -1
Ldacapo/parser/ConfigFile; outputClause (Ldacapo/parser/Config;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Ldacapo/parser/ConfigFile; hex ()Ljava/lang/String; 1 -1
Ldacapo/parser/ConfigFile; unHex (Ldacapo/parser/Token;)Ljava/lang/String; 1 -1
Ldacapo/parser/Config; setDigest (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Ldacapo/parser/ConfigFile; digestOption (Ldacapo/parser/Config;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa9_0 (JJ)I 1 -1
Ldacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa10_0 (JJ)I 1 -1
Ldacapo/parser/ConfigFile; description (Ldacapo/parser/Config;)V 1 -1
Ldacapo/parser/ConfigFile; descElement (Ldacapo/parser/Config;)V 1 -1
Ldacapo/parser/ConfigFile; descId ()Ljava/lang/String; 1 -1
Ldacapo/parser/Config; addDesc (Ljava/lang/String;Ljava/lang/String;)V 1 -1
Ldacapo/Benchmark; <clinit> ()V 1 -1
Ldacapo/TestHarness; findClass ()Ljava/lang/Class; 1 -1
Ldacapo/TestHarness; runBenchmark (Ljava/io/File;Ljava/lang/String;Ldacapo/TestHarness;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40641; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40641; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Ldacapo/antlr/AntlrHarness; <init> (Ldacapo/parser/Config;Ljava/io/File;)V 1 -1
Ldacapo/Benchmark; <init> (Ldacapo/parser/Config;Ljava/io/File;)V 1 -1
Ldacapo/TeePrintStream; <init> (Ljava/io/OutputStream;Ljava/io/File;)V 1 -1
Ldacapo/TeeOutputStream; <init> (Ljava/io/OutputStream;Ljava/io/File;)V 1 -1
Ldacapo/TeeOutputStream; newLog ()V 1 -1
Ldacapo/antlr/AntlrHarness; prepare ()V 1 -1
Ldacapo/Benchmark; prepare ()V 1 -1
Ldacapo/Benchmark; unpackZipFileResource (Ljava/lang/String;Ljava/io/File;)V 1 -1
Ldacapo/Benchmark; getURL (Ljava/lang/String;)Ljava/net/URL; 1 -1
Ldacapo/Benchmark; class$ (Ljava/lang/String;)Ljava/lang/Class; 1 -1
Ldacapo/Benchmark; unpackZipStream (Ljava/io/BufferedInputStream;Ljava/io/File;)V 1 -1
Ldacapo/Benchmark; copyFileTo (Ljava/io/File;Ljava/io/File;)V 1 -1
Ldacapo/Benchmark; copyFile (Ljava/io/File;Ljava/io/File;)V 1 -1
Ldacapo/Benchmark; run (Ldacapo/Callback;Ljava/lang/String;Z)Z 1 -1
Ldacapo/Benchmark; preIteration (Ljava/lang/String;)V 1 -1
Ldacapo/Callback; startWarmup (Ljava/lang/String;)V 1 -1
Ldacapo/Callback; start (Ljava/lang/String;Z)V 1 -1
Ldacapo/Benchmark; startIteration ()V 1 -1
Ldacapo/TeePrintStream; openLog ()V 1 -1
Ldacapo/TeeOutputStream; openLog ()V 1 -1
Ldacapo/antlr/AntlrHarness; iterate (Ljava/lang/String;)V 1 -1
Ldacapo/parser/Config; getArgs (Ljava/lang/String;)[Ljava/lang/String; 1 -1
Ldacapo/TeeOutputStream; write (I)V 1 -1
Lantlr/Tool; <clinit> ()V 1 -1
Lantlr/Tool; main ([Ljava/lang/String;)V 1 -1
Lantlr/Tool; <init> ()V 1 -1
Lantlr/collections/impl/BitSet; <init> ()V 1 -1
Lantlr/collections/impl/BitSet; <init> (I)V 1 -1
Lantlr/DefaultToolErrorHandler; <init> (Lantlr/Tool;)V 1 -1
Lantlr/JavaCharFormatter; <init> ()V 1 -1
Lantlr/Tool; doEverything ([Ljava/lang/String;)I 1 -1
Lantlr/preprocessor/Tool; <init> (Lantlr/Tool;[Ljava/lang/String;)V 1 -1
Lantlr/preprocessor/Tool; processArguments ([Ljava/lang/String;)V 1 -1
Lantlr/Tool; setOutputDirectory (Ljava/lang/String;)V 1 -1
Lantlr/collections/impl/Vector; <init> (I)V 1 -1
Lantlr/collections/impl/Vector; appendElement (Ljava/lang/Object;)V 1 -1
Lantlr/collections/impl/Vector; ensureCapacity (I)V 1 -1
Lantlr/preprocessor/Tool; preprocess ()Z 1 -1
Lantlr/preprocessor/Hierarchy; <init> (Lantlr/Tool;)V 1 -1
Lantlr/preprocessor/Grammar; <init> (Lantlr/Tool;Ljava/lang/String;Ljava/lang/String;Lantlr/collections/impl/IndexedVector;)V 1 -1
Lantlr/preprocessor/Grammar; setPredefined (Z)V 1 -1
Lantlr/preprocessor/Grammar; getName ()Ljava/lang/String; 1 -1
Lantlr/collections/impl/Vector; elements ()Ljava/util/Enumeration; 1 -1
Lantlr/collections/impl/VectorEnumerator; <init> (Lantlr/collections/impl/Vector;)V 1 -1
Lantlr/collections/impl/VectorEnumerator; hasMoreElements ()Z 1 -1
Lantlr/collections/impl/VectorEnumerator; nextElement ()Ljava/lang/Object; 1 -1
Lantlr/preprocessor/Hierarchy; readGrammarFile (Ljava/lang/String;)V 1 -1
Lantlr/preprocessor/GrammarFile; <init> (Lantlr/Tool;Ljava/lang/String;)V 1 -1
Lantlr/collections/impl/IndexedVector; <init> ()V 1 -1
Lantlr/preprocessor/Hierarchy; addGrammarFile (Lantlr/preprocessor/GrammarFile;)V 1 -1
Lantlr/preprocessor/GrammarFile; getName ()Ljava/lang/String; 1 -1
Lantlr/preprocessor/PreprocessorLexer; <clinit> ()V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mk_tokenSet_0 ()[J 1 -1
Lantlr/collections/impl/BitSet; <init> ([J)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mk_tokenSet_1 ()[J 1 -1
Lantlr/preprocessor/PreprocessorLexer; mk_tokenSet_2 ()[J 1 -1
Lantlr/preprocessor/PreprocessorLexer; mk_tokenSet_3 ()[J 1 -1
Lantlr/preprocessor/PreprocessorLexer; mk_tokenSet_4 ()[J 1 -1
Lantlr/preprocessor/PreprocessorLexer; mk_tokenSet_5 ()[J 1 -1
Lantlr/preprocessor/PreprocessorLexer; mk_tokenSet_6 ()[J 1 -1
Lantlr/preprocessor/PreprocessorLexer; mk_tokenSet_7 ()[J 1 -1
Lantlr/preprocessor/PreprocessorLexer; mk_tokenSet_8 ()[J 1 -1
Lantlr/preprocessor/PreprocessorLexer; mk_tokenSet_9 ()[J 1 -1
Lantlr/preprocessor/PreprocessorLexer; mk_tokenSet_10 ()[J 1 -1
Lantlr/preprocessor/PreprocessorLexer; <init> (Ljava/io/Reader;)V 1 -1
Lantlr/CharBuffer; <init> (Ljava/io/Reader;)V 1 -1
Lantlr/InputBuffer; <init> ()V 1 -1
Lantlr/CharQueue; <init> (I)V 1 -1
Lantlr/CharQueue; init (I)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; <init> (Lantlr/InputBuffer;)V 1 -1
Lantlr/LexerSharedInputState; <init> (Lantlr/InputBuffer;)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; <init> (Lantlr/LexerSharedInputState;)V 1 -1
Lantlr/CharScanner; <init> (Lantlr/LexerSharedInputState;)V 1 -1
Lantlr/CharScanner; <init> ()V 1 -1
Lantlr/ANTLRStringBuffer; <init> ()V 1 -1
Lantlr/ANTLRHashString; <init> (Lantlr/CharScanner;)V 1 -1
Lantlr/CharScanner; setTokenObjectClass (Ljava/lang/String;)V 1 -1
Lantlr/Token; <clinit> ()V 1 -1
Lantlr/Token; <init> (ILjava/lang/String;)V 1 -1
Lantlr/Token; setText (Ljava/lang/String;)V 1 -1
Lantlr/CharScanner; setCaseSensitive (Z)V 1 -1
Lantlr/ANTLRHashString; <init> (Ljava/lang/String;Lantlr/CharScanner;)V 1 -1
Lantlr/ANTLRHashString; setString (Ljava/lang/String;)V 1 -1
Lantlr/ANTLRHashString; hashCode ()I 1 -1
Lantlr/ANTLRHashString; length ()I 1 -1
Lantlr/CharScanner; getCaseSensitiveLiterals ()Z 1 -1
Lantlr/ANTLRHashString; charAt (I)C 1 -1
Lantlr/ANTLRHashString; equals (Ljava/lang/Object;)Z 1 -1
Lantlr/CharScanner; setFilename (Ljava/lang/String;)V 1 -1
Lantlr/preprocessor/Preprocessor; <clinit> ()V 1 -1
Lantlr/preprocessor/Preprocessor; mk_tokenSet_0 ()[J 1 -1
Lantlr/preprocessor/Preprocessor; mk_tokenSet_1 ()[J 1 -1
Lantlr/preprocessor/Preprocessor; mk_tokenSet_2 ()[J 1 -1
Lantlr/preprocessor/Preprocessor; mk_tokenSet_3 ()[J 1 -1
Lantlr/preprocessor/Preprocessor; mk_tokenSet_4 ()[J 1 -1
Lantlr/preprocessor/Preprocessor; mk_tokenSet_5 ()[J 1 -1
Lantlr/preprocessor/Preprocessor; mk_tokenSet_6 ()[J 1 -1
Lantlr/preprocessor/Preprocessor; mk_tokenSet_7 ()[J 1 -1
Lantlr/preprocessor/Preprocessor; <init> (Lantlr/TokenStream;)V 1 -1
Lantlr/preprocessor/Preprocessor; <init> (Lantlr/TokenStream;I)V 1 -1
Lantlr/LLkParser; <init> (Lantlr/TokenStream;I)V 1 -1
Lantlr/Parser; <init> ()V 1 -1
Lantlr/ParserSharedInputState; <init> ()V 1 -1
Lantlr/Parser; <init> (Lantlr/ParserSharedInputState;)V 1 -1
Lantlr/TokenBuffer; <init> (Lantlr/TokenStream;)V 1 -1
Lantlr/TokenQueue; <init> (I)V 1 -1
Lantlr/TokenQueue; init (I)V 1 -1
Lantlr/Parser; setTokenBuffer (Lantlr/TokenBuffer;)V 1 -1
Lantlr/preprocessor/Preprocessor; setTool (Lantlr/Tool;)V 1 -1
Lantlr/Parser; setFilename (Ljava/lang/String;)V 1 -1
Lantlr/preprocessor/Preprocessor; grammarFile (Lantlr/preprocessor/Hierarchy;Ljava/lang/String;)V 1 -1
Lantlr/LLkParser; LA (I)I 1 -1
Lantlr/TokenBuffer; LA (I)I 1 -1
Lantlr/TokenBuffer; fill (I)V 1 -1
Lantlr/TokenBuffer; syncConsume ()V 1 -1
Lantlr/preprocessor/PreprocessorLexer; nextToken ()Lantlr/Token; 1 -1
Lantlr/CharScanner; resetText ()V 1 -1
Lantlr/ANTLRStringBuffer; setLength (I)V 1 -1
Lantlr/CharScanner; LA (I)C 1 -1
Lantlr/InputBuffer; LA (I)C 1 -1
Lantlr/CharBuffer; fill (I)V 1 -1
Lantlr/InputBuffer; syncConsume ()V 1 -1
Lantlr/CharQueue; append (C)V 1 -1
Lantlr/CharQueue; elementAt (I)C 1 -1
Lantlr/preprocessor/PreprocessorLexer; mID_OR_KEYWORD (Z)V 1 -1
Lantlr/ANTLRStringBuffer; length ()I 1 -1
Lantlr/preprocessor/PreprocessorLexer; mID (Z)V 1 -1
Lantlr/CharScanner; matchRange (CC)V 1 -1
Lantlr/CharScanner; consume ()V 1 -1
Lantlr/CharScanner; append (C)V 1 -1
Lantlr/ANTLRStringBuffer; append (C)V 1 -1
Lantlr/InputBuffer; consume ()V 1 -1
Lantlr/CharQueue; removeFirst ()V 1 -1
Lantlr/ANTLRStringBuffer; getBuffer ()[C 1 -1
Lantlr/CharScanner; testLiteralsTable (Ljava/lang/String;I)I 1 -1
Lantlr/CharScanner; makeToken (I)Lantlr/Token; 1 -1
Lantlr/CommonToken; <init> ()V 1 -1
Lantlr/Token; <init> ()V 1 -1
Lantlr/Token; setType (I)V 1 -1
Lantlr/CommonToken; setColumn (I)V 1 -1
Lantlr/CommonToken; setLine (I)V 1 -1
Lantlr/CommonToken; setText (Ljava/lang/String;)V 1 -1
Lantlr/Token; getType ()I 1 -1
Lantlr/collections/impl/BitSet; member (I)Z 1 -1
Lantlr/collections/impl/BitSet; wordNumber (I)I 1 -1
Lantlr/collections/impl/BitSet; bitMask (I)J 1 -1
Lantlr/CommonToken; getText ()Ljava/lang/String; 1 -1
Lantlr/preprocessor/PreprocessorLexer; mWS (Z)V 1 -1
Lantlr/CharScanner; match (C)V 1 -1
Lantlr/CharScanner; testLiteralsTable (I)I 1 -1
Lantlr/ANTLRHashString; setBuffer ([CI)V 1 -1
Lantlr/TokenQueue; append (Lantlr/Token;)V 1 -1
Lantlr/TokenQueue; elementAt (I)Lantlr/Token; 1 -1
Lantlr/preprocessor/Preprocessor; optionSpec (Lantlr/preprocessor/Grammar;)Lantlr/collections/impl/IndexedVector; 1 -1
Lantlr/Parser; match (I)V 1 -1
Lantlr/LLkParser; consume ()V 1 -1
Lantlr/TokenBuffer; consume ()V 1 -1
Lantlr/TokenQueue; removeFirst ()V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mNEWLINE (Z)V 1 -1
Lantlr/CharScanner; newline ()V 1 -1
Lantlr/CharScanner; tab ()V 1 -1
Lantlr/CharScanner; getColumn ()I 1 -1
Lantlr/CharScanner; setColumn (I)V 1 -1
Lantlr/LLkParser; LT (I)Lantlr/Token; 1 -1
Lantlr/TokenBuffer; LT (I)Lantlr/Token; 1 -1
Lantlr/preprocessor/PreprocessorLexer; mASSIGN_RHS (Z)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mSTRING_LITERAL (Z)V 1 -1
Lantlr/CharScanner; matchNot (C)V 1 -1
Lantlr/preprocessor/Option; <init> (Ljava/lang/String;Ljava/lang/String;Lantlr/preprocessor/Grammar;)V 1 -1
Lantlr/preprocessor/Option; setEnclosingGrammar (Lantlr/preprocessor/Grammar;)V 1 -1
Lantlr/preprocessor/Option; getName ()Ljava/lang/String; 1 -1
Lantlr/collections/impl/IndexedVector; appendElement (Ljava/lang/Object;Ljava/lang/Object;)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mRCURLY (Z)V 1 -1
Lantlr/preprocessor/Preprocessor; class_def (Ljava/lang/String;Lantlr/preprocessor/Hierarchy;)Lantlr/preprocessor/Grammar; 1 -1
Lantlr/collections/impl/IndexedVector; <init> (I)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mSEMI (Z)V 1 -1
Lantlr/preprocessor/Hierarchy; getGrammar (Ljava/lang/String;)Lantlr/preprocessor/Grammar; 1 -1
Lantlr/preprocessor/Hierarchy; getTool ()Lantlr/Tool; 1 -1
Lantlr/preprocessor/PreprocessorLexer; mCOMMENT (Z)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mSL_COMMENT (Z)V 1 -1
Lantlr/CharScanner; match (Ljava/lang/String;)V 1 -1
Lantlr/preprocessor/Grammar; setOptions (Lantlr/collections/impl/IndexedVector;)V 1 -1
Lantlr/preprocessor/Preprocessor; rule (Lantlr/preprocessor/Grammar;)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mRULE_BLOCK (Z)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mALT (Z)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mELEMENT (Z)V 1 -1
Lantlr/CharScanner; match (Lantlr/collections/impl/BitSet;)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mSUBRULE_BLOCK (Z)V 1 -1
Lantlr/preprocessor/Preprocessor; exceptionGroup ()Ljava/lang/String; 1 -1
Lantlr/preprocessor/Rule; <init> (Ljava/lang/String;Ljava/lang/String;Lantlr/collections/impl/IndexedVector;Lantlr/preprocessor/Grammar;)V 1 -1
Lantlr/preprocessor/Rule; setEnclosingGrammar (Lantlr/preprocessor/Grammar;)V 1 -1
Lantlr/preprocessor/Rule; setThrowsSpec (Ljava/lang/String;)V 1 -1
Lantlr/preprocessor/Rule; setVisibility (Ljava/lang/String;)V 1 -1
Lantlr/preprocessor/Grammar; addRule (Lantlr/preprocessor/Rule;)V 1 -1
Lantlr/preprocessor/Rule; getName ()Ljava/lang/String; 1 -1
Lantlr/preprocessor/Hierarchy; getFile (Ljava/lang/String;)Lantlr/preprocessor/GrammarFile; 1 -1
Lantlr/preprocessor/GrammarFile; setOptions (Lantlr/collections/impl/IndexedVector;)V 1 -1
Lantlr/preprocessor/Grammar; setFileName (Ljava/lang/String;)V 1 -1
Lantlr/preprocessor/Hierarchy; addGrammar (Lantlr/preprocessor/Grammar;)V 1 -1
Lantlr/preprocessor/Grammar; setHierarchy (Lantlr/preprocessor/Hierarchy;)V 1 -1
Lantlr/preprocessor/Grammar; getFileName ()Ljava/lang/String; 1 -1
Lantlr/preprocessor/GrammarFile; addGrammar (Lantlr/preprocessor/Grammar;)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mCHAR_LITERAL (Z)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mESC (Z)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mACTION (Z)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mARG_ACTION (Z)V 1 -1
Lantlr/CharScanner; uponEOF ()V 1 -1
Lantlr/preprocessor/Rule; setReturnValue (Ljava/lang/String;)V 1 -1
Lantlr/preprocessor/Rule; setInitAction (Ljava/lang/String;)V 1 -1
Lantlr/preprocessor/Hierarchy; verifyThatHierarchyIsComplete ()Z 1 -1
Lantlr/preprocessor/Grammar; getSuperGrammarName ()Ljava/lang/String; 1 -1
Lantlr/preprocessor/Grammar; getSuperGrammar ()Lantlr/preprocessor/Grammar; 1 -1
Lantlr/preprocessor/Hierarchy; findRoot (Lantlr/preprocessor/Grammar;)Lantlr/preprocessor/Grammar; 1 -1
Lantlr/preprocessor/Grammar; setType (Ljava/lang/String;)V 1 -1
Lantlr/preprocessor/Hierarchy; expandGrammarsInFile (Ljava/lang/String;)V 1 -1
Lantlr/preprocessor/GrammarFile; getGrammars ()Lantlr/collections/impl/IndexedVector; 1 -1
Lantlr/collections/impl/IndexedVector; elements ()Ljava/util/Enumeration; 1 -1
Lantlr/preprocessor/Grammar; expandInPlace ()V 1 -1
Lantlr/preprocessor/Grammar; isPredefined ()Z 1 -1
Lantlr/preprocessor/GrammarFile; nameForExpandedGrammarFile (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/preprocessor/Tool; preprocessedArgList ()[Ljava/lang/String; 1 -1
Lantlr/Tool; processArguments ([Ljava/lang/String;)V 1 -1
Lantlr/Tool; setArgOK (I)V 1 -1
Lantlr/collections/impl/BitSet; add (I)V 1 -1
Lantlr/Tool; getGrammarReader ()Ljava/io/Reader; 1 -1
Lantlr/ANTLRLexer; <clinit> ()V 1 -1
Lantlr/ANTLRLexer; mk_tokenSet_0 ()[J 1 -1
Lantlr/ANTLRLexer; mk_tokenSet_1 ()[J 1 -1
Lantlr/ANTLRLexer; mk_tokenSet_2 ()[J 1 -1
Lantlr/ANTLRLexer; mk_tokenSet_3 ()[J 1 -1
Lantlr/ANTLRLexer; mk_tokenSet_4 ()[J 1 -1
Lantlr/ANTLRLexer; mk_tokenSet_5 ()[J 1 -1
Lantlr/ANTLRLexer; <init> (Ljava/io/Reader;)V 1 -1
Lantlr/ANTLRLexer; <init> (Lantlr/InputBuffer;)V 1 -1
Lantlr/ANTLRLexer; <init> (Lantlr/LexerSharedInputState;)V 1 -1
Lantlr/LLkAnalyzer; <init> (Lantlr/Tool;)V 1 -1
Lantlr/MakeGrammar; <init> (Lantlr/Tool;[Ljava/lang/String;Lantlr/LLkAnalyzer;)V 1 -1
Lantlr/DefineGrammarSymbols; <init> (Lantlr/Tool;[Ljava/lang/String;Lantlr/LLkAnalyzer;)V 1 -1
Lantlr/collections/impl/Vector; <init> ()V 1 -1
Lantlr/CommonToken; <init> (ILjava/lang/String;)V 1 -1
Lantlr/collections/impl/LList; <init> ()V 1 -1
Lantlr/ANTLRParser; <clinit> ()V 1 -1
Lantlr/ANTLRParser; mk_tokenSet_0 ()[J 1 -1
Lantlr/ANTLRParser; mk_tokenSet_1 ()[J 1 -1
Lantlr/ANTLRParser; mk_tokenSet_2 ()[J 1 -1
Lantlr/ANTLRParser; mk_tokenSet_3 ()[J 1 -1
Lantlr/ANTLRParser; mk_tokenSet_4 ()[J 1 -1
Lantlr/ANTLRParser; mk_tokenSet_5 ()[J 1 -1
Lantlr/ANTLRParser; mk_tokenSet_6 ()[J 1 -1
Lantlr/ANTLRParser; mk_tokenSet_7 ()[J 1 -1
Lantlr/ANTLRParser; mk_tokenSet_8 ()[J 1 -1
Lantlr/ANTLRParser; mk_tokenSet_9 ()[J 1 -1
Lantlr/ANTLRParser; mk_tokenSet_10 ()[J 1 -1
Lantlr/ANTLRParser; mk_tokenSet_11 ()[J 1 -1
Lantlr/ANTLRParser; <init> (Lantlr/TokenBuffer;Lantlr/ANTLRGrammarParseBehavior;Lantlr/Tool;)V 1 -1
Lantlr/LLkParser; <init> (Lantlr/TokenBuffer;I)V 1 -1
Lantlr/ANTLRParser; grammar ()V 1 -1
Lantlr/ANTLRLexer; nextToken ()Lantlr/Token; 1 -1
Lantlr/ANTLRLexer; mRULE_REF (Z)V 1 -1
Lantlr/ANTLRLexer; mINTERNAL_RULE_REF (Z)I 1 -1
Lantlr/ANTLRLexer; mWS_LOOP (Z)V 1 -1
Lantlr/ANTLRLexer; mWS (Z)V 1 -1
Lantlr/ANTLRParser; fileOptionsSpec ()V 1 -1
Lantlr/ANTLRParser; id ()Lantlr/Token; 1 -1
Lantlr/ANTLRLexer; mASSIGN (Z)V 1 -1
Lantlr/ANTLRParser; optionValue ()Lantlr/Token; 1 -1
Lantlr/ANTLRLexer; mSTRING_LITERAL (Z)V 1 -1
Lantlr/Parser; getInputState ()Lantlr/ParserSharedInputState; 1 -1
Lantlr/DefineGrammarSymbols; setFileOption (Lantlr/Token;Lantlr/Token;Ljava/lang/String;)V 1 -1
Lantlr/StringUtils; stripFront (Ljava/lang/String;C)Ljava/lang/String; 1 -1
Lantlr/StringUtils; stripBack (Ljava/lang/String;C)Ljava/lang/String; 1 -1
Lantlr/ANTLRLexer; mSEMI (Z)V 1 -1
Lantlr/ANTLRLexer; mRCURLY (Z)V 1 -1
Lantlr/ANTLRParser; classDef ()V 1 -1
Lantlr/ANTLRLexer; mTOKEN_REF (Z)V 1 -1
Lantlr/Parser; mark ()I 1 -1
Lantlr/TokenBuffer; mark ()I 1 -1
Lantlr/TokenQueue; expand ()V 1 -1
Lantlr/Parser; getFilename ()Ljava/lang/String; 1 -1
Lantlr/MismatchedTokenException; <init> ([Ljava/lang/String;Lantlr/Token;IZLjava/lang/String;)V 1 -1
Lantlr/CommonToken; getLine ()I 1 -1
Lantlr/CommonToken; getColumn ()I 1 -1
Lantlr/RecognitionException; <init> (Ljava/lang/String;Ljava/lang/String;II)V 1 -1
Lantlr/ANTLRException; <init> (Ljava/lang/String;)V 1 -1
Lantlr/Parser; rewind (I)V 1 -1
Lantlr/TokenBuffer; rewind (I)V 1 -1
Lantlr/ANTLRParser; parserSpec (Ljava/lang/String;)V 1 -1
Lantlr/DefineGrammarSymbols; startParser (Ljava/lang/String;Lantlr/Token;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lantlr/MakeGrammar; reset ()V 1 -1
Lantlr/DefineGrammarSymbols; reset ()V 1 -1
Lantlr/DefineGrammarSymbols; findGrammar (Ljava/lang/String;)Lantlr/Grammar; 1 -1
Lantlr/ParserGrammar; <init> (Ljava/lang/String;Lantlr/Tool;Ljava/lang/String;)V 1 -1
Lantlr/Grammar; <init> (Ljava/lang/String;Lantlr/Tool;Ljava/lang/String;)V 1 -1
Lantlr/ParserGrammar; processArguments ([Ljava/lang/String;)V 1 -1
Lantlr/Grammar; setFilename (Ljava/lang/String;)V 1 -1
Lantlr/ANTLRParser; parserOptionsSpec ()V 1 -1
Lantlr/ANTLRParser; qualifiedID ()Lantlr/Token; 1 -1
Lantlr/DefineGrammarSymbols; setGrammarOption (Lantlr/Token;Lantlr/Token;)V 1 -1
Lantlr/ParserGrammar; setOption (Ljava/lang/String;Lantlr/Token;)Z 1 -1
Lantlr/Grammar; setOption (Ljava/lang/String;Lantlr/Token;)Z 1 -1
Lantlr/ANTLRLexer; mCOMMENT (Z)V 1 -1
Lantlr/ANTLRLexer; mSL_COMMENT (Z)V 1 -1
Lantlr/DefineGrammarSymbols; endOptions ()V 1 -1
Lantlr/Grammar; getClassName ()Ljava/lang/String; 1 -1
Lantlr/SimpleTokenManager; <init> (Ljava/lang/String;Lantlr/Tool;)V 1 -1
Lantlr/TokenSymbol; <init> (Ljava/lang/String;)V 1 -1
Lantlr/GrammarSymbol; <init> (Ljava/lang/String;)V 1 -1
Lantlr/TokenSymbol; setTokenType (I)V 1 -1
Lantlr/SimpleTokenManager; define (Lantlr/TokenSymbol;)V 1 -1
Lantlr/TokenSymbol; getTokenType ()I 1 -1
Lantlr/GrammarSymbol; getId ()Ljava/lang/String; 1 -1
Lantlr/collections/impl/Vector; setElementAt (Ljava/lang/Object;I)V 1 -1
Lantlr/SimpleTokenManager; mapToTokenSymbol (Ljava/lang/String;Lantlr/TokenSymbol;)V 1 -1
Lantlr/Grammar; setTokenManager (Lantlr/TokenManager;)V 1 -1
Lantlr/ANTLRParser; rules ()V 1 -1
Lantlr/ANTLRLexer; mCOLON (Z)V 1 -1
Lantlr/ANTLRParser; rule ()V 1 -1
Lantlr/MakeGrammar; defineRuleName (Lantlr/Token;Ljava/lang/String;ZLjava/lang/String;)V 1 -1
Lantlr/DefineGrammarSymbols; defineRuleName (Lantlr/Token;Ljava/lang/String;ZLjava/lang/String;)V 1 -1
Lantlr/Grammar; isDefined (Ljava/lang/String;)Z 1 -1
Lantlr/RuleSymbol; <init> (Ljava/lang/String;)V 1 -1
Lantlr/Grammar; define (Lantlr/RuleSymbol;)V 1 -1
Lantlr/RuleSymbol; setDefined ()V 1 -1
Lantlr/Grammar; getSymbol (Ljava/lang/String;)Lantlr/GrammarSymbol; 1 -1
Lantlr/RuleBlock; <init> (Lantlr/Grammar;Ljava/lang/String;IZ)V 1 -1
Lantlr/RuleBlock; <init> (Lantlr/Grammar;Ljava/lang/String;)V 1 -1
Lantlr/AlternativeBlock; <init> (Lantlr/Grammar;)V 1 -1
Lantlr/AlternativeElement; <init> (Lantlr/Grammar;)V 1 -1
Lantlr/GrammarElement; <init> (Lantlr/Grammar;)V 1 -1
Lantlr/AlternativeBlock; setAutoGen (Z)V 1 -1
Lantlr/Grammar; getDefaultErrorHandler ()Z 1 -1
Lantlr/RuleBlock; setDefaultErrorHandler (Z)V 1 -1
Lantlr/BlockContext; <init> ()V 1 -1
Lantlr/collections/impl/LList; push (Ljava/lang/Object;)V 1 -1
Lantlr/collections/impl/LList; insertHead (Ljava/lang/Object;)V 1 -1
Lantlr/collections/impl/LLCell; <init> (Ljava/lang/Object;)V 1 -1
Lantlr/MakeGrammar; context ()Lantlr/BlockContext; 1 -1
Lantlr/collections/impl/LList; height ()I 1 -1
Lantlr/collections/impl/LList; top ()Ljava/lang/Object; 1 -1
Lantlr/RuleSymbol; setBlock (Lantlr/RuleBlock;)V 1 -1
Lantlr/RuleEndElement; <init> (Lantlr/Grammar;)V 1 -1
Lantlr/BlockEndElement; <init> (Lantlr/Grammar;)V 1 -1
Lantlr/RuleBlock; setEndElement (Lantlr/RuleEndElement;)V 1 -1
Lantlr/ANTLRParser; block ()V 1 -1
Lantlr/ANTLRParser; alternative ()V 1 -1
Lantlr/MakeGrammar; beginAlt (Z)V 1 -1
Lantlr/DefineGrammarSymbols; beginAlt (Z)V 1 -1
Lantlr/Alternative; <init> ()V 1 -1
Lantlr/Alternative; setAutoGen (Z)V 1 -1
Lantlr/AlternativeBlock; addAlternative (Lantlr/Alternative;)V 1 -1
Lantlr/ANTLRParser; element ()V 1 -1
Lantlr/ANTLRParser; elementNoOptionSpec ()V 1 -1
Lantlr/ANTLRLexer; mLPAREN (Z)V 1 -1
Lantlr/MakeGrammar; refRule (Lantlr/Token;Lantlr/Token;Lantlr/Token;Lantlr/Token;I)V 1 -1
Lantlr/DefineGrammarSymbols; refRule (Lantlr/Token;Lantlr/Token;Lantlr/Token;Lantlr/Token;I)V 1 -1
Lantlr/RuleRefElement; <init> (Lantlr/Grammar;Lantlr/Token;I)V 1 -1
Lantlr/AlternativeElement; <init> (Lantlr/Grammar;Lantlr/Token;I)V 1 -1
Lantlr/GrammarElement; <init> (Lantlr/Grammar;Lantlr/Token;)V 1 -1
Lantlr/MakeGrammar; addElementToCurrentAlt (Lantlr/AlternativeElement;)V 1 -1
Lantlr/BlockContext; addAlternativeElement (Lantlr/AlternativeElement;)V 1 -1
Lantlr/BlockContext; currentAlt ()Lantlr/Alternative; 1 -1
Lantlr/collections/impl/Vector; elementAt (I)Ljava/lang/Object; 1 -1
Lantlr/Alternative; addElement (Lantlr/AlternativeElement;)V 1 -1
Lantlr/RuleSymbol; addReference (Lantlr/RuleRefElement;)V 1 -1
Lantlr/MakeGrammar; labelElement (Lantlr/AlternativeElement;Lantlr/Token;)V 1 -1
Lantlr/ANTLRParser; ebnf (Lantlr/Token;Z)V 1 -1
Lantlr/MakeGrammar; beginSubRule (Lantlr/Token;Lantlr/Token;Z)V 1 -1
Lantlr/DefineGrammarSymbols; beginSubRule (Lantlr/Token;Lantlr/Token;Z)V 1 -1
Lantlr/AlternativeBlock; <init> (Lantlr/Grammar;Lantlr/Token;Z)V 1 -1
Lantlr/AlternativeElement; <init> (Lantlr/Grammar;Lantlr/Token;)V 1 -1
Lantlr/ANTLRLexer; mCARET (Z)V 1 -1
Lantlr/ANTLRParser; terminal (Lantlr/Token;)V 1 -1
Lantlr/ANTLRParser; ast_type_spec ()I 1 -1
Lantlr/ANTLRParser; lastInRule ()Z 1 -1
Lantlr/MakeGrammar; refToken (Lantlr/Token;Lantlr/Token;Lantlr/Token;Lantlr/Token;ZIZ)V 1 -1
Lantlr/DefineGrammarSymbols; refToken (Lantlr/Token;Lantlr/Token;Lantlr/Token;Lantlr/Token;ZIZ)V 1 -1
Lantlr/DefineGrammarSymbols; _refToken (Lantlr/Token;Lantlr/Token;Lantlr/Token;Lantlr/Token;ZIZ)V 1 -1
Lantlr/SimpleTokenManager; tokenDefined (Ljava/lang/String;)Z 1 -1
Lantlr/SimpleTokenManager; nextTokenType ()I 1 -1
Lantlr/TokenRefElement; <init> (Lantlr/Grammar;Lantlr/Token;ZI)V 1 -1
Lantlr/GrammarAtom; <init> (Lantlr/Grammar;Lantlr/Token;I)V 1 -1
Lantlr/SimpleTokenManager; getTokenSymbol (Ljava/lang/String;)Lantlr/TokenSymbol; 1 -1
Lantlr/TokenSymbol; getASTNodeType ()Ljava/lang/String; 1 -1
Lantlr/GrammarAtom; setASTNodeType (Ljava/lang/String;)V 1 -1
Lantlr/ANTLRLexer; mRPAREN (Z)V 1 -1
Lantlr/MakeGrammar; endAlt ()V 1 -1
Lantlr/DefineGrammarSymbols; endAlt ()V 1 -1
Lantlr/ANTLRLexer; mSTAR (Z)V 1 -1
Lantlr/MakeGrammar; zeroOrMoreSubRule ()V 1 -1
Lantlr/ZeroOrMoreBlock; <init> (Lantlr/Grammar;)V 1 -1
Lantlr/BlockWithImpliedExitPath; <init> (Lantlr/Grammar;)V 1 -1
Lantlr/MakeGrammar; setBlock (Lantlr/AlternativeBlock;Lantlr/AlternativeBlock;)V 1 -1
Lantlr/AlternativeBlock; getAlternatives ()Lantlr/collections/impl/Vector; 1 -1
Lantlr/AlternativeBlock; setAlternatives (Lantlr/collections/impl/Vector;)V 1 -1
Lantlr/collections/impl/LList; pop ()Ljava/lang/Object; 1 -1
Lantlr/collections/impl/LList; deleteHead ()Ljava/lang/Object; 1 -1
Lantlr/MakeGrammar; endSubRule ()V 1 -1
Lantlr/DefineGrammarSymbols; endSubRule ()V 1 -1
Lantlr/AlternativeBlock; prepareForAnalysis ()V 1 -1
Lantlr/collections/impl/Vector; size ()I 1 -1
Lantlr/ANTLRLexer; mBANG (Z)V 1 -1
Lantlr/MakeGrammar; endRule (Ljava/lang/String;)V 1 -1
Lantlr/DefineGrammarSymbols; endRule (Ljava/lang/String;)V 1 -1
Lantlr/RuleBlock; prepareForAnalysis ()V 1 -1
Lantlr/RuleSymbol; isDefined ()Z 1 -1
Lantlr/MakeGrammar; endGrammar ()V 1 -1
Lantlr/DefineGrammarSymbols; endGrammar ()V 1 -1
Lantlr/ANTLRParser; lexerSpec (Ljava/lang/String;)V 1 -1
Lantlr/DefineGrammarSymbols; startLexer (Ljava/lang/String;Lantlr/Token;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lantlr/LexerGrammar; <init> (Ljava/lang/String;Lantlr/Tool;Ljava/lang/String;)V 1 -1
Lantlr/LexerGrammar; processArguments ([Ljava/lang/String;)V 1 -1
Lantlr/CodeGenerator; <clinit> ()V 1 -1
Lantlr/CodeGenerator; encodeLexerRuleName (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/ANTLRLexer; mCHAR_LITERAL (Z)V 1 -1
Lantlr/ANTLRLexer; mOR (Z)V 1 -1
Lantlr/MakeGrammar; refCharLiteral (Lantlr/Token;Lantlr/Token;ZIZ)V 1 -1
Lantlr/DefineGrammarSymbols; refCharLiteral (Lantlr/Token;Lantlr/Token;ZIZ)V 1 -1
Lantlr/CharLiteralElement; <init> (Lantlr/LexerGrammar;Lantlr/Token;ZI)V 1 -1
Lantlr/ANTLRLexer; tokenTypeForCharLiteral (Ljava/lang/String;)I 1 -1
Lantlr/RuleBlock; getIgnoreRule ()Ljava/lang/String; 1 -1
Lantlr/ANTLRLexer; mESC (Z)V 1 -1
Lantlr/ANTLRLexer; escapeCharValue (Ljava/lang/String;)I 1 -1
Lantlr/ANTLRLexer; mACTION (Z)V 1 -1
Lantlr/CharScanner; getLine ()I 1 -1
Lantlr/ANTLRLexer; mNESTED_ACTION (Z)V 1 -1
Lantlr/CharScanner; getText ()Ljava/lang/String; 1 -1
Lantlr/ANTLRStringBuffer; toString ()Ljava/lang/String; 1 -1
Lantlr/StringUtils; stripFrontBack (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/CharScanner; setText (Ljava/lang/String;)V 1 -1
Lantlr/ANTLRStringBuffer; append (Ljava/lang/String;)V 1 -1
Lantlr/MakeGrammar; refAction (Lantlr/Token;)V 1 -1
Lantlr/DefineGrammarSymbols; refAction (Lantlr/Token;)V 1 -1
Lantlr/ActionElement; <init> (Lantlr/Grammar;Lantlr/Token;)V 1 -1
Lantlr/ANTLRLexer; mRANGE (Z)V 1 -1
Lantlr/ANTLRParser; range (Lantlr/Token;)V 1 -1
Lantlr/MakeGrammar; refCharRange (Lantlr/Token;Lantlr/Token;Lantlr/Token;IZ)V 1 -1
Lantlr/DefineGrammarSymbols; refCharRange (Lantlr/Token;Lantlr/Token;Lantlr/Token;IZ)V 1 -1
Lantlr/CharRangeElement; <init> (Lantlr/LexerGrammar;Lantlr/Token;Lantlr/Token;I)V 1 -1
Lantlr/ANTLRLexer; mPLUS (Z)V 1 -1
Lantlr/MakeGrammar; oneOrMoreSubRule ()V 1 -1
Lantlr/OneOrMoreBlock; <init> (Lantlr/Grammar;)V 1 -1
Lantlr/ANTLRParser; treeParserSpec (Ljava/lang/String;)V 1 -1
Lantlr/DefineGrammarSymbols; startTreeWalker (Ljava/lang/String;Lantlr/Token;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lantlr/TreeWalkerGrammar; <init> (Ljava/lang/String;Lantlr/Tool;Ljava/lang/String;)V 1 -1
Lantlr/TreeWalkerGrammar; processArguments ([Ljava/lang/String;)V 1 -1
Lantlr/ANTLRLexer; mARG_ACTION (Z)V 1 -1
Lantlr/ANTLRLexer; mNESTED_ARG_ACTION (Z)V 1 -1
Lantlr/MakeGrammar; refReturnAction (Lantlr/Token;)V 1 -1
Lantlr/MakeGrammar; refInitAction (Lantlr/Token;)V 1 -1
Lantlr/AlternativeBlock; setInitAction (Ljava/lang/String;)V 1 -1
Lantlr/ANTLRLexer; mTREE_BEGIN (Z)V 1 -1
Lantlr/ANTLRParser; tree ()V 1 -1
Lantlr/MakeGrammar; beginTree (Lantlr/Token;)V 1 -1
Lantlr/DefineGrammarSymbols; beginTree (Lantlr/Token;)V 1 -1
Lantlr/TreeBlockContext; <init> ()V 1 -1
Lantlr/TreeElement; <init> (Lantlr/Grammar;Lantlr/Token;)V 1 -1
Lantlr/ANTLRParser; rootNode ()V 1 -1
Lantlr/TreeBlockContext; addAlternativeElement (Lantlr/AlternativeElement;)V 1 -1
Lantlr/MakeGrammar; beginChildList ()V 1 -1
Lantlr/DefineGrammarSymbols; beginChildList ()V 1 -1
Lantlr/RuleRefElement; setIdAssign (Ljava/lang/String;)V 1 -1
Lantlr/MakeGrammar; endChildList ()V 1 -1
Lantlr/DefineGrammarSymbols; endChildList ()V 1 -1
Lantlr/MakeGrammar; endTree ()V 1 -1
Lantlr/DefineGrammarSymbols; endTree ()V 1 -1
Lantlr/ANTLRParser; checkForMissingEndRule (Lantlr/Token;)V 1 -1
Lantlr/GrammarAtom; setLabel (Ljava/lang/String;)V 1 -1
Lantlr/Tool; hasError ()Z 1 -1
Lantlr/Tool; checkForInvalidArguments ([Ljava/lang/String;Lantlr/collections/impl/BitSet;)V 1 -1
Lantlr/Tool; getLanguage (Lantlr/MakeGrammar;)Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; <clinit> ()V 1 -1
Lantlr/CppCodeGenerator; <init> ()V 1 -1
Lantlr/CodeGenerator; <init> ()V 1 -1
Lantlr/CppCharFormatter; <init> ()V 1 -1
Lantlr/CodeGenerator; setBehavior (Lantlr/DefineGrammarSymbols;)V 1 -1
Lantlr/CodeGenerator; setAnalyzer (Lantlr/LLkGrammarAnalyzer;)V 1 -1
Lantlr/CodeGenerator; setTool (Lantlr/Tool;)V 1 -1
Lantlr/CppCodeGenerator; gen ()V 1 -1
Lantlr/Grammar; setGrammarAnalyzer (Lantlr/LLkGrammarAnalyzer;)V 1 -1
Lantlr/Grammar; setCodeGenerator (Lantlr/CodeGenerator;)V 1 -1
Lantlr/LLkAnalyzer; setGrammar (Lantlr/Grammar;)V 1 -1
Lantlr/CppCodeGenerator; setupGrammarParameters (Lantlr/Grammar;)V 1 -1
Lantlr/Grammar; hasOption (Ljava/lang/String;)Z 1 -1
Lantlr/Grammar; getOption (Ljava/lang/String;)Lantlr/Token; 1 -1
Lantlr/ParserGrammar; generate ()V 1 -1
Lantlr/CppCodeGenerator; gen (Lantlr/ParserGrammar;)V 1 -1
Lantlr/CodeGenerator; setGrammar (Lantlr/Grammar;)V 1 -1
Lantlr/CodeGenerator; reset ()V 1 -1
Lantlr/CppCodeGenerator; genBody (Lantlr/ParserGrammar;)V 1 -1
Lantlr/Tool; openOutputFile (Ljava/lang/String;)Ljava/io/PrintWriter; 1 -1
Lantlr/PreservingFileWriter; <init> (Ljava/lang/String;)V 1 -1
Ljava/io/FileWriter; <init> (Ljava/lang/String;)V 1 -1
Lantlr/CppCodeGenerator; genHeader (Ljava/lang/String;)V 1 -1
Lantlr/Tool; fileMinusPath (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; println (Ljava/lang/String;)V 1 -1
Lantlr/CodeGenerator; printTabs ()V 1 -1
Lantlr/CppCodeGenerator; countLines (Ljava/lang/String;)I 1 -1
Lantlr/CppCodeGenerator; printHeaderAction (Ljava/lang/String;)V 1 -1
Lantlr/CppCodeGenerator; printAction (Lantlr/Token;)V 1 -1
Lantlr/CppCodeGenerator; genLineNo (I)V 1 -1
Lantlr/CppCodeGenerator; _println (Ljava/lang/String;)V 1 -1
Lantlr/CppCodeGenerator; processActionForSpecialSymbols (Ljava/lang/String;ILantlr/RuleBlock;Lantlr/ActionTransInfo;)Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; _printAction (Ljava/lang/String;)V 1 -1
Lantlr/CppCodeGenerator; genLineNo2 ()V 1 -1
Lantlr/ParserGrammar; getSuperClass ()Ljava/lang/String; 1 -1
Lantlr/CodeGenerator; print (Ljava/lang/String;)V 1 -1
Lantlr/CppCodeGenerator; genRule (Lantlr/RuleSymbol;ZILjava/lang/String;)V 1 -1
Lantlr/RuleSymbol; getBlock ()Lantlr/RuleBlock; 1 -1
Lantlr/AlternativeBlock; getAutoGen ()Z 1 -1
Lantlr/CppCodeGenerator; _print (Ljava/lang/String;)V 1 -1
Lantlr/CppCodeGenerator; genBlockPreamble (Lantlr/AlternativeBlock;)V 1 -1
Lantlr/CppCodeGenerator; genBlockInitAction (Lantlr/AlternativeBlock;)V 1 -1
Lantlr/RuleBlock; findExceptionSpec (Ljava/lang/String;)Lantlr/ExceptionSpec; 1 -1
Lantlr/RuleBlock; getDefaultErrorHandler ()Z 1 -1
Lantlr/AlternativeBlock; getAlternativeAt (I)Lantlr/Alternative; 1 -1
Lantlr/CppCodeGenerator; genAlt (Lantlr/Alternative;Lantlr/AlternativeBlock;)V 1 -1
Lantlr/Alternative; getAutoGen ()Z 1 -1
Lantlr/RuleRefElement; generate ()V 1 -1
Lantlr/CppCodeGenerator; gen (Lantlr/RuleRefElement;)V 1 -1
Lantlr/CppCodeGenerator; genErrorTryForElement (Lantlr/AlternativeElement;)V 1 -1
Lantlr/RuleRefElement; getLabel ()Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; GenRuleInvocation (Lantlr/RuleRefElement;)V 1 -1
Lantlr/AlternativeElement; getAutoGenType ()I 1 -1
Lantlr/CppCodeGenerator; genErrorCatchForElement (Lantlr/AlternativeElement;)V 1 -1
Lantlr/ZeroOrMoreBlock; generate ()V 1 -1
Lantlr/CppCodeGenerator; gen (Lantlr/ZeroOrMoreBlock;)V 1 -1
Lantlr/AlternativeBlock; getLabel ()Ljava/lang/String; 1 -1
Lantlr/LLkAnalyzer; deterministic (Lantlr/ZeroOrMoreBlock;)Z 1 -1
Lantlr/LLkAnalyzer; deterministic (Lantlr/AlternativeBlock;)Z 1 -1
Lantlr/TokenRefElement; look (I)Lantlr/Lookahead; 1 -1
Lantlr/LLkAnalyzer; look (ILantlr/GrammarAtom;)Lantlr/Lookahead; 1 -1
Lantlr/GrammarAtom; getType ()I 1 -1
Lantlr/Lookahead; of (I)Lantlr/Lookahead; 1 -1
Lantlr/Lookahead; <init> ()V 1 -1
Lantlr/LLkAnalyzer; deterministicImpliedPath (Lantlr/BlockWithImpliedExitPath;)Z 1 -1
Lantlr/LLkAnalyzer; getAltLookahead (Lantlr/AlternativeBlock;II)Lantlr/Lookahead; 1 -1
Lantlr/Lookahead; intersection (Lantlr/Lookahead;)Lantlr/Lookahead; 1 -1
Lantlr/collections/impl/BitSet; and (Lantlr/collections/impl/BitSet;)Lantlr/collections/impl/BitSet; 1 -1
Lantlr/collections/impl/BitSet; clone ()Ljava/lang/Object; 1 -1
Lantlr/collections/impl/BitSet; andInPlace (Lantlr/collections/impl/BitSet;)V 1 -1
Lantlr/Lookahead; <init> (Lantlr/collections/impl/BitSet;)V 1 -1
Lantlr/Lookahead; nil ()Z 1 -1
Lantlr/collections/impl/BitSet; nil ()Z 1 -1
Lantlr/CppCodeGenerator; genCommonBlock (Lantlr/AlternativeBlock;Z)Lantlr/CppBlockFinishingInfo; 1 -1
Lantlr/CppBlockFinishingInfo; <init> ()V 1 -1
Lantlr/CppCodeGenerator; suitableForCaseExpression (Lantlr/Alternative;)Z 1 -1
Lantlr/Lookahead; containsEpsilon ()Z 1 -1
Lantlr/collections/impl/BitSet; degree ()I 1 -1
Lantlr/CppCodeGenerator; lookaheadIsEmpty (Lantlr/Alternative;I)Z 1 -1
Lantlr/CppCodeGenerator; getLookaheadTestExpression (Lantlr/Alternative;I)Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; getLookaheadTestExpression ([Lantlr/Lookahead;I)Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; getLookaheadTestTerm (ILantlr/collections/impl/BitSet;)Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; lookaheadString (I)Ljava/lang/String; 1 -1
Lantlr/collections/impl/BitSet; toArray ()[I 1 -1
Lantlr/CodeGenerator; elementsAreRange ([I)Z 1 -1
Lantlr/CppCodeGenerator; getValueString (I)Ljava/lang/String; 1 -1
Lantlr/SimpleTokenManager; getTokenSymbolAt (I)Lantlr/TokenSymbol; 1 -1
Lantlr/SimpleTokenManager; getTokenStringAt (I)Ljava/lang/String; 1 -1
Lantlr/TokenRefElement; generate ()V 1 -1
Lantlr/CppCodeGenerator; gen (Lantlr/TokenRefElement;)V 1 -1
Lantlr/GrammarAtom; getLabel ()Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; genElementAST (Lantlr/AlternativeElement;)V 1 -1
Lantlr/GrammarAtom; getASTNodeType ()Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; genASTDeclaration (Lantlr/AlternativeElement;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lantlr/CppCodeGenerator; mapTreeVariable (Lantlr/AlternativeElement;Ljava/lang/String;)V 1 -1
Lantlr/CppCodeGenerator; getASTCreateString (Lantlr/GrammarAtom;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; genMatch (Lantlr/GrammarAtom;)V 1 -1
Lantlr/CppCodeGenerator; genMatchUsingAtomText (Lantlr/GrammarAtom;)V 1 -1
Lantlr/CppCodeGenerator; textOrChar (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; genBlockFinish (Lantlr/CppBlockFinishingInfo;Ljava/lang/String;)V 1 -1
Lantlr/RuleBlock; getRuleName ()Ljava/lang/String; 1 -1
Lantlr/LLkAnalyzer; FOLLOW (ILantlr/RuleEndElement;)Lantlr/Lookahead; 1 -1
Lantlr/RuleSymbol; numReferences ()I 1 -1
Lantlr/Lookahead; clone ()Ljava/lang/Object; 1 -1
Lantlr/CodeGenerator; markBitsetForGen (Lantlr/collections/impl/BitSet;)I 1 -1
Lantlr/CodeGenerator; getBitsetName (I)Ljava/lang/String; 1 -1
Lantlr/RuleBlock; getTestLiterals ()Z 1 -1
Lantlr/CppCodeGenerator; exitIfError ()V 1 -1
Lantlr/RuleEndElement; look (I)Lantlr/Lookahead; 1 -1
Lantlr/LLkAnalyzer; look (ILantlr/RuleEndElement;)Lantlr/Lookahead; 1 -1
Lantlr/RuleSymbol; getReference (I)Lantlr/RuleRefElement; 1 -1
Lantlr/ZeroOrMoreBlock; look (I)Lantlr/Lookahead; 1 -1
Lantlr/LLkAnalyzer; look (ILantlr/ZeroOrMoreBlock;)Lantlr/Lookahead; 1 -1
Lantlr/LLkAnalyzer; look (ILantlr/AlternativeBlock;)Lantlr/Lookahead; 1 -1
Lantlr/Lookahead; combineWith (Lantlr/Lookahead;)V 1 -1
Lantlr/collections/impl/BitSet; orInPlace (Lantlr/collections/impl/BitSet;)V 1 -1
Lantlr/BlockEndElement; look (I)Lantlr/Lookahead; 1 -1
Lantlr/LLkAnalyzer; look (ILantlr/BlockEndElement;)Lantlr/Lookahead; 1 -1
Lantlr/collections/impl/BitSet; equals (Ljava/lang/Object;)Z 1 -1
Lantlr/CppCodeGenerator; genInitFactory (Lantlr/Grammar;)V 1 -1
Lantlr/SimpleTokenManager; maxTokenType ()I 1 -1
Lantlr/CppCodeGenerator; genTokenStrings (Ljava/lang/String;)V 1 -1
Lantlr/SimpleTokenManager; getVocabulary ()Lantlr/collections/impl/Vector; 1 -1
Lantlr/CppCharFormatter; literalString (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/CppCharFormatter; escapeString (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/CppCharFormatter; escapeChar (IZ)Ljava/lang/String; 1 -1
Lantlr/TokenSymbol; getParaphrase ()Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; genBitsets (Lantlr/collections/impl/Vector;ILjava/lang/String;)V 1 -1
Lantlr/collections/impl/BitSet; growToInclude (I)V 1 -1
Lantlr/collections/impl/BitSet; numWordsToHold (I)I 1 -1
Lantlr/collections/impl/BitSet; toStringOfHalfWords ()Ljava/lang/String; 1 -1
Lantlr/collections/impl/BitSet; size ()I 1 -1
Lantlr/PreservingFileWriter; close ()V 1 -1
Ljava/io/FileWriter; <init> (Ljava/io/File;)V 1 -1
Ljava/io/BufferedWriter; <init> (Ljava/io/Writer;)V 1 -1
Ljava/io/BufferedWriter; <init> (Ljava/io/Writer;I)V 1 -1
Ljava/io/BufferedWriter; write ([CII)V 1 -1
Ljava/io/BufferedWriter; close ()V 1 -1
Ljava/io/BufferedWriter; localFlush ()V 1 -1
Lantlr/CppCodeGenerator; genInclude (Lantlr/ParserGrammar;)V 1 -1
Lantlr/SimpleTokenManager; getName ()Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; genRuleHeader (Lantlr/RuleSymbol;Z)V 1 -1
Lantlr/CppCodeGenerator; genBitsetsHeader (Lantlr/collections/impl/Vector;I)V 1 -1
Lantlr/LLkAnalyzer; reset ()V 1 -1
Lantlr/LexerGrammar; generate ()V 1 -1
Lantlr/CppCodeGenerator; gen (Lantlr/LexerGrammar;)V 1 -1
Lantlr/CppCodeGenerator; genBody (Lantlr/LexerGrammar;)V 1 -1
Lantlr/LexerGrammar; getSuperClass ()Ljava/lang/String; 1 -1
Lantlr/SimpleTokenManager; getTokenSymbolKeys ()Ljava/util/Enumeration; 1 -1
Lantlr/CppCodeGenerator; genNextToken ()V 1 -1
Lantlr/MakeGrammar; createNextTokenRule (Lantlr/Grammar;Lantlr/collections/impl/Vector;Ljava/lang/String;)Lantlr/RuleBlock; 1 -1
Lantlr/RuleRefElement; setLabel (Ljava/lang/String;)V 1 -1
Lantlr/RuleRefElement; look (I)Lantlr/Lookahead; 1 -1
Lantlr/LLkAnalyzer; look (ILantlr/RuleRefElement;)Lantlr/Lookahead; 1 -1
Lantlr/LLkAnalyzer; look (ILjava/lang/String;)Lantlr/Lookahead; 1 -1
Lantlr/LLkAnalyzer; look (ILantlr/RuleBlock;)Lantlr/Lookahead; 1 -1
Lantlr/AlternativeBlock; look (I)Lantlr/Lookahead; 1 -1
Lantlr/CharLiteralElement; look (I)Lantlr/Lookahead; 1 -1
Lantlr/LLkAnalyzer; look (ILantlr/CharLiteralElement;)Lantlr/Lookahead; 1 -1
Lantlr/OneOrMoreBlock; look (I)Lantlr/Lookahead; 1 -1
Lantlr/LLkAnalyzer; look (ILantlr/OneOrMoreBlock;)Lantlr/Lookahead; 1 -1
Lantlr/CharRangeElement; look (I)Lantlr/Lookahead; 1 -1
Lantlr/LLkAnalyzer; look (ILantlr/CharRangeElement;)Lantlr/Lookahead; 1 -1
Lantlr/collections/impl/BitSet; of (I)Lantlr/collections/impl/BitSet; 1 -1
Lantlr/CppCodeGenerator; genCases (Lantlr/collections/impl/BitSet;)V 1 -1
Lantlr/CppCharFormatter; literalChar (I)Ljava/lang/String; 1 -1
Lantlr/LexerGrammar; getTestLiterals ()Z 1 -1
Lantlr/CppCodeGenerator; genLiteralsTest ()V 1 -1
Lantlr/AlternativeBlock; generate ()V 1 -1
Lantlr/CppCodeGenerator; gen (Lantlr/AlternativeBlock;)V 1 -1
Lantlr/CharLiteralElement; generate ()V 1 -1
Lantlr/CppCodeGenerator; gen (Lantlr/CharLiteralElement;)V 1 -1
Lantlr/ActionElement; generate ()V 1 -1
Lantlr/CppCodeGenerator; gen (Lantlr/ActionElement;)V 1 -1
Lantlr/ActionTransInfo; <init> ()V 1 -1
Lantlr/GrammarElement; getLine ()I 1 -1
Lantlr/CppCodeGenerator; genLineNo (Lantlr/GrammarElement;)V 1 -1
Lantlr/CodeGenerator; printAction (Ljava/lang/String;)V 1 -1
Lantlr/CodeGenerator; _printAction (Ljava/lang/String;)V 1 -1
Lantlr/CharRangeElement; generate ()V 1 -1
Lantlr/CppCodeGenerator; gen (Lantlr/CharRangeElement;)V 1 -1
Lantlr/CharRangeElement; getLabel ()Ljava/lang/String; 1 -1
Lantlr/OneOrMoreBlock; generate ()V 1 -1
Lantlr/CppCodeGenerator; gen (Lantlr/OneOrMoreBlock;)V 1 -1
Lantlr/LLkAnalyzer; deterministic (Lantlr/OneOrMoreBlock;)Z 1 -1
Lantlr/Lookahead; setEpsilon ()V 1 -1
Lantlr/CppCodeGenerator; getRangeExpression (I[I)Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; genInclude (Lantlr/LexerGrammar;)V 1 -1
Lantlr/CppCodeGenerator; genLineNo (Lantlr/Token;)V 1 -1
Lantlr/TreeWalkerGrammar; setOption (Ljava/lang/String;Lantlr/Token;)Z 1 -1
Lantlr/Token; getText ()Ljava/lang/String; 1 -1
Lantlr/TreeWalkerGrammar; generate ()V 1 -1
Lantlr/CppCodeGenerator; gen (Lantlr/TreeWalkerGrammar;)V 1 -1
Lantlr/CppCodeGenerator; genBody (Lantlr/TreeWalkerGrammar;)V 1 -1
Lantlr/TreeWalkerGrammar; getSuperClass ()Ljava/lang/String; 1 -1
Lantlr/GrammarElement; getColumn ()I 1 -1
Lantlr/CodeGenerator; extractTypeOfAction (Ljava/lang/String;II)Ljava/lang/String; 1 -1
Lantlr/CodeGenerator; removeAssignmentFromDeclaration (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/actions/cpp/ActionLexer; <clinit> ()V 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_0 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_1 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_2 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_3 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_4 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_5 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_6 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_7 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_8 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_9 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_10 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_11 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_12 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_13 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_14 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_15 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_16 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_17 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_18 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_19 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_20 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_21 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_22 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_23 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_24 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_25 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; mk_tokenSet_26 ()[J 1 -1
Lantlr/actions/cpp/ActionLexer; <init> (Ljava/lang/String;Lantlr/RuleBlock;Lantlr/CodeGenerator;Lantlr/ActionTransInfo;)V 1 -1
Ljava/io/StringReader; <init> (Ljava/lang/String;)V 1 -1
Lantlr/actions/cpp/ActionLexer; <init> (Ljava/io/Reader;)V 1 -1
Lantlr/actions/cpp/ActionLexer; <init> (Lantlr/InputBuffer;)V 1 -1
Lantlr/actions/cpp/ActionLexer; <init> (Lantlr/LexerSharedInputState;)V 1 -1
Lantlr/actions/cpp/ActionLexer; setLineOffset (I)V 1 -1
Lantlr/CharScanner; setLine (I)V 1 -1
Lantlr/Grammar; getFilename ()Ljava/lang/String; 1 -1
Lantlr/actions/cpp/ActionLexer; setTool (Lantlr/Tool;)V 1 -1
Lantlr/actions/cpp/ActionLexer; mACTION (Z)V 1 -1
Ljava/io/StringReader; read ()I 1 -1
Lantlr/actions/cpp/ActionLexer; mSTUFF (Z)V 1 -1
Lantlr/CharScanner; getTokenObject ()Lantlr/Token; 1 -1
Lantlr/TreeElement; look (I)Lantlr/Lookahead; 1 -1
Lantlr/LLkAnalyzer; look (ILantlr/TreeElement;)Lantlr/Lookahead; 1 -1
Lantlr/TreeElement; generate ()V 1 -1
Lantlr/CppCodeGenerator; gen (Lantlr/TreeElement;)V 1 -1
Lantlr/GrammarElement; generate ()V 1 -1
Lantlr/CodeGenerator; extractIdOfAction (Ljava/lang/String;II)Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; genInclude (Lantlr/TreeWalkerGrammar;)V 1 -1
Lantlr/SimpleTokenManager; isReadOnly ()Z 1 -1
Lantlr/CppCodeGenerator; genTokenTypes (Lantlr/TokenManager;)V 1 -1
Lantlr/CodeGenerator; genTokenInterchange (Lantlr/TokenManager;)V 1 -1
Lantlr/preprocessor/Grammar; setPreambleAction (Ljava/lang/String;)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mML_COMMENT (Z)V 1 -1
Lantlr/preprocessor/Grammar; setMemberAction (Ljava/lang/String;)V 1 -1
Lantlr/MakeGrammar; refPreambleAction (Lantlr/Token;)V 1 -1
Lantlr/DefineGrammarSymbols; refPreambleAction (Lantlr/Token;)V 1 -1
Lantlr/ANTLRLexer; mQUESTION (Z)V 1 -1
Lantlr/MakeGrammar; optionalSubRule ()V 1 -1
Lantlr/ANTLRLexer; mML_COMMENT (Z)V 1 -1
Lantlr/MakeGrammar; refMemberAction (Lantlr/Token;)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mXDIGIT (Z)V 1 -1
Lantlr/ANTLRParser; lexerOptionsSpec ()V 1 -1
Lantlr/ANTLRParser; charSet ()Lantlr/collections/impl/BitSet; 1 -1
Lantlr/ANTLRParser; setBlockElement ()Lantlr/collections/impl/BitSet; 1 -1
Lantlr/ANTLRLexer; mXDIGIT (Z)V 1 -1
Lantlr/DefineGrammarSymbols; setCharVocabulary (Lantlr/collections/impl/BitSet;)V 1 -1
Lantlr/LexerGrammar; setCharVocabulary (Lantlr/collections/impl/BitSet;)V 1 -1
Lantlr/ANTLRLexer; mWILDCARD (Z)V 1 -1
Lantlr/MakeGrammar; refWildcard (Lantlr/Token;Lantlr/Token;I)V 1 -1
Lantlr/DefineGrammarSymbols; refWildcard (Lantlr/Token;Lantlr/Token;I)V 1 -1
Lantlr/WildcardElement; <init> (Lantlr/Grammar;Lantlr/Token;I)V 1 -1
Lantlr/WildcardElement; setLabel (Ljava/lang/String;)V 1 -1
Lantlr/WildcardElement; getLabel ()Ljava/lang/String; 1 -1
Lantlr/ANTLRLexer; mNOT_OP (Z)V 1 -1
Lantlr/ANTLRParser; notTerminal (Lantlr/Token;)V 1 -1
Lantlr/WildcardElement; generate ()V 1 -1
Lantlr/CppCodeGenerator; gen (Lantlr/WildcardElement;)V 1 -1
Lantlr/actions/cpp/ActionLexer; mCOMMENT (Z)V 1 -1
Lantlr/actions/cpp/ActionLexer; mSL_COMMENT (Z)V 1 -1
Lantlr/actions/cpp/ActionLexer; mTEXT_ITEM (Z)V 1 -1
Lantlr/actions/cpp/ActionLexer; mTEXT_ARG (Z)V 1 -1
Lantlr/actions/cpp/ActionLexer; mTEXT_ARG_ELEMENT (Z)V 1 -1
Lantlr/actions/cpp/ActionLexer; mTEXT_ARG_ID_ELEMENT (Z)V 1 -1
Lantlr/actions/cpp/ActionLexer; mID (Z)V 1 -1
Lantlr/actions/cpp/ActionLexer; mSTRING (Z)V 1 -1
Lantlr/LLkAnalyzer; removeCompetingPredictionSets (Lantlr/collections/impl/BitSet;Lantlr/AlternativeElement;)V 1 -1
Lantlr/collections/impl/BitSet; clear (I)V 1 -1
Lantlr/ANTLRLexer; mINT (Z)V 1 -1
Lantlr/Grammar; getIntegerOption (Ljava/lang/String;)I 1 -1
Lantlr/ANTLRParser; exceptionSpecNoLabel ()V 1 -1
Lantlr/MakeGrammar; beginExceptionSpec (Lantlr/Token;)V 1 -1
Lantlr/DefineGrammarSymbols; beginExceptionSpec (Lantlr/Token;)V 1 -1
Lantlr/ExceptionSpec; <init> (Lantlr/Token;)V 1 -1
Lantlr/ANTLRParser; exceptionHandler ()V 1 -1
Lantlr/MakeGrammar; refExceptionHandler (Lantlr/Token;Lantlr/Token;)V 1 -1
Lantlr/DefineGrammarSymbols; refExceptionHandler (Lantlr/Token;Lantlr/Token;)V 1 -1
Lantlr/ExceptionHandler; <init> (Lantlr/Token;Lantlr/Token;)V 1 -1
Lantlr/ExceptionSpec; addHandler (Lantlr/ExceptionHandler;)V 1 -1
Lantlr/MakeGrammar; endExceptionSpec ()V 1 -1
Lantlr/DefineGrammarSymbols; endExceptionSpec ()V 1 -1
Lantlr/ANTLRLexer; mIMPLIES (Z)V 1 -1
Lantlr/MakeGrammar; synPred ()V 1 -1
Lantlr/SynPredBlock; <init> (Lantlr/Grammar;)V 1 -1
Lantlr/AlternativeBlock; removeTrackingOfRuleRefs (Lantlr/Grammar;)V 1 -1
Lantlr/ANTLRParser; subruleOptionsSpec ()V 1 -1
Lantlr/MakeGrammar; setSubruleOption (Lantlr/Token;Lantlr/Token;)V 1 -1
Lantlr/AlternativeBlock; setOption (Lantlr/Token;Lantlr/Token;)V 1 -1
Lantlr/ANTLRParser; ruleOptionsSpec ()V 1 -1
Lantlr/MakeGrammar; setRuleOption (Lantlr/Token;Lantlr/Token;)V 1 -1
Lantlr/RuleBlock; setOption (Lantlr/Token;Lantlr/Token;)V 1 -1
Lantlr/actions/cpp/ActionLexer; mAST_ITEM (Z)V 1 -1
Lantlr/CppCodeGenerator; mapTreeId (Ljava/lang/String;Lantlr/ActionTransInfo;)Ljava/lang/String; 1 -1
Lantlr/actions/cpp/ActionLexer; mWS (Z)V 1 -1
Lantlr/Lookahead; <init> (Ljava/lang/String;)V 1 -1
Lantlr/CppCodeGenerator; genASTDeclaration (Lantlr/AlternativeElement;)V 1 -1
Lantlr/CppCodeGenerator; genASTDeclaration (Lantlr/AlternativeElement;Ljava/lang/String;)V 1 -1
Lantlr/CppCodeGenerator; genErrorHandler (Lantlr/ExceptionSpec;)V 1 -1
Lantlr/CppCodeGenerator; genSynPred (Lantlr/SynPredBlock;Ljava/lang/String;)V 1 -1
Lantlr/collections/impl/BitSet; setSize (I)V 1 -1
Lantlr/collections/impl/BitSet; subtractInPlace (Lantlr/collections/impl/BitSet;)V 1 -1
Lantlr/LLkAnalyzer; altUsesWildcardDefault (Lantlr/Alternative;)Z 1 -1
Lantlr/preprocessor/GrammarFile; addHeaderAction (Ljava/lang/String;)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mDIGIT (Z)V 1 -1
Lantlr/InputBuffer; LA (I)C 3 0
Lantlr/collections/impl/BitSet; bitMask (I)J 3 0
Lantlr/CharScanner; LA (I)C 3 0
Ljava/lang/reflect/VMProxy; <clinit> ()V 1 -1
Lantlr/DefineGrammarSymbols; refHeaderAction (Lantlr/Token;Lantlr/Token;)V 1 -1
Ljava/lang/reflect/Modifier; isPublic (I)Z 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect2253; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect1294; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect2250; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect2251; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect2252; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect4619; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect4619; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect42930; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect42930; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy0; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect42939; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect42939; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy1; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect1186; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect42949; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect42949; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy2; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lantlr/CharBuffer; fill (I)V 3 0
Lantlr/LexerGrammar; setOption (Ljava/lang/String;Lantlr/Token;)Z 1 -1
Lantlr/MakeGrammar; refStringLiteral (Lantlr/Token;Lantlr/Token;IZ)V 1 -1
Lantlr/DefineGrammarSymbols; refStringLiteral (Lantlr/Token;Lantlr/Token;IZ)V 1 -1
Lantlr/DefineGrammarSymbols; _refStringLiteral (Lantlr/Token;Lantlr/Token;IZ)V 1 -1
Lantlr/StringLiteralElement; <init> (Lantlr/Grammar;Lantlr/Token;I)V 1 -1
Lantlr/MakeGrammar; createOptionalRuleRef (Ljava/lang/String;Lantlr/Token;)Lantlr/AlternativeBlock; 1 -1
Lantlr/Alternative; <init> (Lantlr/AlternativeElement;)V 1 -1
Lantlr/LLkAnalyzer; subruleCanBeInverted (Lantlr/AlternativeBlock;Z)Z 1 -1
Lantlr/MakeGrammar; refSemPred (Lantlr/Token;)V 1 -1
Lantlr/DefineGrammarSymbols; refSemPred (Lantlr/Token;)V 1 -1
Lantlr/Alternative; atStart ()Z 1 -1
Lantlr/collections/impl/BitSet; notInPlace (II)V 1 -1
Lantlr/StringLiteralElement; look (I)Lantlr/Lookahead; 1 -1
Lantlr/LLkAnalyzer; look (ILantlr/StringLiteralElement;)Lantlr/Lookahead; 1 -1
Lantlr/collections/impl/BitSet; remove (I)V 1 -1
Lantlr/StringLiteralElement; generate ()V 1 -1
Lantlr/CppCodeGenerator; gen (Lantlr/StringLiteralElement;)V 1 -1
Lantlr/ActionElement; look (I)Lantlr/Lookahead; 1 -1
Lantlr/LLkAnalyzer; look (ILantlr/ActionElement;)Lantlr/Lookahead; 1 -1
Lantlr/Lookahead; resetEpsilon ()V 1 -1
Lantlr/WildcardElement; look (I)Lantlr/Lookahead; 1 -1
Lantlr/LLkAnalyzer; look (ILantlr/WildcardElement;)Lantlr/Lookahead; 1 -1
Lantlr/StringLiteralSymbol; <init> (Ljava/lang/String;)V 1 -1
Lantlr/TokenSymbol; setParaphrase (Ljava/lang/String;)V 1 -1
Lantlr/StringLiteralSymbol; getLabel ()Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; mangleLiteral (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; genMatchUsingAtomTokenType (Lantlr/GrammarAtom;)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mCURLY_BLOCK_SCARF (Z)V 1 -1
Lantlr/preprocessor/Grammar; setTokenSection (Ljava/lang/String;)V 1 -1
Lantlr/ANTLRParser; tokensSpec ()V 1 -1
Lantlr/DefineGrammarSymbols; defineToken (Lantlr/Token;Lantlr/Token;)V 1 -1
Lantlr/DefaultToolErrorHandler; warnAltAmbiguity (Lantlr/Grammar;Lantlr/AlternativeBlock;ZI[Lantlr/Lookahead;II)V 1 -1
Lantlr/DefaultToolErrorHandler; dumpSets ([Ljava/lang/String;ILantlr/Grammar;ZI[Lantlr/Lookahead;)V 1 -1
Lantlr/collections/impl/BitSet; toString (Ljava/lang/String;Lantlr/collections/impl/Vector;)Ljava/lang/String; 1 -1
Lantlr/Tool; warning ([Ljava/lang/String;Ljava/lang/String;II)V 1 -1
Lantlr/FileLineFormatter; <clinit> ()V 1 -1
Lantlr/DefaultFileLineFormatter; <init> ()V 1 -1
Lantlr/FileLineFormatter; <init> ()V 1 -1
Lantlr/FileLineFormatter; getFormatter ()Lantlr/FileLineFormatter; 1 -1
Lantlr/DefaultFileLineFormatter; getFormatString (Ljava/lang/String;II)Ljava/lang/String; 1 -1
Lantlr/actions/cpp/ActionLexer; mVAR_ASSIGN (Z)V 1 -1
Lantlr/actions/cpp/ActionLexer; mTREE (Z)V 1 -1
Lantlr/actions/cpp/ActionLexer; mTREE_ELEMENT (Z)V 1 -1
Lantlr/actions/cpp/ActionLexer; mAST_CONSTRUCTOR (Z)V 1 -1
Lantlr/actions/cpp/ActionLexer; mAST_CTOR_ELEMENT (Z)V 1 -1
Lantlr/actions/cpp/ActionLexer; mID_ELEMENT (Z)Z 1 -1
Lantlr/CppCodeGenerator; processStringForASTConstructor (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/CppCodeGenerator; getASTCreateString (Lantlr/collections/impl/Vector;)Ljava/lang/String; 1 -1
Lantlr/actions/cpp/ActionLexer; mESC (Z)V 1 -1
Lantlr/ImportVocabTokenManager; <init> (Lantlr/Grammar;Ljava/lang/String;Ljava/lang/String;Lantlr/Tool;)V 1 -1
Lantlr/ImportVocabTokenManager; define (Lantlr/TokenSymbol;)V 1 -1
Lantlr/Tool; getOutputDirectory ()Ljava/lang/String; 1 -1
Lantlr/SimpleTokenManager; setReadOnly (Z)V 1 -1
Lantlr/ANTLRTokdefLexer; <clinit> ()V 1 -1
Lantlr/ANTLRTokdefLexer; mk_tokenSet_0 ()[J 1 -1
Lantlr/ANTLRTokdefLexer; mk_tokenSet_1 ()[J 1 -1
Lantlr/ANTLRTokdefLexer; mk_tokenSet_2 ()[J 1 -1
Lantlr/ANTLRTokdefLexer; mk_tokenSet_3 ()[J 1 -1
Lantlr/ANTLRTokdefLexer; <init> (Ljava/io/Reader;)V 1 -1
Lantlr/ANTLRTokdefLexer; <init> (Lantlr/InputBuffer;)V 1 -1
Lantlr/ANTLRTokdefLexer; <init> (Lantlr/LexerSharedInputState;)V 1 -1
Lantlr/ANTLRTokdefParser; <clinit> ()V 1 -1
Lantlr/ANTLRTokdefParser; mk_tokenSet_0 ()[J 1 -1
Lantlr/ANTLRTokdefParser; mk_tokenSet_1 ()[J 1 -1
Lantlr/ANTLRTokdefParser; <init> (Lantlr/TokenStream;)V 1 -1
Lantlr/ANTLRTokdefParser; <init> (Lantlr/TokenStream;I)V 1 -1
Lantlr/ANTLRTokdefParser; setTool (Lantlr/Tool;)V 1 -1
Lantlr/ANTLRTokdefParser; file (Lantlr/ImportVocabTokenManager;)V 1 -1
Lantlr/ANTLRTokdefLexer; nextToken ()Lantlr/Token; 1 -1
Lantlr/ANTLRTokdefLexer; mID (Z)V 1 -1
Lantlr/ANTLRTokdefLexer; mWS (Z)V 1 -1
Lantlr/ANTLRTokdefParser; line (Lantlr/ImportVocabTokenManager;)V 1 -1
Lantlr/ANTLRTokdefLexer; mASSIGN (Z)V 1 -1
Lantlr/ANTLRTokdefLexer; mINT (Z)V 1 -1
Lantlr/ANTLRTokdefLexer; mDIGIT (Z)V 1 -1
Lantlr/ImportVocabTokenManager; define (Ljava/lang/String;I)V 1 -1
Lantlr/ImportVocabTokenManager; nextTokenType ()I 1 -1
Lantlr/ImportVocabTokenManager; isReadOnly ()Z 1 -1
Lantlr/ANTLRTokdefLexer; mSL_COMMENT (Z)V 1 -1
Lantlr/preprocessor/PreprocessorLexer; mBANG (Z)V 1 -1
Lantlr/preprocessor/Rule; setBang ()V 1 -1
Lantlr/preprocessor/Rule; setArgs (Ljava/lang/String;)V 1 -1
Lantlr/RuleRefElement; setArgs (Ljava/lang/String;)V 1 -1
Lantlr/MakeGrammar; refArgAction (Lantlr/Token;)V 1 -1
Lantlr/collections/impl/Vector; removeElement (Ljava/lang/Object;)Z 1 -1
Lantlr/StringLiteralSymbol; setLabel (Ljava/lang/String;)V 1 -1
Lantlr/ANTLRTokdefLexer; mSTRING (Z)V 1 -1
Lantlr/ANTLRParser; treeParserOptionsSpec ()V 1 -1
Lantlr/Tool; toolError (Ljava/lang/String;)V 1 -1
Lantlr/CSharpCodeGenerator; <clinit> ()V 1 -1
Lantlr/CSharpCodeGenerator; <init> ()V 1 -1
Lantlr/CSharpCharFormatter; <init> ()V 1 -1
Lantlr/CSharpCodeGenerator; gen ()V 1 -1
Lantlr/CSharpCodeGenerator; setupGrammarParameters (Lantlr/Grammar;)V 1 -1
Lantlr/CSharpCodeGenerator; gen (Lantlr/ParserGrammar;)V 1 -1
Lantlr/CSharpCodeGenerator; genBody (Lantlr/ParserGrammar;)V 1 -1
Lantlr/CSharpCodeGenerator; setupOutput (Ljava/lang/String;)V 1 -1
Lantlr/CSharpCodeGenerator; genHeader ()V 1 -1
Lantlr/CodeGenerator; println (Ljava/lang/String;)V 1 -1
Lantlr/DefineGrammarSymbols; getHeaderAction (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; genTokenDefinitions (Lantlr/TokenManager;)V 1 -1
Lantlr/CSharpCodeGenerator; processActionForSpecialSymbols (Ljava/lang/String;ILantlr/RuleBlock;Lantlr/ActionTransInfo;)Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; genRule (Lantlr/RuleSymbol;ZILantlr/TokenManager;)V 1 -1
Lantlr/CodeGenerator; _print (Ljava/lang/String;)V 1 -1
Lantlr/CodeGenerator; _println (Ljava/lang/String;)V 1 -1
Lantlr/CSharpCodeGenerator; genBlockPreamble (Lantlr/AlternativeBlock;)V 1 -1
Lantlr/CSharpCodeGenerator; genBlockInitAction (Lantlr/AlternativeBlock;)V 1 -1
Lantlr/CSharpCodeGenerator; genAlt (Lantlr/Alternative;Lantlr/AlternativeBlock;)V 1 -1
Lantlr/CSharpCodeGenerator; gen (Lantlr/RuleRefElement;)V 1 -1
Lantlr/CSharpCodeGenerator; genErrorTryForElement (Lantlr/AlternativeElement;)V 1 -1
Lantlr/CSharpCodeGenerator; GenRuleInvocation (Lantlr/RuleRefElement;)V 1 -1
Lantlr/CSharpCodeGenerator; genErrorCatchForElement (Lantlr/AlternativeElement;)V 1 -1
Lantlr/CSharpCodeGenerator; gen (Lantlr/ZeroOrMoreBlock;)V 1 -1
Lantlr/CSharpCodeGenerator; genCommonBlock (Lantlr/AlternativeBlock;Z)Lantlr/CSharpBlockFinishingInfo; 1 -1
Lantlr/CSharpBlockFinishingInfo; <init> ()V 1 -1
Lantlr/CSharpCodeGenerator; suitableForCaseExpression (Lantlr/Alternative;)Z 1 -1
Lantlr/CSharpCodeGenerator; lookaheadIsEmpty (Lantlr/Alternative;I)Z 1 -1
Lantlr/CSharpCodeGenerator; getLookaheadTestExpression (Lantlr/Alternative;I)Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; getLookaheadTestExpression ([Lantlr/Lookahead;I)Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; getLookaheadTestTerm (ILantlr/collections/impl/BitSet;)Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; lookaheadString (I)Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; getValueString (I)Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; gen (Lantlr/TokenRefElement;)V 1 -1
Lantlr/CSharpCodeGenerator; genElementAST (Lantlr/AlternativeElement;)V 1 -1
Lantlr/CSharpCodeGenerator; genASTDeclaration (Lantlr/AlternativeElement;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lantlr/CSharpCodeGenerator; mapTreeVariable (Lantlr/AlternativeElement;Ljava/lang/String;)V 1 -1
Lantlr/CSharpCodeGenerator; getASTCreateString (Lantlr/GrammarAtom;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; genMatch (Lantlr/GrammarAtom;)V 1 -1
Lantlr/CSharpCodeGenerator; genMatchUsingAtomText (Lantlr/GrammarAtom;)V 1 -1
Lantlr/CSharpCodeGenerator; genBlockFinish (Lantlr/CSharpBlockFinishingInfo;Ljava/lang/String;)V 1 -1
Lantlr/CSharpCodeGenerator; getBitsetName (I)Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; exitIfError ()V 1 -1
Lantlr/CSharpCodeGenerator; genInitFactory (Lantlr/Grammar;)V 1 -1
Lantlr/CSharpCodeGenerator; genTokenStrings ()V 1 -1
Lantlr/CSharpCharFormatter; literalString (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/CSharpCharFormatter; escapeString (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/CSharpCharFormatter; escapeChar (IZ)Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; genBitsets (Lantlr/collections/impl/Vector;I)V 1 -1
Lantlr/CSharpCodeGenerator; genBitSet (Lantlr/collections/impl/BitSet;I)V 1 -1
Lantlr/collections/impl/BitSet; lengthInLongWords ()I 1 -1
Lantlr/collections/impl/BitSet; toStringOfWords ()Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; gen (Lantlr/LexerGrammar;)V 1 -1
Lantlr/CSharpCodeGenerator; genBody (Lantlr/LexerGrammar;)V 1 -1
Lantlr/CSharpCodeGenerator; genNextToken ()V 1 -1
Lantlr/CSharpCodeGenerator; genCases (Lantlr/collections/impl/BitSet;)V 1 -1
Lantlr/CSharpCharFormatter; literalChar (I)Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; genLiteralsTest ()V 1 -1
Lantlr/CSharpCodeGenerator; gen (Lantlr/AlternativeBlock;)V 1 -1
Lantlr/CSharpCodeGenerator; gen (Lantlr/CharLiteralElement;)V 1 -1
Lantlr/CSharpCodeGenerator; gen (Lantlr/ActionElement;)V 1 -1
Lantlr/CSharpCodeGenerator; gen (Lantlr/CharRangeElement;)V 1 -1
Lantlr/CSharpCodeGenerator; OctalToUnicode (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; gen (Lantlr/OneOrMoreBlock;)V 1 -1
Lantlr/CSharpCodeGenerator; getRangeExpression (I[I)Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; gen (Lantlr/TreeWalkerGrammar;)V 1 -1
Lantlr/CSharpCodeGenerator; genBody (Lantlr/TreeWalkerGrammar;)V 1 -1
Lantlr/actions/csharp/ActionLexer; <clinit> ()V 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_0 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_1 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_2 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_3 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_4 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_5 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_6 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_7 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_8 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_9 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_10 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_11 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_12 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_13 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_14 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_15 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_16 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_17 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_18 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_19 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_20 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_21 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_22 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_23 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_24 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_25 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; mk_tokenSet_26 ()[J 1 -1
Lantlr/actions/csharp/ActionLexer; <init> (Ljava/lang/String;Lantlr/RuleBlock;Lantlr/CodeGenerator;Lantlr/ActionTransInfo;)V 1 -1
Lantlr/actions/csharp/ActionLexer; <init> (Ljava/io/Reader;)V 1 -1
Lantlr/actions/csharp/ActionLexer; <init> (Lantlr/InputBuffer;)V 1 -1
Lantlr/actions/csharp/ActionLexer; <init> (Lantlr/LexerSharedInputState;)V 1 -1
Lantlr/actions/csharp/ActionLexer; setLineOffset (I)V 1 -1
Lantlr/actions/csharp/ActionLexer; setTool (Lantlr/Tool;)V 1 -1
Lantlr/actions/csharp/ActionLexer; mACTION (Z)V 1 -1
Lantlr/actions/csharp/ActionLexer; mSTUFF (Z)V 1 -1
Lantlr/CSharpCodeGenerator; gen (Lantlr/TreeElement;)V 1 -1
Lantlr/CSharpCodeGenerator; genTokenTypes (Lantlr/TokenManager;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect43345; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect43345; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy3; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lantlr/CppCodeGenerator; countLines (Ljava/lang/String;)I 3 0
Lantlr/collections/impl/BitSet; degree ()I 3 0
Lantlr/CSharpCodeGenerator; gen (Lantlr/WildcardElement;)V 1 -1
Lantlr/AlternativeBlock; getAlternativeAt (I)Lantlr/Alternative; 3 0
Lantlr/actions/csharp/ActionLexer; mTEXT_ITEM (Z)V 1 -1
Lantlr/TokenQueue; elementAt (I)Lantlr/Token; 3 0
Lantlr/actions/csharp/ActionLexer; mTEXT_ARG (Z)V 1 -1
Lantlr/actions/csharp/ActionLexer; mTEXT_ARG_ELEMENT (Z)V 1 -1
Lantlr/actions/csharp/ActionLexer; mSTRING (Z)V 1 -1
Lantlr/CharQueue; removeFirst ()V 3 0
Lantlr/actions/csharp/ActionLexer; mTEXT_ARG_ID_ELEMENT (Z)V 1 -1
Lantlr/actions/csharp/ActionLexer; mID (Z)V 1 -1
Lantlr/CSharpCodeGenerator; declareSaveIndexVariableIfNeeded ()V 1 -1
Lantlr/collections/impl/BitSet; toPackedArray ()[J 1 -1
Lantlr/collections/impl/BitSet; add (I)V 3 0
Lantlr/collections/impl/BitSet; member (I)Z 3 0
Lantlr/CharScanner; consume ()V 3 0
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect536; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect537; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect43357; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect43357; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy4; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lantlr/ANTLRStringBuffer; append (C)V 3 0
Lantlr/CSharpCodeGenerator; genASTDeclaration (Lantlr/AlternativeElement;)V 1 -1
Lantlr/CSharpCodeGenerator; genASTDeclaration (Lantlr/AlternativeElement;Ljava/lang/String;)V 1 -1
L$Proxy4; value ()Lorg/vmmagic/pragma/Inline$When; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect3762; <init> ()V 1 -1
Lantlr/CSharpCodeGenerator; genSynPred (Lantlr/SynPredBlock;Ljava/lang/String;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect43369; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect43369; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy5; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect43378; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect43378; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy6; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lantlr/CppCodeGenerator; genCases (Lantlr/collections/impl/BitSet;)V 3 0
Lantlr/StringLiteralElement; <init> (Lantlr/Grammar;Lantlr/Token;I)V 3 0
Lantlr/CSharpCodeGenerator; gen (Lantlr/StringLiteralElement;)V 1 -1
Lantlr/CSharpCodeGenerator; mangleLiteral (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; genMatchUsingAtomTokenType (Lantlr/GrammarAtom;)V 1 -1
Lantlr/actions/csharp/ActionLexer; mAST_ITEM (Z)V 1 -1
Lantlr/CSharpCodeGenerator; mapTreeId (Ljava/lang/String;Lantlr/ActionTransInfo;)Ljava/lang/String; 1 -1
Lantlr/actions/csharp/ActionLexer; mWS (Z)V 1 -1
Lantlr/actions/csharp/ActionLexer; mVAR_ASSIGN (Z)V 1 -1
Lantlr/actions/csharp/ActionLexer; mTREE (Z)V 1 -1
Lantlr/actions/csharp/ActionLexer; mTREE_ELEMENT (Z)V 1 -1
Lantlr/actions/csharp/ActionLexer; mAST_CONSTRUCTOR (Z)V 1 -1
Lantlr/actions/csharp/ActionLexer; mAST_CTOR_ELEMENT (Z)V 1 -1
Lantlr/actions/csharp/ActionLexer; mID_ELEMENT (Z)Z 1 -1
Lantlr/CharQueue; expand ()V 1 -1
Lantlr/CSharpCodeGenerator; processStringForASTConstructor (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; getASTCreateString (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/CSharpCodeGenerator; getASTCreateString (Lantlr/collections/impl/Vector;)Ljava/lang/String; 1 -1
Lantlr/collections/impl/BitSet; toStringWithRanges (Ljava/lang/String;Lantlr/CharFormatter;)Ljava/lang/String; 1 -1
Lantlr/JavaCharFormatter; literalChar (I)Ljava/lang/String; 1 -1
Lantlr/JavaCharFormatter; escapeChar (IZ)Ljava/lang/String; 1 -1
Lantlr/actions/csharp/ActionLexer; mCOMMENT (Z)V 1 -1
Lantlr/actions/csharp/ActionLexer; mML_COMMENT (Z)V 1 -1
Lantlr/actions/csharp/ActionLexer; mSL_COMMENT (Z)V 1 -1
Lantlr/actions/csharp/ActionLexer; mESC (Z)V 1 -1
Lantlr/collections/impl/BitSet; toArray ()[I 3 0
Lantlr/CodeGenerator; elementsAreRange ([I)Z 3 0
Lantlr/ANTLRHashString; hashCode ()I 3 0
Lantlr/DefaultToolErrorHandler; warnAltExitAmbiguity (Lantlr/Grammar;Lantlr/BlockWithImpliedExitPath;ZI[Lantlr/Lookahead;I)V 1 -1
Lantlr/ANTLRTokdefLexer; mLPAREN (Z)V 1 -1
Lantlr/ANTLRTokdefLexer; mRPAREN (Z)V 1 -1
Lantlr/JavaCodeGenerator; <clinit> ()V 1 -1
Lantlr/JavaCodeGenerator; <init> ()V 1 -1
Lantlr/JavaCodeGenerator; gen ()V 1 -1
Lantlr/JavaCodeGenerator; setupGrammarParameters (Lantlr/Grammar;)V 1 -1
Lantlr/JavaCodeGenerator; gen (Lantlr/ParserGrammar;)V 1 -1
Lantlr/JavaCodeGenerator; setupOutput (Ljava/lang/String;)V 1 -1
Lantlr/JavaCodeGenerator; genHeader ()V 1 -1
Lantlr/JavaCodeGenerator; processActionForSpecialSymbols (Ljava/lang/String;ILantlr/RuleBlock;Lantlr/ActionTransInfo;)Ljava/lang/String; 1 -1
Lantlr/JavaCodeGenerator; genRule (Lantlr/RuleSymbol;ZI)V 1 -1
Lantlr/JavaCodeGenerator; genBlockPreamble (Lantlr/AlternativeBlock;)V 1 -1
Lantlr/JavaCodeGenerator; genBlockInitAction (Lantlr/AlternativeBlock;)V 1 -1
Lantlr/JavaCodeGenerator; genAlt (Lantlr/Alternative;Lantlr/AlternativeBlock;)V 1 -1
Lantlr/JavaCodeGenerator; gen (Lantlr/RuleRefElement;)V 1 -1
Lantlr/JavaCodeGenerator; genErrorTryForElement (Lantlr/AlternativeElement;)V 1 -1
Lantlr/JavaCodeGenerator; GenRuleInvocation (Lantlr/RuleRefElement;)V 1 -1
Lantlr/JavaCodeGenerator; genErrorCatchForElement (Lantlr/AlternativeElement;)V 1 -1
Lantlr/JavaCodeGenerator; gen (Lantlr/ZeroOrMoreBlock;)V 1 -1
Lantlr/JavaCodeGenerator; genCommonBlock (Lantlr/AlternativeBlock;Z)Lantlr/JavaBlockFinishingInfo; 1 -1
Lantlr/JavaBlockFinishingInfo; <init> ()V 1 -1
Lantlr/JavaCodeGenerator; suitableForCaseExpression (Lantlr/Alternative;)Z 1 -1
Lantlr/JavaCodeGenerator; lookaheadIsEmpty (Lantlr/Alternative;I)Z 1 -1
Lantlr/JavaCodeGenerator; getLookaheadTestExpression (Lantlr/Alternative;I)Ljava/lang/String; 1 -1
Lantlr/JavaCodeGenerator; getLookaheadTestExpression ([Lantlr/Lookahead;I)Ljava/lang/String; 1 -1
Lantlr/JavaCodeGenerator; getLookaheadTestTerm (ILantlr/collections/impl/BitSet;)Ljava/lang/String; 1 -1
Lantlr/JavaCodeGenerator; lookaheadString (I)Ljava/lang/String; 1 -1
Lantlr/JavaCodeGenerator; getValueString (I)Ljava/lang/String; 1 -1
Lantlr/JavaCodeGenerator; gen (Lantlr/TokenRefElement;)V 1 -1
Lantlr/JavaCodeGenerator; genElementAST (Lantlr/AlternativeElement;)V 1 -1
Lantlr/JavaCodeGenerator; genASTDeclaration (Lantlr/AlternativeElement;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lantlr/JavaCodeGenerator; mapTreeVariable (Lantlr/AlternativeElement;Ljava/lang/String;)V 1 -1
Lantlr/JavaCodeGenerator; getASTCreateString (Lantlr/GrammarAtom;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/JavaCodeGenerator; getASTCreateString (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/JavaCodeGenerator; genMatch (Lantlr/GrammarAtom;)V 1 -1
Lantlr/JavaCodeGenerator; genMatchUsingAtomText (Lantlr/GrammarAtom;)V 1 -1
Lantlr/JavaCodeGenerator; genBlockFinish (Lantlr/JavaBlockFinishingInfo;Ljava/lang/String;)V 1 -1
Lantlr/JavaCodeGenerator; exitIfError ()V 1 -1
Lantlr/JavaCodeGenerator; genTokenStrings ()V 1 -1
Lantlr/JavaCharFormatter; literalString (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/JavaCharFormatter; escapeString (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/JavaCodeGenerator; genTokenASTNodeMap ()V 1 -1
Lantlr/JavaCodeGenerator; genBitsets (Lantlr/collections/impl/Vector;I)V 1 -1
Lantlr/JavaCodeGenerator; genBitSet (Lantlr/collections/impl/BitSet;I)V 1 -1
Lantlr/JavaCodeGenerator; gen (Lantlr/LexerGrammar;)V 1 -1
Lantlr/JavaCodeGenerator; genNextToken ()V 1 -1
Lantlr/JavaCodeGenerator; genCases (Lantlr/collections/impl/BitSet;)V 1 -1
Lantlr/JavaCodeGenerator; genLiteralsTest ()V 1 -1
Lantlr/JavaCodeGenerator; gen (Lantlr/AlternativeBlock;)V 1 -1
Lantlr/JavaCodeGenerator; gen (Lantlr/CharLiteralElement;)V 1 -1
Lantlr/JavaCodeGenerator; gen (Lantlr/ActionElement;)V 1 -1
Lantlr/JavaCodeGenerator; gen (Lantlr/CharRangeElement;)V 1 -1
Lantlr/JavaCodeGenerator; gen (Lantlr/OneOrMoreBlock;)V 1 -1
Lantlr/JavaCodeGenerator; getRangeExpression (I[I)Ljava/lang/String; 1 -1
Lantlr/JavaCodeGenerator; gen (Lantlr/TreeWalkerGrammar;)V 1 -1
Lantlr/actions/java/ActionLexer; <clinit> ()V 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_0 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_1 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_2 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_3 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_4 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_5 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_6 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_7 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_8 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_9 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_10 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_11 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_12 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_13 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_14 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_15 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_16 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_17 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_18 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_19 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_20 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_21 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_22 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_23 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_24 ()[J 1 -1
Lantlr/actions/java/ActionLexer; mk_tokenSet_25 ()[J 1 -1
Lantlr/actions/java/ActionLexer; <init> (Ljava/lang/String;Lantlr/RuleBlock;Lantlr/CodeGenerator;Lantlr/ActionTransInfo;)V 1 -1
Lantlr/actions/java/ActionLexer; <init> (Ljava/io/Reader;)V 1 -1
Lantlr/actions/java/ActionLexer; <init> (Lantlr/InputBuffer;)V 1 -1
Lantlr/actions/java/ActionLexer; <init> (Lantlr/LexerSharedInputState;)V 1 -1
Lantlr/actions/java/ActionLexer; setLineOffset (I)V 1 -1
Lantlr/actions/java/ActionLexer; setTool (Lantlr/Tool;)V 1 -1
Lantlr/actions/java/ActionLexer; mACTION (Z)V 1 -1
Lantlr/actions/java/ActionLexer; mSTUFF (Z)V 1 -1
Lantlr/JavaCodeGenerator; gen (Lantlr/TreeElement;)V 1 -1
Lantlr/JavaCodeGenerator; genTokenTypes (Lantlr/TokenManager;)V 1 -1
Lantlr/JavaCodeGenerator; gen (Lantlr/WildcardElement;)V 1 -1
Lantlr/actions/java/ActionLexer; mTEXT_ITEM (Z)V 1 -1
Lantlr/actions/java/ActionLexer; mTEXT_ARG (Z)V 1 -1
Lantlr/actions/java/ActionLexer; mTEXT_ARG_ELEMENT (Z)V 1 -1
Lantlr/actions/java/ActionLexer; mSTRING (Z)V 1 -1
Lantlr/actions/java/ActionLexer; mTEXT_ARG_ID_ELEMENT (Z)V 1 -1
Lantlr/actions/java/ActionLexer; mID (Z)V 1 -1
Lantlr/JavaCodeGenerator; genASTDeclaration (Lantlr/AlternativeElement;)V 1 -1
Lantlr/JavaCodeGenerator; genASTDeclaration (Lantlr/AlternativeElement;Ljava/lang/String;)V 1 -1
Lantlr/JavaCodeGenerator; genErrorHandler (Lantlr/ExceptionSpec;)V 1 -1
Lantlr/CodeGenerator; extractIdOfAction (Lantlr/Token;)Ljava/lang/String; 1 -1
Lantlr/JavaCodeGenerator; genSynPred (Lantlr/SynPredBlock;Ljava/lang/String;)V 1 -1
Lantlr/JavaCodeGenerator; gen (Lantlr/StringLiteralElement;)V 1 -1
Lantlr/JavaCodeGenerator; mangleLiteral (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lantlr/JavaCodeGenerator; genMatchUsingAtomTokenType (Lantlr/GrammarAtom;)V 1 -1
Lantlr/actions/java/ActionLexer; mAST_ITEM (Z)V 1 -1
Lantlr/JavaCodeGenerator; mapTreeId (Ljava/lang/String;Lantlr/ActionTransInfo;)Ljava/lang/String; 1 -1
Lantlr/actions/java/ActionLexer; mWS (Z)V 1 -1
Lantlr/actions/java/ActionLexer; mVAR_ASSIGN (Z)V 1 -1
Lantlr/actions/java/ActionLexer; mTREE (Z)V 1 -1
Lantlr/actions/java/ActionLexer; mTREE_ELEMENT (Z)V 1 -1
Lantlr/actions/java/ActionLexer; mAST_CONSTRUCTOR (Z)V 1 -1
Lantlr/actions/java/ActionLexer; mAST_CTOR_ELEMENT (Z)V 1 -1
Lantlr/actions/java/ActionLexer; mID_ELEMENT (Z)Z 1 -1
Lantlr/JavaCodeGenerator; getASTCreateString (Lantlr/collections/impl/Vector;)Ljava/lang/String; 1 -1
Lantlr/actions/java/ActionLexer; mCOMMENT (Z)V 1 -1
Lantlr/actions/java/ActionLexer; mML_COMMENT (Z)V 1 -1
Lantlr/actions/java/ActionLexer; mSL_COMMENT (Z)V 1 -1
Lantlr/actions/java/ActionLexer; mESC (Z)V 1 -1
Lantlr/InputBuffer; consume ()V 3 0
Lantlr/Lookahead; nil ()Z 3 0
Lantlr/ANTLRStringBuffer; append (Ljava/lang/String;)V 3 0
Lantlr/Alternative; addElement (Lantlr/AlternativeElement;)V 3 0
Lantlr/CharScanner; testLiteralsTable (I)I 3 0
Lantlr/InputBuffer; syncConsume ()V 3 0
Lantlr/LLkAnalyzer; look (ILantlr/CharRangeElement;)Lantlr/Lookahead; 3 0
Lantlr/JavaCodeGenerator; genTokenStrings ()V 3 0
Lantlr/RuleBlock; isLexerAutoGenRule ()Z 1 -1
Lantlr/SimpleTokenManager; clone ()Ljava/lang/Object; 1 -1
Lantlr/collections/impl/Vector; clone ()Ljava/lang/Object; 1 -1
Lantlr/SimpleTokenManager; setName (Ljava/lang/String;)V 1 -1
Lantlr/Tool; warning (Ljava/lang/String;Ljava/lang/String;II)V 1 -1
Lantlr/LLkAnalyzer; lookaheadEquivForApproxAndFullAnalysis ([Lantlr/Lookahead;I)Z 1 -1
Lantlr/collections/impl/BitSet; orInPlace (Lantlr/collections/impl/BitSet;)V 3 0
Lantlr/BlockContext; addAlternativeElement (Lantlr/AlternativeElement;)V 3 0
Lantlr/CharScanner; resetText ()V 3 0
L$Proxy4; arguments ()[I 1 -1
Lantlr/collections/impl/BitSet; clone ()Ljava/lang/Object; 3 0
Lantlr/CharScanner; append (C)V 3 0
Lantlr/Lookahead; <init> (Lantlr/collections/impl/BitSet;)V 3 0
Ljava/io/StringReader; read ()I 3 0
Lantlr/collections/impl/BitSet; degree ()I 3 2
Ljava/lang/reflect/Array; getLength (Ljava/lang/Object;)I 1 -1
Lantlr/CharScanner; LA (I)C 3 2
Lantlr/collections/impl/BitSet; member (I)Z 3 2
Lantlr/LLkParser; LA (I)I 3 1
Lantlr/actions/csharp/ActionLexer; <init> (Lantlr/InputBuffer;)V 3 1
Lantlr/collections/impl/Vector; elementAt (I)Ljava/lang/Object; 3 0
Lantlr/ANTLRLexer; mRULE_REF (Z)V 3 0
Lantlr/collections/impl/BitSet; toArray ()[I 3 2
Lantlr/MakeGrammar; defineRuleName (Lantlr/Token;Ljava/lang/String;ZLjava/lang/String;)V 3 0
Lantlr/LLkAnalyzer; deterministic (Lantlr/AlternativeBlock;)Z 3 0
Lantlr/InputBuffer; syncConsume ()V 3 1
Lantlr/AlternativeBlock; getAlternativeAt (I)Lantlr/Alternative; 3 2
Lantlr/CharScanner; consume ()V 3 2
Lantlr/collections/impl/Vector; elementAt (I)Ljava/lang/Object; 3 1
Lantlr/collections/impl/BitSet; andInPlace (Lantlr/collections/impl/BitSet;)V 3 0
Lantlr/Lookahead; of (I)Lantlr/Lookahead; 3 1
Lantlr/LLkAnalyzer; look (ILjava/lang/String;)Lantlr/Lookahead; 3 0
Ldacapo/Benchmark; stopIteration ()V 1 -1
Ldacapo/TeePrintStream; closeLog ()V 1 -1
Ldacapo/TeeOutputStream; closeLog ()V 1 -1
Ldacapo/TeeOutputStream; flush ()V 1 -1
Ldacapo/Callback; stopWarmup ()V 1 -1
Ldacapo/Benchmark; validate (Ljava/lang/String;)Z 1 -1
Ldacapo/parser/Config; getOutputs (Ljava/lang/String;)Ljava/util/Set; 1 -1
Ldacapo/parser/Config; hasDigest (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Ldacapo/parser/Config$OutputFile; hasDigest ()Z 1 -1
Ldacapo/parser/Config; getDigest (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Ldacapo/Benchmark; fileInScratch (Ljava/lang/String;)Ljava/lang/String; 1 -1
Ldacapo/parser/Config; isTextFile (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Ldacapo/parser/Config; filterScratch (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Ldacapo/FileDigest; get (Ljava/lang/String;ZZLjava/io/File;)[B 1 -1
Ldacapo/FileDigest; getText (Ljava/io/File;ZLjava/io/File;)[B 1 -1
Ldacapo/Digest; create ()Ljava/security/MessageDigest; 1 -1
Ljava/security/Security; <clinit> ()V 1 -1
Ljava/security/Security; loadProviders (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lgnu/javax/crypto/jce/GnuCrypto; <init> ()V 1 -1
Lgnu/javax/crypto/jce/GnuCrypto$1; <init> (Lgnu/javax/crypto/jce/GnuCrypto;)V 1 -1
Lgnu/javax/crypto/jce/GnuCrypto$1; run ()Ljava/lang/Object; 1 -1
Lgnu/javax/crypto/jce/GnuSasl; <init> ()V 1 -1
Lgnu/javax/crypto/jce/GnuSasl$1; <init> (Lgnu/javax/crypto/jce/GnuSasl;)V 1 -1
Lgnu/javax/crypto/jce/GnuSasl$1; run ()Ljava/lang/Object; 1 -1
Lgnu/javax/net/ssl/provider/Jessie; <init> ()V 1 -1
Lgnu/javax/net/ssl/provider/Jessie$1; <init> (Lgnu/javax/net/ssl/provider/Jessie;)V 1 -1
Lgnu/javax/net/ssl/provider/Jessie$1; run ()Ljava/lang/Object; 1 -1
Lgnu/javax/security/auth/callback/GnuCallbacks; <init> ()V 1 -1
Lgnu/javax/security/auth/callback/GnuCallbacks$1; <init> (Lgnu/javax/security/auth/callback/GnuCallbacks;)V 1 -1
Lgnu/javax/security/auth/callback/GnuCallbacks$1; run ()Ljava/lang/Object; 1 -1
Ljava/security/Security; getProviders ()[Ljava/security/Provider; 1 -1
Lgnu/java/security/Engine; <clinit> ()V 1 -1
Lgnu/java/security/Engine; getInstance (Ljava/lang/String;Ljava/lang/String;Ljava/security/Provider;)Ljava/lang/Object; 1 -1
Lgnu/java/security/Engine; getInstance (Ljava/lang/String;Ljava/lang/String;Ljava/security/Provider;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lgnu/java/security/Engine; getCompatibleConstructor (Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/reflect/Constructor; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect39442; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect39442; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lgnu/java/security/jce/hash/Sha160Spi; <init> ()V 1 -1
Lgnu/java/security/jce/hash/MessageDigestAdapter; <init> (Ljava/lang/String;)V 1 -1
Lgnu/java/security/hash/HashFactory; getInstance (Ljava/lang/String;)Lgnu/java/security/hash/IMessageDigest; 1 -1
Lgnu/java/security/hash/Sha160; <clinit> ()V 1 -1
Lgnu/java/security/hash/Sha160; <init> ()V 1 -1
Lgnu/java/security/hash/BaseHash; <init> (Ljava/lang/String;II)V 1 -1
Lgnu/java/security/hash/Sha160; resetContext ()V 1 -1
Lgnu/java/security/hash/Sha160; selfTest ()Z 1 -1
Lgnu/java/security/hash/BaseHash; update (B)V 1 -1
Lgnu/java/security/hash/BaseHash; digest ()[B 1 -1
Lgnu/java/security/hash/Sha160; padBuffer ()[B 1 -1
Lgnu/java/security/hash/BaseHash; update ([BII)V 1 -1
Lgnu/java/security/hash/Sha160; transform ([BI)V 1 -1
Lgnu/java/security/hash/Sha160; sha (IIIII[BI)[I 1 -1
Lgnu/java/security/hash/Sha160; getResult ()[B 1 -1
Lgnu/java/security/hash/BaseHash; reset ()V 1 -1
Lgnu/java/security/util/Util; <clinit> ()V 1 -1
Lgnu/java/security/util/Util; toString ([B)Ljava/lang/String; 1 -1
Lgnu/java/security/util/Util; toString ([BII)Ljava/lang/String; 1 -1
Lgnu/java/security/jce/hash/MessageDigestAdapter; <init> (Lgnu/java/security/hash/IMessageDigest;)V 1 -1
Ljava/security/DummyMessageDigest; <init> (Ljava/security/MessageDigestSpi;Ljava/lang/String;)V 1 -1
Ldacapo/FileDigest; replaceAllFixed (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Ljava/security/DummyMessageDigest; engineUpdate (B)V 1 -1
Lgnu/java/security/jce/hash/Sha160Spi; engineUpdate (B)V 1 -1
Lgnu/java/security/jce/hash/MessageDigestAdapter; engineUpdate (B)V 1 -1
Ljava/security/DummyMessageDigest; engineDigest ()[B 1 -1
Lgnu/java/security/jce/hash/Sha160Spi; engineDigest ()[B 1 -1
Lgnu/java/security/jce/hash/MessageDigestAdapter; engineDigest ()[B 1 -1
Ldacapo/Digest; toString ([B)Ljava/lang/String; 1 -1
Ldacapo/parser/Config; hasLines (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Ldacapo/parser/Config$OutputFile; hasLines ()Z 1 -1
Ldacapo/parser/Config; hasBytes (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Ldacapo/parser/Config$OutputFile; hasBytes ()Z 1 -1
Ldacapo/parser/Config; checkExists (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Ldacapo/Callback; completeWarmup (Ljava/lang/String;Z)V 1 -1
Ldacapo/Callback; complete (Ljava/lang/String;ZZ)V 1 -1
Ldacapo/antlr/AntlrHarness; postIteration (Ljava/lang/String;)V 1 -1
Ldacapo/Benchmark; postIteration (Ljava/lang/String;)V 1 -1
Ldacapo/Benchmark; postIterationCleanup (Ljava/lang/String;)V 1 -1
Ldacapo/parser/Config; isKept (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Ldacapo/Benchmark; deleteFile (Ljava/io/File;)V 1 -1
Ldacapo/Benchmark; isPreserve ()Z 1 -1
Ldacapo/Benchmark; deleteTree (Ljava/io/File;)V 1 -1
Ldacapo/TeePrintStream; version ()V 1 -1
Ldacapo/TeeOutputStream; version ()V 1 -1
Lantlr/CppCodeGenerator; countLines (Ljava/lang/String;)I 3 2
Lgnu/java/security/hash/BaseHash; update (B)V 3 1
Lantlr/CppCodeGenerator; getValueString (I)Ljava/lang/String; 3 0
Lantlr/preprocessor/PreprocessorLexer; mWS (Z)V 3 0
Lantlr/ANTLRHashString; hashCode ()I 3 1
Lantlr/preprocessor/PreprocessorLexer; mELEMENT (Z)V 3 0
Lantlr/ANTLRParser; alternative ()V 3 0
Lantlr/collections/impl/BitSet; andInPlace (Lantlr/collections/impl/BitSet;)V 3 1
Lantlr/CodeGenerator; printTabs ()V 3 1
Lantlr/collections/impl/Vector; size ()I 3 1
Lantlr/CodeGenerator; println (Ljava/lang/String;)V 3 1
Lantlr/GrammarElement; <init> (Lantlr/Grammar;Lantlr/Token;)V 3 1
Lantlr/preprocessor/PreprocessorLexer; mSL_COMMENT (Z)V 3 0
Lantlr/Lookahead; <init> (Lantlr/collections/impl/BitSet;)V 3 2
Lantlr/preprocessor/PreprocessorLexer; mRULE_BLOCK (Z)V 3 0
Lantlr/ANTLRStringBuffer; append (Ljava/lang/String;)V 3 2
Lantlr/ANTLRLexer; mCOLON (Z)V 3 0
Lantlr/MakeGrammar; refReturnAction (Lantlr/Token;)V 3 0
Lantlr/preprocessor/PreprocessorLexer; mCURLY_BLOCK_SCARF (Z)V 3 0
Lantlr/actions/java/ActionLexer; mSTUFF (Z)V 3 0
Lantlr/CppCodeGenerator; _println (Ljava/lang/String;)V 3 1
Lantlr/preprocessor/Tool; <init> (Lantlr/Tool;[Ljava/lang/String;)V 3 1
Lantlr/CharScanner; match (Lantlr/collections/impl/BitSet;)V 3 1
Lantlr/TokenBuffer; fill (I)V 3 1
Lantlr/ANTLRLexer; mOR (Z)V 3 0
Lantlr/preprocessor/PreprocessorLexer; mALT (Z)V 3 0
Lantlr/CSharpCodeGenerator; getValueString (I)Ljava/lang/String; 3 0
Lantlr/PreservingFileWriter; close ()V 3 0
Lantlr/SimpleTokenManager; getTokenSymbol (Ljava/lang/String;)Lantlr/TokenSymbol; 3 1
Lantlr/TokenBuffer; LT (I)Lantlr/Token; 3 1
Lantlr/LLkAnalyzer; getAltLookahead (Lantlr/AlternativeBlock;II)Lantlr/Lookahead; 3 0
Lantlr/CodeGenerator; markBitsetForGen (Lantlr/collections/impl/BitSet;)I 3 0
Lantlr/CharRangeElement; <init> (Lantlr/LexerGrammar;Lantlr/Token;Lantlr/Token;I)V 3 0
Lantlr/preprocessor/PreprocessorLexer; mML_COMMENT (Z)V 3 0
Ldacapo/antlr/AntlrHarness; iterate (Ljava/lang/String;)V 3 0
Lantlr/CSharpCodeGenerator; GenRuleInvocation (Lantlr/RuleRefElement;)V 3 0
Lantlr/preprocessor/PreprocessorLexer; mALT (Z)V 3 1
Lantlr/collections/impl/BitSet; clone ()Ljava/lang/Object; 3 1
Lantlr/CharScanner; matchNot (C)V 3 1
Lantlr/JavaCodeGenerator; genBlockFinish (Lantlr/JavaBlockFinishingInfo;Ljava/lang/String;)V 3 0
Lantlr/collections/impl/BitSet; equals (Ljava/lang/Object;)Z 3 0
Lantlr/LLkAnalyzer; getAltLookahead (Lantlr/AlternativeBlock;II)Lantlr/Lookahead; 3 1
Lantlr/ANTLRLexer; nextToken ()Lantlr/Token; 3 0
Lantlr/CodeGenerator; elementsAreRange ([I)Z 3 1
Lantlr/CharScanner; match (C)V 3 1
Lantlr/ANTLRTokdefLexer; <init> (Lantlr/InputBuffer;)V 3 1
Lantlr/collections/impl/BitSet; <init> (I)V 3 1
Lantlr/ANTLRLexer; mNESTED_ACTION (Z)V 3 0
Lgnu/java/security/hash/Sha160; sha (IIIII[BI)[I 3 0
Lantlr/CharScanner; match (Ljava/lang/String;)V 3 0
Lantlr/CppCharFormatter; literalString (Ljava/lang/String;)Ljava/lang/String; 3 1
Lantlr/CharScanner; matchRange (CC)V 3 1
Lantlr/CppCharFormatter; escapeString (Ljava/lang/String;)Ljava/lang/String; 3 0
Lantlr/CodeGenerator; println (Ljava/lang/String;)V 3 2
Lantlr/Tool; main ([Ljava/lang/String;)V 3 0
Lantlr/collections/impl/BitSet; add (I)V 3 2
Lantlr/ANTLRLexer; mML_COMMENT (Z)V 3 0
Lantlr/collections/impl/BitSet; orInPlace (Lantlr/collections/impl/BitSet;)V 3 1
Lantlr/SimpleTokenManager; define (Lantlr/TokenSymbol;)V 3 1
Lantlr/Lookahead; combineWith (Lantlr/Lookahead;)V 3 0
Lantlr/JavaCodeGenerator; mangleLiteral (Ljava/lang/String;)Ljava/lang/String; 3 0
Lantlr/ANTLRLexer; mACTION (Z)V 3 0
Lantlr/CSharpCharFormatter; escapeString (Ljava/lang/String;)Ljava/lang/String; 3 0
Lantlr/CSharpCodeGenerator; <init> ()V 3 0
Lantlr/CSharpCodeGenerator; genTokenTypes (Lantlr/TokenManager;)V 3 0
Lantlr/Lookahead; combineWith (Lantlr/Lookahead;)V 3 1
Lantlr/collections/impl/BitSet; nil ()Z 3 1
Lantlr/CppCodeGenerator; println (Ljava/lang/String;)V 3 1
Lantlr/preprocessor/PreprocessorLexer; mNEWLINE (Z)V 3 0
Lantlr/JavaCodeGenerator; genBitSet (Lantlr/collections/impl/BitSet;I)V 3 0
Ljava/io/StringReader; read ()I 3 1
Lantlr/CharRangeElement; <init> (Lantlr/LexerGrammar;Lantlr/Token;Lantlr/Token;I)V 3 1
Lantlr/preprocessor/PreprocessorLexer; mID (Z)V 3 0
Lantlr/LLkAnalyzer; look (ILantlr/GrammarAtom;)Lantlr/Lookahead; 3 0
Lantlr/preprocessor/PreprocessorLexer; mELEMENT (Z)V 3 1
Lantlr/Tool; openOutputFile (Ljava/lang/String;)Ljava/io/PrintWriter; 3 1
Lantlr/CSharpCodeGenerator; genCases (Lantlr/collections/impl/BitSet;)V 3 0
Lantlr/LLkAnalyzer; look (ILantlr/CharLiteralElement;)Lantlr/Lookahead; 3 0
Lantlr/MakeGrammar; refToken (Lantlr/Token;Lantlr/Token;Lantlr/Token;Lantlr/Token;ZIZ)V 3 0
Lantlr/CSharpCodeGenerator; genTokenStrings ()V 3 0
Lantlr/preprocessor/PreprocessorLexer; mSL_COMMENT (Z)V 3 1
Lantlr/LLkAnalyzer; look (ILantlr/CharRangeElement;)Lantlr/Lookahead; 3 1
Lantlr/CodeGenerator; _print (Ljava/lang/String;)V 3 1
Lantlr/MakeGrammar; refCharRange (Lantlr/Token;Lantlr/Token;Lantlr/Token;IZ)V 3 0
Lantlr/collections/impl/Vector; appendElement (Ljava/lang/Object;)V 3 1
Lantlr/LLkParser; LT (I)Lantlr/Token; 3 1
Lantlr/preprocessor/PreprocessorLexer; mACTION (Z)V 3 0
Lantlr/BlockContext; currentAlt ()Lantlr/Alternative; 3 1
Lantlr/Lookahead; clone ()Ljava/lang/Object; 3 0
Lantlr/ANTLRLexer; mSEMI (Z)V 3 0
Lantlr/preprocessor/PreprocessorLexer; mML_COMMENT (Z)V 3 1
Lantlr/TokenBuffer; consume ()V 3 1
Lantlr/collections/impl/BitSet; and (Lantlr/collections/impl/BitSet;)Lantlr/collections/impl/BitSet; 3 1
Lantlr/JavaCharFormatter; literalChar (I)Ljava/lang/String; 3 1
Lantlr/CppCodeGenerator; genBitsets (Lantlr/collections/impl/Vector;ILjava/lang/String;)V 3 0
Lantlr/Tool; doEverything ([Ljava/lang/String;)I 3 0
Lantlr/AlternativeBlock; look (I)Lantlr/Lookahead; 3 1
Lantlr/Lookahead; intersection (Lantlr/Lookahead;)Lantlr/Lookahead; 3 1
Lantlr/CharScanner; makeToken (I)Lantlr/Token; 3 0
Lantlr/ANTLRParser; setBlockElement ()Lantlr/collections/impl/BitSet; 3 0
Lantlr/ANTLRLexer; mWS (Z)V 3 0
Lantlr/JavaCodeGenerator; genCommonBlock (Lantlr/AlternativeBlock;Z)Lantlr/JavaBlockFinishingInfo; 3 0
Lantlr/RuleSymbol; numReferences ()I 3 1
Lantlr/JavaCodeGenerator; lookaheadString (I)Ljava/lang/String; 3 1
Lantlr/preprocessor/Preprocessor; rule (Lantlr/preprocessor/Grammar;)V 3 0
Lantlr/LLkAnalyzer; look (ILantlr/AlternativeBlock;)Lantlr/Lookahead; 3 0
Lantlr/JavaCodeGenerator; mangleLiteral (Ljava/lang/String;)Ljava/lang/String; 3 1
Lantlr/collections/impl/VectorEnumerator; nextElement ()Ljava/lang/Object; 3 0
Lantlr/MakeGrammar; beginSubRule (Lantlr/Token;Lantlr/Token;Z)V 3 0
Lantlr/CodeGenerator; genTokenInterchange (Lantlr/TokenManager;)V 3 0
Lantlr/Lookahead; clone ()Ljava/lang/Object; 3 1
Lantlr/Parser; match (I)V 3 1
Lantlr/JavaCodeGenerator; genCases (Lantlr/collections/impl/BitSet;)V 3 0
Lantlr/ANTLRLexer; mSL_COMMENT (Z)V 3 0
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect3146; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44904; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44904; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy7; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect1060; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44915; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect44915; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy8; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lantlr/PreservingFileWriter; close ()V 3 1
Lantlr/preprocessor/PreprocessorLexer; mID_OR_KEYWORD (Z)V 3 0
Lantlr/ANTLRLexer; mTOKEN_REF (Z)V 3 0
Lantlr/MakeGrammar; beginSubRule (Lantlr/Token;Lantlr/Token;Z)V 3 1
Lantlr/MakeGrammar; refRule (Lantlr/Token;Lantlr/Token;Lantlr/Token;Lantlr/Token;I)V 3 0
Lantlr/CSharpCodeGenerator; getLookaheadTestTerm (ILantlr/collections/impl/BitSet;)Ljava/lang/String; 3 0
Ljava/io/BufferedWriter; write ([CII)V 3 0
Lantlr/MakeGrammar; setBlock (Lantlr/AlternativeBlock;Lantlr/AlternativeBlock;)V 3 0
Lantlr/ANTLRStringBuffer; setLength (I)V 3 1
Lantlr/ANTLRLexer; mWS (Z)V 3 1
Lantlr/CppCharFormatter; literalChar (I)Ljava/lang/String; 3 1
Lantlr/Token; setType (I)V 3 2
Lantlr/CppCodeGenerator; genCases (Lantlr/collections/impl/BitSet;)V 3 1
Lantlr/LLkAnalyzer; look (ILantlr/RuleRefElement;)Lantlr/Lookahead; 3 0
Lantlr/SimpleTokenManager; getTokenStringAt (I)Ljava/lang/String; 3 1
Lantlr/ANTLRLexer; mINTERNAL_RULE_REF (Z)I 3 0
Lantlr/ANTLRParser; elementNoOptionSpec ()V 3 0
Lantlr/Lookahead; <init> ()V 3 1
Lantlr/CodeGenerator; _printAction (Ljava/lang/String;)V 3 0
Lantlr/CSharpCharFormatter; literalChar (I)Ljava/lang/String; 3 1
Lantlr/CommonToken; setLine (I)V 3 2
Lantlr/CSharpCodeGenerator; getBitsetName (I)Ljava/lang/String; 3 1
Lantlr/CSharpCodeGenerator; gen ()V 3 0
Lantlr/preprocessor/PreprocessorLexer; mNEWLINE (Z)V 3 1
Lantlr/JavaCodeGenerator; getValueString (I)Ljava/lang/String; 3 0
Lantlr/JavaCodeGenerator; getASTCreateString (Ljava/lang/String;)Ljava/lang/String; 3 0
Lantlr/ActionElement; <init> (Lantlr/Grammar;Lantlr/Token;)V 3 1
Lantlr/CommonToken; getLine ()I 3 2
Lantlr/CharScanner; testLiteralsTable (Ljava/lang/String;I)I 3 1
Lantlr/CommonToken; getText ()Ljava/lang/String; 3 2
Lantlr/CSharpCodeGenerator; genAlt (Lantlr/Alternative;Lantlr/AlternativeBlock;)V 3 0
Lantlr/CharScanner; getCaseSensitiveLiterals ()Z 3 2
Lantlr/preprocessor/PreprocessorLexer; mACTION (Z)V 3 1
Lantlr/JavaCodeGenerator; genCases (Lantlr/collections/impl/BitSet;)V 3 1
Ljava/io/BufferedWriter; write ([CII)V 3 1
Lantlr/ImportVocabTokenManager; nextTokenType ()I 3 2
Lantlr/CppCodeGenerator; gen (Lantlr/ZeroOrMoreBlock;)V 3 0
Lantlr/CodeGenerator; _printAction (Ljava/lang/String;)V 3 1
Lantlr/MakeGrammar; zeroOrMoreSubRule ()V 3 0
Lantlr/LLkAnalyzer; FOLLOW (ILantlr/RuleEndElement;)Lantlr/Lookahead; 3 0
Lantlr/ANTLRLexer; nextToken ()Lantlr/Token; 3 1
Lantlr/MakeGrammar; context ()Lantlr/BlockContext; 3 1
LMMTkCallback; start (Ljava/lang/String;)V 1 -1
LMMTkHarness; harnessBegin ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect26119; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Ldacapo/Callback; start (Ljava/lang/String;)V 1 -1
Lantlr/Token; <init> ()V 3 1
Lantlr/CodeGenerator; print (Ljava/lang/String;)V 3 1
Lantlr/TokenQueue; append (Lantlr/Token;)V 3 1
Lantlr/LLkParser; LA (I)I 3 2
Lantlr/Grammar; getDefaultErrorHandler ()Z 3 2
Lantlr/LLkAnalyzer; look (ILantlr/TreeElement;)Lantlr/Lookahead; 3 0
Lantlr/CSharpCodeGenerator; genCases (Lantlr/collections/impl/BitSet;)V 3 1
Lantlr/Alternative; setAutoGen (Z)V 3 2
Lantlr/JavaCodeGenerator; gen ()V 3 0
Lantlr/CSharpCharFormatter; escapeString (Ljava/lang/String;)Ljava/lang/String; 3 1
Lantlr/ANTLRHashString; length ()I 3 1
Lantlr/DefineGrammarSymbols; refRule (Lantlr/Token;Lantlr/Token;Lantlr/Token;Lantlr/Token;I)V 3 0
Lantlr/CppCodeGenerator; genMatch (Lantlr/GrammarAtom;)V 3 0
Lantlr/TokenSymbol; getASTNodeType ()Ljava/lang/String; 3 2
Lantlr/CommonToken; <init> ()V 3 1
Lantlr/JavaCharFormatter; escapeString (Ljava/lang/String;)Ljava/lang/String; 3 0
Lantlr/JavaCodeGenerator; getLookaheadTestExpression ([Lantlr/Lookahead;I)Ljava/lang/String; 3 0
LMMTkCallback; stop ()V 1 -1
Ldacapo/Callback; stop ()V 1 -1
LMMTkHarness; harnessEnd ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect26120; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Ldacapo/Callback; complete (Ljava/lang/String;Z)V 1 -1
Ldacapo/Benchmark; cleanup ()V 1 -1
Lantlr/actions/java/ActionLexer; mACTION (Z)V 3 0
Ljava/io/BufferedWriter; write (Ljava/lang/String;II)V 1 -1
Ljava/io/BufferedWriter; flush ()V 1 -1
