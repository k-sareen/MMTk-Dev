Ljava/lang/ClassLoader$StaticData; <clinit> ()V 1 -1
Lgnu/java/net/loader/JarURLLoader; <init> (Ljava/net/URLClassLoader;Lgnu/java/net/loader/URLStreamHandlerCache;Ljava/net/URLStreamHandlerFactory;Ljava/net/URL;Ljava/net/URL;)V 1 -1
Lgnu/java/net/loader/JarURLLoader; <init> (Ljava/net/URLClassLoader;Lgnu/java/net/loader/URLStreamHandlerCache;Ljava/net/URLStreamHandlerFactory;Ljava/net/URL;Ljava/net/URL;Ljava/util/Set;)V 1 -1
Lgnu/java/net/loader/URLLoader; <init> (Ljava/net/URLClassLoader;Lgnu/java/net/loader/URLStreamHandlerCache;Ljava/net/URLStreamHandlerFactory;Ljava/net/URL;Ljava/net/URL;)V 1 -1
Lgnu/java/net/loader/JarURLLoader; initialize ()V 1 -1
Lgnu/java/net/IndexListParser; <init> (Ljava/util/jar/JarFile;Ljava/net/URL;Ljava/net/URL;)V 1 -1
Lgnu/java/net/IndexListParser; clearAll ()V 1 -1
Lgnu/java/net/IndexListParser; getHeaders ()Ljava/util/LinkedHashMap; 1 -1
Lgnu/java/net/loader/JarURLLoader; getClassPath ()Ljava/util/ArrayList; 1 -1
Ljava/lang/InheritableThreadLocal; newChildThread (Ljava/lang/Thread;)V 1 -1
Lgnu/java/net/loader/URLLoader; getClass (Ljava/lang/String;)Ljava/lang/Class; 1 -1
Lgnu/java/net/loader/JarURLLoader; getResource (Ljava/lang/String;)Lgnu/java/net/loader/Resource; 1 -1
Lgnu/java/net/loader/JarURLResource; <init> (Lgnu/java/net/loader/JarURLLoader;Ljava/lang/String;Ljava/util/jar/JarEntry;)V 1 -1
Lgnu/java/net/loader/Resource; <init> (Lgnu/java/net/loader/URLLoader;)V 1 -1
Lgnu/java/net/loader/JarURLResource; getInputStream ()Ljava/io/InputStream; 1 -1
Lgnu/java/net/loader/JarURLResource; getLength ()I 1 -1
Lgnu/java/net/loader/Resource; getCodeSource ()Ljava/security/CodeSource; 1 -1
Lgnu/java/net/loader/JarURLResource; getCertificates ()[Ljava/security/cert/Certificate; 1 -1
LHarness; main ([Ljava/lang/String;)V 1 -1
Lgnu/java/net/loader/Resource; getLoader ()Lgnu/java/net/loader/URLLoader; 1 -1
Lgnu/java/net/loader/JarURLLoader; getManifest ()Ljava/util/jar/Manifest; 1 -1
Lgnu/java/net/loader/URLLoader; getBaseURL ()Ljava/net/URL; 1 -1
Lorg/dacapo/harness/TestHarness; <clinit> ()V 1 -1
Lorg/dacapo/harness/TestHarness; twoDecimalPlaces ()Ljava/text/DecimalFormat; 1 -1
Ljava/text/DecimalFormat; <clinit> ()V 1 -1
Ljava/text/DecimalFormatSymbols; <init> (Ljava/util/Locale;)V 1 -1
Ljava/util/Currency; <clinit> ()V 1 -1
Ljava/util/Currency; getInstance (Ljava/lang/String;)Ljava/util/Currency; 1 -1
Ljava/util/Currency; <init> (Ljava/lang/String;)V 1 -1
Ljava/util/Currency; getInstance (Ljava/util/Locale;)Ljava/util/Currency; 1 -1
Ljava/util/Currency; <init> (Ljava/util/Locale;)V 1 -1
Ljava/util/Currency; getCurrencyCode ()Ljava/lang/String; 1 -1
Ljava/text/DecimalFormatSymbols; setCurrency (Ljava/util/Currency;)V 1 -1
Ljava/util/Currency; getSymbol (Ljava/util/Locale;)Ljava/lang/String; 1 -1
Ljava/text/DecimalFormatSymbols; safeGetChar (Ljava/util/ResourceBundle;Ljava/lang/String;C)C 1 -1
Ljava/text/DecimalFormatSymbols; safeGetString (Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Ljava/text/DecimalFormat; <init> ()V 1 -1
Ljava/text/DecimalFormat; <init> (Ljava/lang/String;)V 1 -1
Ljava/text/DecimalFormatSymbols; <init> ()V 1 -1
Ljava/text/DecimalFormat; <init> (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V 1 -1
Ljava/text/NumberFormat; <init> ()V 1 -1
Ljava/text/Format; <init> ()V 1 -1
Ljava/text/DecimalFormatSymbols; clone ()Ljava/lang/Object; 1 -1
Ljava/text/DecimalFormat; applyPatternWithSymbols (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V 1 -1
Ljava/text/DecimalFormat; setDefaultValues ()V 1 -1
Ljava/text/DecimalFormatSymbols; getMinusSign ()C 1 -1
Ljava/text/DecimalFormat; scanFix (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;IZ)I 1 -1
Ljava/text/DecimalFormatSymbols; getDecimalSeparator ()C 1 -1
Ljava/text/DecimalFormatSymbols; getPatternSeparator ()C 1 -1
Ljava/text/DecimalFormatSymbols; getGroupingSeparator ()C 1 -1
Ljava/text/DecimalFormatSymbols; getDigit ()C 1 -1
Ljava/text/DecimalFormatSymbols; getZeroDigit ()C 1 -1
Ljava/text/DecimalFormatSymbols; getPercent ()C 1 -1
Ljava/text/DecimalFormatSymbols; getPerMill ()C 1 -1
Ljava/text/DecimalFormatSymbols; getCurrencySymbol ()Ljava/lang/String; 1 -1
Ljava/text/DecimalFormat; scanNumberInteger (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;I)I 1 -1
Ljava/text/DecimalFormatSymbols; getExponential ()C 1 -1
Ljava/text/DecimalFormat; scanFractionalPortion (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;I)I 1 -1
Ljava/text/DecimalFormat; setMaximumFractionDigits (I)V 1 -1
Ljava/text/NumberFormat; setMaximumFractionDigits (I)V 1 -1
Ljava/text/NumberFormat; getMinimumFractionDigits ()I 1 -1
Ljava/text/DecimalFormat; setMinimumFractionDigits (I)V 1 -1
Ljava/text/NumberFormat; setMinimumFractionDigits (I)V 1 -1
Ljava/text/NumberFormat; getMaximumFractionDigits ()I 1 -1
Ljava/text/NumberFormat; setGroupingUsed (Z)V 1 -1
Lorg/dacapo/harness/TestHarness; main ([Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; <clinit> ()V 1 -1
Lorg/dacapo/harness/CommandLineArgs; makeOption (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/cli/Option; 1 -1
Lorg/apache/commons/cli/Option; <init> (Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V 1 -1
Lorg/apache/commons/cli/OptionValidator; validateOption (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/OptionValidator; isValidOpt (C)Z 1 -1
Lorg/apache/commons/cli/OptionValidator; isValidChar (C)Z 1 -1
Lorg/apache/commons/cli/Option; setValueSeparator (C)V 1 -1
Lorg/apache/commons/cli/Option; setArgName (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/PosixParser; <init> ()V 1 -1
Lorg/apache/commons/cli/Parser; <init> ()V 1 -1
Lorg/apache/commons/cli/Options; <init> ()V 1 -1
Lorg/dacapo/harness/CommandLineArgs; <init> ([Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/Options; addOption (Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options; 1 -1
Lorg/apache/commons/cli/Option; getKey ()Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Option; hasLongOpt ()Z 1 -1
Lorg/apache/commons/cli/Option; getLongOpt ()Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Option; isRequired ()Z 1 -1
Lorg/apache/commons/cli/Option; getDescription ()Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Parser; parse (Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine; 1 -1
Lorg/apache/commons/cli/Parser; parse (Lorg/apache/commons/cli/Options;[Ljava/lang/String;Ljava/util/Properties;Z)Lorg/apache/commons/cli/CommandLine; 1 -1
Lorg/apache/commons/cli/Options; helpOptions ()Ljava/util/List; 1 -1
Lorg/apache/commons/cli/Option; clearValues ()V 1 -1
Lorg/apache/commons/cli/Parser; setOptions (Lorg/apache/commons/cli/Options;)V 1 -1
Lorg/apache/commons/cli/Options; getRequiredOptions ()Ljava/util/List; 1 -1
Lorg/apache/commons/cli/CommandLine; <init> ()V 1 -1
Lorg/apache/commons/cli/Parser; getOptions ()Lorg/apache/commons/cli/Options; 1 -1
Lorg/apache/commons/cli/PosixParser; flatten (Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/PosixParser; init ()V 1 -1
Lorg/apache/commons/cli/PosixParser; processOptionToken (Ljava/lang/String;Z)V 1 -1
Lorg/apache/commons/cli/Options; hasOption (Ljava/lang/String;)Z 1 -1
Lorg/apache/commons/cli/Util; stripLeadingHyphens (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Options; getOption (Ljava/lang/String;)Lorg/apache/commons/cli/Option; 1 -1
Lorg/apache/commons/cli/PosixParser; gobble (Ljava/util/Iterator;)V 1 -1
Lorg/apache/commons/cli/PosixParser; processNonOptionToken (Ljava/lang/String;Z)V 1 -1
Lorg/apache/commons/cli/Parser; processOption (Ljava/lang/String;Ljava/util/ListIterator;)V 1 -1
Lorg/apache/commons/cli/Option; clone ()Ljava/lang/Object; 1 -1
Lorg/apache/commons/cli/Options; getOptionGroup (Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup; 1 -1
Lorg/apache/commons/cli/Option; hasArg ()Z 1 -1
Lorg/apache/commons/cli/Parser; processArgs (Lorg/apache/commons/cli/Option;Ljava/util/ListIterator;)V 1 -1
Lorg/apache/commons/cli/Util; stripLeadingAndTrailingQuotes (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Option; addValueForProcessing (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/Option; processValue (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/Option; hasValueSeparator ()Z 1 -1
Lorg/apache/commons/cli/Option; getValueSeparator ()C 1 -1
Lorg/apache/commons/cli/Option; add (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/Option; getValues ()[Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Option; hasNoValues ()Z 1 -1
Lorg/apache/commons/cli/CommandLine; addOption (Lorg/apache/commons/cli/Option;)V 1 -1
Lorg/apache/commons/cli/CommandLine; addArg (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/Parser; processProperties (Ljava/util/Properties;)V 1 -1
Lorg/apache/commons/cli/Parser; checkRequiredOptions ()V 1 -1
Lorg/apache/commons/cli/Parser; getRequiredOptions ()Ljava/util/List; 1 -1
Lorg/apache/commons/cli/CommandLine; hasOption (Ljava/lang/String;)Z 1 -1
Lorg/apache/commons/cli/CommandLine; resolveOption (Ljava/lang/String;)Lorg/apache/commons/cli/Option; 1 -1
Lorg/apache/commons/cli/Option; getOpt ()Ljava/lang/String; 1 -1
Lorg/dacapo/harness/CommandLineArgs; defineCallback ()V 1 -1
Lorg/apache/commons/cli/Option; equals (Ljava/lang/Object;)Z 1 -1
Lorg/apache/commons/cli/CommandLine; getOptionValue (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/CommandLine; getOptionValues (Ljava/lang/String;)[Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Option; getValuesList ()Ljava/util/List; 1 -1
Lorg/dacapo/harness/Callback; <clinit> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40503; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40503; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
LMMTkCallback; <init> (Lorg/dacapo/harness/CommandLineArgs;)V 1 -1
Lorg/dacapo/harness/Callback; <init> (Lorg/dacapo/harness/CommandLineArgs;)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; getMethodology ()Lorg/dacapo/harness/CommandLineArgs$Methodology; 1 -1
Lorg/dacapo/harness/CommandLineArgs$Methodology; <clinit> ()V 1 -1
Lorg/dacapo/harness/CommandLineArgs$Methodology; <init> (Ljava/lang/String;I)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; getDebug ()Z 1 -1
LMMTkHarness; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect26119; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect26120; <init> ()V 1 -1
Lorg/dacapo/harness/CommandLineArgs; getCallback ()Lorg/dacapo/harness/Callback; 1 -1
Lorg/apache/commons/cli/CommandLine; getArgList ()Ljava/util/List; 1 -1
Lorg/dacapo/harness/CommandLineArgs; extractBenchmarkSet ()Ljava/util/List; 1 -1
Lgnu/java/net/loader/JarURLResource; getURL ()Ljava/net/URL; 1 -1
Lorg/dacapo/harness/CommandLineArgs; getScratchDir ()Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/CommandLine; getOptionValue (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/dacapo/harness/TestHarness; makeCleanScratch (Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/TestHarness; rmdir (Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/Benchmark; <clinit> ()V 1 -1
Lorg/dacapo/harness/Benchmark; setCommandLineOptions (Lorg/dacapo/harness/CommandLineArgs;)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; getSilent ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getVerbose ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getPreserve ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getValidate ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getValidateOutput ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getPreIterationGC ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getValidationReport ()Ljava/lang/String; 1 -1
Lorg/dacapo/harness/CommandLineArgs; getThreadCount ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; <clinit> ()V 1 -1
Lorg/dacapo/parser/Config; setThreadCountOverride (I)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; benchmarks ()Ljava/lang/Iterable; 1 -1
Lorg/dacapo/harness/CommandLineArgs; getCnfOverride ()Ljava/lang/String; 1 -1
Lorg/dacapo/harness/TestHarness; <init> (Ljava/io/InputStream;)V 1 -1
Lorg/dacapo/parser/Config; parse (Ljava/io/InputStream;)Lorg/dacapo/parser/Config; 1 -1
Lorg/dacapo/parser/ConfigFile; <clinit> ()V 1 -1
Lorg/dacapo/parser/ConfigFile; jj_la1_init_0 ()V 1 -1
Lorg/dacapo/parser/ConfigFile; jj_la1_init_1 ()V 1 -1
Lorg/dacapo/parser/ConfigFile; <init> (Ljava/io/InputStream;)V 1 -1
Lorg/dacapo/parser/ConfigFile; <init> (Ljava/io/InputStream;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/SimpleCharStream; <init> (Ljava/io/InputStream;Ljava/lang/String;II)V 1 -1
Lorg/dacapo/parser/SimpleCharStream; <init> (Ljava/io/InputStream;Ljava/lang/String;III)V 1 -1
Lorg/dacapo/parser/SimpleCharStream; <init> (Ljava/io/Reader;III)V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; <clinit> ()V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; <init> (Lorg/dacapo/parser/SimpleCharStream;)V 1 -1
Lorg/dacapo/parser/Token; <init> ()V 1 -1
Lorg/dacapo/parser/ConfigFile; configFile ()Lorg/dacapo/parser/Config; 1 -1
Lorg/dacapo/parser/ConfigFile; config ()Lorg/dacapo/parser/Config; 1 -1
Lorg/dacapo/parser/ConfigFile; jj_consume_token (I)Lorg/dacapo/parser/Token; 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; getNextToken ()Lorg/dacapo/parser/Token; 1 -1
Lorg/dacapo/parser/SimpleCharStream; BeginToken ()C 1 -1
Lorg/dacapo/parser/SimpleCharStream; readChar ()C 1 -1
Lorg/dacapo/parser/SimpleCharStream; FillBuff ()V 1 -1
Lorg/dacapo/parser/SimpleCharStream; UpdateLineColumn (C)V 1 -1
Lorg/dacapo/parser/SimpleCharStream; backup (I)V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa0_0 ()I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa1_0 (J)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa2_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa3_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa4_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa5_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa6_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa7_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa8_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjStartNfaWithStates_0 (III)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveNfa_0 (II)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjFillToken ()Lorg/dacapo/parser/Token; 1 -1
Lorg/dacapo/parser/SimpleCharStream; getBeginLine ()I 1 -1
Lorg/dacapo/parser/SimpleCharStream; getBeginColumn ()I 1 -1
Lorg/dacapo/parser/SimpleCharStream; getEndLine ()I 1 -1
Lorg/dacapo/parser/SimpleCharStream; getEndColumn ()I 1 -1
Lorg/dacapo/parser/Token; newToken (ILjava/lang/String;)Lorg/dacapo/parser/Token; 1 -1
Lorg/dacapo/parser/Token; <init> (ILjava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjStartNfa_0 (IJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjStopStringLiteralDfa_0 (IJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjCheckNAdd (I)V 1 -1
Lorg/dacapo/parser/SimpleCharStream; GetImage ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; <init> (Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFile; jj_ntk ()I 1 -1
Lorg/dacapo/parser/ConfigFile; configOption (Lorg/dacapo/parser/Config;)V 1 -1
Lorg/dacapo/parser/ConfigFile; identifier ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; setClass (Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa9_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa10_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa11_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFile; threadModel ()Lorg/dacapo/parser/Config$ThreadModel; 1 -1
Lorg/dacapo/parser/Config$ThreadModel; <clinit> ()V 1 -1
Lorg/dacapo/parser/Config$ThreadModel; <init> (Ljava/lang/String;ILjava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; setThreadModel (Lorg/dacapo/parser/Config$ThreadModel;)V 1 -1
Lorg/dacapo/parser/ConfigFile; string ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjCheckNAddStates (II)V 1 -1
Lorg/dacapo/parser/ConfigFile; unQuote (Lorg/dacapo/parser/Token;)Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; setJar (Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjStopAtPos (II)I 1 -1
Lorg/dacapo/parser/ConfigFile; sizeSpec (Lorg/dacapo/parser/Config;)V 1 -1
Lorg/dacapo/parser/ConfigFile; sizeClause (Lorg/dacapo/parser/Config;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; addSize (Ljava/lang/String;Ljava/util/Vector;)V 1 -1
Lorg/dacapo/parser/Config$Size; <init> (Lorg/dacapo/parser/Config;Ljava/lang/String;Ljava/util/Vector;)V 1 -1
Ljava/lang/reflect/Array; newInstance (Ljava/lang/Class;I)Ljava/lang/Object; 1 -1
Lorg/dacapo/parser/ConfigFile; outputFile (Lorg/dacapo/parser/Config;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; addOutputFile (Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; getSize (Ljava/lang/String;)Lorg/dacapo/parser/Config$Size; 1 -1
Lorg/dacapo/parser/Config$Size; addOutputFile (Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config$OutputFile; <init> (Lorg/dacapo/parser/Config;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; setTextFile (Ljava/lang/String;Ljava/lang/String;Z)V 1 -1
Lorg/dacapo/parser/Config$Size; getOutputFile (Ljava/lang/String;)Lorg/dacapo/parser/Config$OutputFile; 1 -1
Lorg/dacapo/parser/Config; setFilterScratch (Ljava/lang/String;Ljava/lang/String;Z)V 1 -1
Lorg/dacapo/parser/ConfigFile; outputClause (Lorg/dacapo/parser/Config;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFile; hex ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/ConfigFile; unHex (Lorg/dacapo/parser/Token;)Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; setDigest (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; getSize ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; getThreadLimit (Ljava/lang/String;)I 1 -1
Lorg/dacapo/parser/Config$Size; getThreadLimit ()I 1 -1
Lorg/dacapo/harness/CommandLineArgs; getThreadFactor ()Ljava/lang/String; 1 -1
Lorg/dacapo/harness/TestHarness; isValidSize (Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config; getSizes ()Ljava/util/Collection; 1 -1
Lorg/dacapo/harness/TestHarness; isValidThreadCount (Ljava/lang/String;)Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getInformation ()Z 1 -1
Lorg/dacapo/harness/TestHarness; dump (Z)V 1 -1
Lorg/dacapo/harness/TestHarness; runBenchmark (Ljava/io/File;Ljava/lang/String;Lorg/dacapo/harness/TestHarness;)V 1 -1
Lorg/dacapo/parser/Config; printThreadModel (Ljava/io/PrintStream;Ljava/lang/String;Z)V 1 -1
Lorg/dacapo/parser/Config; getThreadModel ()Lorg/dacapo/parser/Config$ThreadModel; 1 -1
Lorg/dacapo/harness/TestHarness; findClass ()Ljava/lang/Class; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40955; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40955; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/dacapo/harness/Avrora; <init> (Lorg/dacapo/parser/Config;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/Benchmark; <init> (Lorg/dacapo/parser/Config;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/Benchmark; <init> (Lorg/dacapo/parser/Config;Ljava/io/File;Z)V 1 -1
Lorg/dacapo/harness/Benchmark; initialize ()V 1 -1
Lorg/dacapo/harness/Benchmark; fileIn (Ljava/io/File;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/dacapo/harness/TeePrintStream; <init> (Ljava/io/OutputStream;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/TeeOutputStream; <init> (Ljava/io/OutputStream;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/TeeOutputStream; newLog ()V 1 -1
Lorg/dacapo/harness/TeePrintStream; enableOutput (Z)V 1 -1
Lorg/dacapo/harness/TeeOutputStream; enableOutput (Z)V 1 -1
Lorg/dacapo/harness/Benchmark; prepareJars ()V 1 -1
Lorg/dacapo/harness/Benchmark; extractFileResource (Ljava/lang/String;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/Benchmark; getURL (Ljava/lang/String;)Ljava/net/URL; 1 -1
Lorg/dacapo/harness/Benchmark; fileFromInputStream (Ljava/io/InputStream;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/DacapoClassLoader; create (Lorg/dacapo/parser/Config;Ljava/io/File;)Lorg/dacapo/harness/DacapoClassLoader; 1 -1
Lorg/dacapo/harness/DacapoClassLoader; getJars (Lorg/dacapo/parser/Config;Ljava/io/File;)[Ljava/net/URL; 1 -1
Lorg/dacapo/harness/Benchmark; getVerbose ()Z 1 -1
Lorg/dacapo/harness/DacapoClassLoader; <init> ([Ljava/net/URL;Ljava/lang/ClassLoader;)V 1 -1
Lorg/dacapo/harness/Benchmark; prepare ()V 1 -1
Lorg/dacapo/harness/Benchmark; unpackZipFileResource (Ljava/lang/String;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/Benchmark; unpackZipStream (Ljava/io/BufferedInputStream;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/DacapoClassLoader; loadClass (Ljava/lang/String;Z)Ljava/lang/Class; 1 -1
Lavrora/Main; <clinit> ()V 1 -1
Lcck/util/Options; <init> ()V 1 -1
Lcck/util/Options; newOption (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcck/util/Option$Str; 1 -1
Lcck/util/Option; <clinit> ()V 1 -1
Lcck/util/Option$1; <init> ()V 1 -1
Lcck/util/Option$Str; <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lcck/util/Option; <init> (Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lcck/util/Options; newOption (Ljava/lang/String;ZLjava/lang/String;)Lcck/util/Option$Bool; 1 -1
Lcck/util/Option$Bool; <init> (Ljava/lang/String;ZLjava/lang/String;)V 1 -1
Lcck/util/Options; newOptionList (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcck/util/Option$List; 1 -1
Lcck/util/Option$List; <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lcck/util/Option$List; parseString (Ljava/lang/String;)V 1 -1
Lcck/text/StringUtil; <clinit> ()V 1 -1
Lcck/text/StringUtil; toList (Ljava/lang/String;)Ljava/util/List; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect41055; <init> ()V 1 -1
Lorg/dacapo/harness/Callback; init (Lorg/dacapo/parser/Config;)V 1 -1
Lorg/dacapo/harness/Callback$1; <clinit> ()V 1 -1
Lorg/dacapo/harness/CommandLineArgs$Methodology; values ()[Lorg/dacapo/harness/CommandLineArgs$Methodology; 1 -1
Lorg/dacapo/harness/CommandLineArgs; getIterations ()I 1 -1
Lorg/dacapo/harness/Callback$Mode; <clinit> ()V 1 -1
Lorg/dacapo/harness/Callback$Mode; <init> (Ljava/lang/String;I)V 1 -1
Lorg/dacapo/harness/Benchmark; run (Lorg/dacapo/harness/Callback;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/harness/Avrora; prepare (Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/Benchmark; prepare (Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; preprocessArgs (Ljava/lang/String;Ljava/io/File;)[Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; getArgs (Ljava/lang/String;)[Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; getThreadCount (Ljava/lang/String;)I 1 -1
Lorg/dacapo/parser/Config$1; <clinit> ()V 1 -1
Lorg/dacapo/parser/Config$ThreadModel; values ()[Lorg/dacapo/parser/Config$ThreadModel; 1 -1
Lorg/dacapo/harness/Benchmark; fileInScratch (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/dacapo/harness/Benchmark; preIteration (Ljava/lang/String;)V 1 -1
LMMTkCallback; start (Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/Callback; isWarmup ()Z 1 -1
Lorg/dacapo/harness/Callback; start (Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/Callback; start (Ljava/lang/String;Z)V 1 -1
Lorg/dacapo/harness/TestHarness; getBuildVersion ()Ljava/lang/String; 1 -1
Lorg/dacapo/harness/Benchmark; startIteration ()V 1 -1
Lorg/dacapo/harness/TeePrintStream; openLog ()V 1 -1
Lorg/dacapo/harness/TeeOutputStream; openLog ()V 1 -1
Lorg/dacapo/harness/Benchmark; useBenchmarkClassLoader ()V 1 -1
Lorg/dacapo/harness/Avrora; iterate (Ljava/lang/String;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect41055; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lavrora/Main; main ([Ljava/lang/String;)V 1 -1
Lavrora/Main; loadUserDefaults ()V 1 -1
Lavrora/Main; parseOptions ([Ljava/lang/String;)V 1 -1
Lcck/util/Options; parseCommandLine ([Ljava/lang/String;)V 1 -1
Lcck/util/Options; parseOption (Ljava/lang/String;)V 1 -1
Lcck/util/Options; setOption (Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lcck/util/Option$Str; set (Ljava/lang/String;)V 1 -1
Lcck/util/Option$Bool; get ()Z 1 -1
Lcck/text/Terminal; <clinit> ()V 1 -1
Lcck/text/Status; <clinit> ()V 1 -1
Lcck/util/Option$List; get ()Ljava/util/List; 1 -1
Lcck/util/Option$Str; isBlank ()Z 1 -1
Lavrora/Main; runAction ()V 1 -1
Lavrora/Main; banner ()V 1 -1
Lavrora/Main; title ()V 1 -1
Lcck/text/Terminal; printBrightBlue (Ljava/lang/String;)V 1 -1
Lcck/text/Terminal; outputColor (ILjava/lang/String;)V 1 -1
Lorg/dacapo/harness/TeeOutputStream; write (I)V 1 -1
Lcck/text/Terminal; print (Ljava/lang/String;)V 1 -1
Lavrora/Version; <clinit> ()V 1 -1
Lcck/util/VersionTag; <clinit> ()V 1 -1
Lcck/util/VersionTag; <init> (Ljava/lang/String;Ljava/lang/String;III)V 1 -1
Lcck/util/VersionTag; prefixString (ZC)Ljava/lang/String; 1 -1
Lcck/util/VersionTag; commitNumber ()Ljava/lang/String; 1 -1
Lcck/util/VersionTag; toString ()Ljava/lang/String; 1 -1
Lcck/util/Option$Str; get ()Ljava/lang/String; 1 -1
Lavrora/Defaults; <clinit> ()V 1 -1
Lavrora/Defaults; getAction (Ljava/lang/String;)Lavrora/actions/Action; 1 -1
Lavrora/Defaults; addActions ()V 1 -1
Lcck/util/ClassMap; <init> (Ljava/lang/String;Ljava/lang/Class;)V 1 -1
Lcck/util/ClassMap; addClass (Ljava/lang/String;Ljava/lang/Class;)V 1 -1
Lcck/help/HelpCategory; <clinit> ()V 1 -1
Lcck/help/HelpCategory$1; <init> ()V 1 -1
Lcck/help/HelpCategory; <init> (Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lcck/help/HelpCategory; addOptionValueSection (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcck/util/ClassMap;)V 1 -1
Lcck/util/ClassMap; getSortedList ()Ljava/util/List; 1 -1
Lcck/help/ClassMapValueItem; <init> (ILjava/lang/String;Ljava/lang/String;Lcck/util/ClassMap;)V 1 -1
Lcck/help/HelpCategory; addListSection (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V 1 -1
Lcck/help/HelpCategory$ListSection; <init> (Lcck/help/HelpCategory;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V 1 -1
Lcck/help/HelpCategory$Section; <init> (Lcck/help/HelpCategory;Lcck/help/HelpCategory$1;)V 1 -1
Lcck/help/HelpCategory$Section; <init> (Lcck/help/HelpCategory;)V 1 -1
Lavrora/Defaults; addMainCategory (Lcck/help/HelpCategory;)V 1 -1
Lcck/help/HelpSystem; <clinit> ()V 1 -1
Lcck/help/HelpSystem; addCategory (Ljava/lang/String;Lcck/help/HelpCategory;)V 1 -1
Lcck/help/HelpCategory; setName (Ljava/lang/String;)V 1 -1
Lcck/util/ClassMap; addInstance (Ljava/lang/String;Ljava/lang/Object;)V 1 -1
Lavrora/Defaults; addSubCategories (Lcck/util/ClassMap;)V 1 -1
Lcck/util/ClassMap; getClass (Ljava/lang/String;)Ljava/lang/Class; 1 -1
Lcck/help/HelpSystem; addCategory (Ljava/lang/String;Ljava/lang/Class;)V 1 -1
Lcck/util/ClassMap; getObjectOfClass (Ljava/lang/String;)Ljava/lang/Object; 1 -1
Lcck/text/StringUtil; quote (Ljava/lang/Object;)Ljava/lang/String; 1 -1
Lavrora/actions/SimAction; <init> ()V 1 -1
Lavrora/actions/Action; <init> (Ljava/lang/String;)V 1 -1
Lcck/help/HelpCategory; addSection (Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lcck/help/HelpCategory$ParagraphSection; <init> (Lcck/help/HelpCategory;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lcck/help/HelpCategory; addOptionSection (Ljava/lang/String;Lcck/util/Options;)V 1 -1
Lcck/help/HelpCategory$OptionsSection; <init> (Lcck/help/HelpCategory;Ljava/lang/String;Lcck/util/Options;)V 1 -1
Lcck/help/HelpCategory; newOption (Ljava/lang/String;ZLjava/lang/String;)Lcck/util/Option$Bool; 1 -1
Lcck/help/HelpCategory; newOption (Ljava/lang/String;JLjava/lang/String;)Lcck/util/Option$Long; 1 -1
Lcck/util/Options; newOption (Ljava/lang/String;JLjava/lang/String;)Lcck/util/Option$Long; 1 -1
Lcck/util/Option$Long; <init> (Ljava/lang/String;JLjava/lang/String;)V 1 -1
Lcck/help/HelpCategory; newOption (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcck/util/Option$Str; 1 -1
Lcck/util/Options; process (Lcck/util/Options;)V 1 -1
Lcck/util/Option$Str; stringValue ()Ljava/lang/String; 1 -1
Lcck/util/Option$List; stringValue ()Ljava/lang/String; 1 -1
Lcck/util/Option$Bool; stringValue ()Ljava/lang/String; 1 -1
Lcck/util/Options; getArguments ()[Ljava/lang/String; 1 -1
Lavrora/actions/SimAction; run ([Ljava/lang/String;)V 1 -1
Lavrora/sim/util/SimUtil; <clinit> ()V 1 -1
Lcck/util/Option$Long; get ()J 1 -1
Lavrora/Defaults; getSimulation (Ljava/lang/String;)Lavrora/sim/Simulation; 1 -1
Lavrora/Defaults; addSimulations ()V 1 -1
Lavrora/sim/types/SensorSimulation; <clinit> ()V 1 -1
Lavrora/sim/types/SensorSimulation; <init> ()V 1 -1
Lavrora/sim/Simulation; <init> (Ljava/lang/String;Ljava/lang/String;Lavrora/sim/clock/Synchronizer;)V 1 -1
Lcck/help/HelpCategory; newOption (Ljava/lang/String;DLjava/lang/String;)Lcck/util/Option$Double; 1 -1
Lcck/util/Options; newOption (Ljava/lang/String;DLjava/lang/String;)Lcck/util/Option$Double; 1 -1
Lcck/util/Option$Double; <init> (Ljava/lang/String;DLjava/lang/String;)V 1 -1
Lcck/help/HelpCategory; newOptionList (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcck/util/Option$List; 1 -1
Lavrora/sim/energy/EnergyControl; <init> ()V 1 -1
Ljava/text/StringCharacterIterator; <init> (Ljava/lang/String;)V 1 -1
Ljava/text/StringCharacterIterator; <init> (Ljava/lang/String;III)V 1 -1
Ljava/text/StringCharacterIterator; current ()C 1 -1
Ljava/text/StringCharacterIterator; next ()C 1 -1
Lcck/help/HelpCategory; newOption (Ljava/lang/String;JJLjava/lang/String;)Lcck/util/Option$Interval; 1 -1
Lcck/util/Options; newOption (Ljava/lang/String;JJLjava/lang/String;)Lcck/util/Option$Interval; 1 -1
Lcck/util/Option$Interval; <init> (Ljava/lang/String;JJLjava/lang/String;)V 1 -1
Lcck/util/Option$Str; setNewDefault (Ljava/lang/String;)V 1 -1
Lcck/util/Option$List; setNewDefault (Ljava/lang/String;)V 1 -1
Lavrora/sim/types/SensorSimulation; process (Lcck/util/Options;[Ljava/lang/String;)V 1 -1
Lcck/util/Option$Long; set (Ljava/lang/String;)V 1 -1
Lcck/util/Option$List; set (Ljava/lang/String;)V 1 -1
Lcck/util/Option$Long; stringValue ()Ljava/lang/String; 1 -1
Lcck/util/Option$Double; set (Ljava/lang/String;)V 1 -1
Lavrora/sim/Simulation; processMonitorList ()V 1 -1
Lavrora/Defaults; getMonitor (Ljava/lang/String;)Lavrora/monitors/MonitorFactory; 1 -1
Ljava/lang/reflect/VMProxy; <clinit> ()V 1 -1
Ljava/lang/reflect/Modifier; isPublic (I)Z 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect1294; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect2250; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect2251; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect2252; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect4619; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect4619; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect42036; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect42036; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy0; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect536; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect537; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect42074; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect42074; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy1; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
L$Proxy1; value ()Lorg/vmmagic/pragma/Inline$When; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect3762; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect42106; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect42106; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy2; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect42138; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect42138; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy3; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect2253; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect42179; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect42179; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy4; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lavrora/Defaults; addMonitors ()V 1 -1
Lavrora/monitors/LEDMonitor; <init> ()V 1 -1
Lavrora/monitors/MonitorFactory; <init> (Ljava/lang/String;)V 1 -1
Lavrora/monitors/MonitorFactory; processOptions (Lcck/util/Options;)V 1 -1
Lcck/util/Option$Double; stringValue ()Ljava/lang/String; 1 -1
Lcck/util/Option$Interval; stringValue ()Ljava/lang/String; 1 -1
Lavrora/monitors/PacketMonitor; <init> ()V 1 -1
Lgnu/java/net/loader/JarURLLoader; getResource (Ljava/lang/String;)Lgnu/java/net/loader/Resource; 3 0
Lavrora/Main; checkFilesExist ([Ljava/lang/String;)V 1 -1
Lavrora/Main; checkFileExists (Ljava/lang/String;)V 1 -1
Lavrora/sim/Simulation; getPlatform ()Lavrora/sim/platform/PlatformFactory; 1 -1
Lavrora/Defaults; getPlatform (Ljava/lang/String;)Lavrora/sim/platform/PlatformFactory; 1 -1
Lavrora/Defaults; addPlatforms ()V 1 -1
Lavrora/sim/platform/Mica2$Factory; <init> ()V 1 -1
Lavrora/sim/clock/RippleSynchronizer; <clinit> ()V 1 -1
Lavrora/sim/clock/RippleSynchronizer; <init> (JLavrora/sim/Simulator$Event;)V 1 -1
Lavrora/sim/clock/Synchronizer; <init> ()V 1 -1
Lavrora/sim/clock/RippleSynchronizer$WaitLink; <init> (J)V 1 -1
Lavrora/sim/types/SensorSimulation; createNodes ([Ljava/lang/String;Lavrora/sim/platform/PlatformFactory;)V 1 -1
Lcck/text/StringUtil; evaluateIntegerLiteral (Ljava/lang/String;)I 1 -1
Lcck/text/StringUtil; readIntegerValue (Ljava/text/CharacterIterator;)I 1 -1
Lcck/text/StringUtil; readDecimalValue (Ljava/text/CharacterIterator;I)I 1 -1
Lcck/text/StringUtil; readDecimalString (Ljava/text/CharacterIterator;I)Ljava/lang/String; 1 -1
Lcck/text/StringUtil; peekAndEat (Ljava/text/CharacterIterator;C)Z 1 -1
Lavrora/core/LoadableProgram; <init> (Ljava/lang/String;)V 1 -1
Lavrora/core/LoadableProgram; load ()V 1 -1
Lavrora/Main; loadProgram ([Ljava/lang/String;)Lavrora/core/Program; 1 -1
Lcck/text/Status; begin (Ljava/lang/String;)V 1 -1
Lcck/text/StringUtil; space (I)Ljava/lang/String; 1 -1
Lcck/text/Terminal; print (ILjava/lang/String;)V 1 -1
Lcck/text/Terminal; flush ()V 1 -1
Lorg/dacapo/harness/TeeOutputStream; flush ()V 1 -1
Lcck/text/Status$Item; <init> (Ljava/lang/String;)V 1 -1
Lavrora/Defaults; getProgramReader (Ljava/lang/String;)Lavrora/core/ProgramReader; 1 -1
Lavrora/Defaults; addInputFormats ()V 1 -1
Lavrora/Defaults$AutoProgramReader; <init> ()V 1 -1
Lavrora/core/ProgramReader; <init> (Ljava/lang/String;)V 1 -1
Lavrora/Defaults$AutoProgramReader; read ([Ljava/lang/String;)Lavrora/core/Program; 1 -1
Lavrora/syntax/elf/ELFParser; <init> ()V 1 -1
Lavrora/syntax/elf/ELFParser; read ([Ljava/lang/String;)Lavrora/core/Program; 1 -1
Lcck/elf/ELFLoader; readELFHeader (Ljava/io/RandomAccessFile;)Lcck/elf/ELFHeader; 1 -1
Lcck/elf/ELFHeader; <init> ()V 1 -1
Lcck/elf/ELFHeader; read (Ljava/io/RandomAccessFile;)V 1 -1
Lcck/elf/ELFHeader; checkIdent ()V 1 -1
Lcck/elf/ELFHeader; checkIndentByte (II)V 1 -1
Lcck/elf/ELFHeader; isBigEndian ()Z 1 -1
Lcck/elf/ELFDataInputStream; <init> (Lcck/elf/ELFHeader;Ljava/io/RandomAccessFile;)V 1 -1
Lcck/elf/ELFDataInputStream; read_Elf32_Half ()S 1 -1
Lcck/elf/ELFDataInputStream; read_2 ()I 1 -1
Lcck/elf/ELFDataInputStream; read_1 ()I 1 -1
Lcck/elf/ELFDataInputStream; asShort (II)S 1 -1
Lcck/elf/ELFDataInputStream; read_Elf32_Word ()I 1 -1
Lcck/elf/ELFDataInputStream; read_4 ()I 1 -1
Lcck/elf/ELFDataInputStream; asInt (IIII)I 1 -1
Lcck/elf/ELFDataInputStream; read_Elf32_Addr ()I 1 -1
Lcck/elf/ELFDataInputStream; read_Elf32_Off ()I 1 -1
Lavrora/syntax/elf/ELFParser; getArchitecture ()Lavrora/arch/AbstractArchitecture; 1 -1
Lcck/elf/ELFHeader; getArchitecture ()Ljava/lang/String; 1 -1
Lcck/elf/ELFIdentifier; <clinit> ()V 1 -1
Lcck/elf/ELFIdentifier; nm (ILjava/lang/String;Ljava/lang/String;)I 1 -1
Lcck/elf/ELFIdentifier; getArchitecture (I)Ljava/lang/String; 1 -1
Lavrora/arch/ArchitectureRegistry; getArchitecture (Ljava/lang/String;)Lavrora/arch/AbstractArchitecture; 1 -1
Lavrora/arch/ArchitectureRegistry; addArchitectures ()V 1 -1
Lavrora/arch/legacy/LegacyArchitecture; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyArchitecture; <init> ()V 1 -1
Lavrora/arch/avr/AVRArchitecture; <clinit> ()V 1 -1
Lavrora/arch/avr/AVRArchitecture; <init> ()V 1 -1
Lavrora/arch/msp430/MSP430Architecture; <clinit> ()V 1 -1
Lavrora/arch/msp430/MSP430Architecture; <init> ()V 1 -1
Lcck/elf/ELFLoader; readPHT (Ljava/io/RandomAccessFile;Lcck/elf/ELFHeader;)Lcck/elf/ELFProgramHeaderTable; 1 -1
Lcck/elf/ELFProgramHeaderTable; <init> (Lcck/elf/ELFHeader;)V 1 -1
Lcck/elf/ELFHeader; is32Bit ()Z 1 -1
Lcck/elf/ELFProgramHeaderTable; read (Ljava/io/RandomAccessFile;)V 1 -1
Lcck/elf/ELFProgramHeaderTable$Entry32; <init> (Lcck/elf/ELFProgramHeaderTable;)V 1 -1
Lcck/elf/ELFLoader; readSHT (Ljava/io/RandomAccessFile;Lcck/elf/ELFHeader;)Lcck/elf/ELFSectionHeaderTable; 1 -1
Lcck/elf/ELFSectionHeaderTable; <init> (Lcck/elf/ELFHeader;)V 1 -1
Lcck/elf/ELFSectionHeaderTable; read (Ljava/io/RandomAccessFile;)V 1 -1
Lcck/elf/ELFSectionHeaderTable$Entry32; <init> (Lcck/elf/ELFSectionHeaderTable;)V 1 -1
Lcck/elf/ELFStringTable; <init> (Lcck/elf/ELFHeader;Lcck/elf/ELFSectionHeaderTable$Entry32;)V 1 -1
Lcck/elf/ELFStringTable; read (Ljava/io/RandomAccessFile;)V 1 -1
Lcck/elf/ELFSectionHeaderTable; setStringTable (Lcck/elf/ELFStringTable;)V 1 -1
Lcck/elf/ELFSectionHeaderTable; getStringTable ()Lcck/elf/ELFStringTable; 1 -1
Lavrora/syntax/elf/ELFParser; loadSections (Ljava/io/RandomAccessFile;)Lavrora/core/Program; 1 -1
Lavrora/syntax/elf/ELFParser; createProgram ()Lavrora/core/Program; 1 -1
Lcck/elf/ELFProgramHeaderTable$Entry32; isLoadable ()Z 1 -1
Lavrora/core/Program; <init> (Lavrora/arch/AbstractArchitecture;II)V 1 -1
Lavrora/arch/legacy/LegacyArchitecture; newInstrArray (I)[Lavrora/arch/AbstractInstr; 1 -1
Lcck/elf/ELFDataInputStream; read_section (II)[B 1 -1
Lavrora/core/Program; writeProgramBytes ([BI)V 1 -1
Lavrora/core/Program; checkAddress (I)V 1 -1
Lavrora/core/Program; writeByteInto (BI)V 1 -1
Lcck/elf/ELFProgramHeaderTable$Entry32; isExecutable ()Z 1 -1
Lavrora/syntax/elf/ELFParser; disassembleSection ([BLcck/elf/ELFProgramHeaderTable$Entry32;Lavrora/core/Program;)V 1 -1
Lavrora/arch/legacy/LegacyArchitecture; getDisassembler ()Lavrora/arch/AbstractDisassembler; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyRegister; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyRegister; initializeRegisterMap ()Ljava/util/HashMap; 1 -1
Lavrora/arch/legacy/LegacyRegister; <init> (Ljava/lang/String;II)V 1 -1
Lavrora/arch/legacy/LegacyRegister; getRegisterByNumber (I)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyRegister; getRegisterByName (Ljava/lang/String;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyRegister$Set; <init> ([Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyRegister; hashCode ()I 1 -1
Lavrora/arch/legacy/LegacyRegister; toString ()Ljava/lang/String; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; <init> ()V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; disassemble (II[B)Lavrora/arch/AbstractInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; disassembleLegacy ([BII)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lcck/util/Arithmetic; <clinit> ()V 1 -1
Lcck/util/Arithmetic; word (BB)S 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_root (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_root0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_25 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_21 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_20 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_JMP_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; getWord (I)I 1 -1
Lavrora/arch/legacy/LegacyInstr; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$JMP; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstrProperties; <init> (Ljava/lang/String;Ljava/lang/String;II)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$1800 ()I 1 -1
Lavrora/arch/legacy/LegacyInstr$JMP; <init> (II)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$1900 (II)I 1 -1
Lavrora/arch/legacy/LegacyInstr; PADDR (II)I 1 -1
Lavrora/arch/legacy/LegacyInstr; checkImm (IIII)I 1 -1
Lavrora/arch/legacy/LegacyInstr$WORD_class; <init> (Lavrora/arch/legacy/LegacyInstrProperties;I)V 1 -1
Lavrora/arch/legacy/LegacyInstr; <init> (Lavrora/arch/legacy/LegacyInstrProperties;)V 1 -1
Lavrora/core/Program; writeInstr (Lavrora/arch/AbstractInstr;I)V 1 -1
Lavrora/arch/legacy/LegacyInstr; getSize ()I 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_31 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_30 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_MOVW_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$MOVW; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$3200 ()Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr$MOVW; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$3300 (ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr; EGPR (ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr; checkReg (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister$Set;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyRegister$Set; contains (Lavrora/arch/legacy/LegacyRegister;)Z 1 -1
Lavrora/arch/legacy/LegacyInstr$REGREG_class; <init> (Lavrora/arch/legacy/LegacyInstrProperties;Lavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; getReg ([Lavrora/arch/legacy/LegacyRegister;I)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_SBC_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$SBC; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$400 ()Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr$SBC; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$500 (ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr; GPR (ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_MULS_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$MULS; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$1000 ()Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr$MULS; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$1200 (ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr; HGPR (ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_CPC_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$CPC; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$CPC; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_26 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_ADC_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$ADC; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$ADC; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_SUBI_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$SUBI; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$1100 ()I 1 -1
Lavrora/arch/legacy/LegacyInstr$SUBI; <init> (ILavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$1300 (II)I 1 -1
Lavrora/arch/legacy/LegacyInstr; IMM8 (II)I 1 -1
Lavrora/arch/legacy/LegacyInstr$REGIMM_class; <init> (Lavrora/arch/legacy/LegacyInstrProperties;Lavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_4 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_BST_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$BST; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$1400 ()I 1 -1
Lavrora/arch/legacy/LegacyInstr$BST; <init> (ILavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$1500 (II)I 1 -1
Lavrora/arch/legacy/LegacyInstr; IMM3 (II)I 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_ANDI_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$ANDI; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$ANDI; <init> (ILavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_LDI_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$LDI; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$LDI; <init> (ILavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_8 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_OUT_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$OUT; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$700 ()I 1 -1
Lavrora/arch/legacy/LegacyInstr$OUT; <init> (IILavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$900 (II)I 1 -1
Lavrora/arch/legacy/LegacyInstr; IMM6 (II)I 1 -1
Lavrora/arch/legacy/LegacyInstr$IMMREG_class; <init> (Lavrora/arch/legacy/LegacyInstrProperties;ILavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_NOP_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_root1 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler$InvalidInstruction; <init> (Lavrora/arch/legacy/LegacyDisassembler;II)V 1 -1
Lcck/text/StringUtil; addrToString (I)Ljava/lang/String; 1 -1
Lcck/text/StringUtil; to0xHex (JI)Ljava/lang/String; 1 -1
Lcck/text/CharUtil; <clinit> ()V 1 -1
Lcck/text/StringUtil; convertToHex (JII[C[C)Ljava/lang/String; 1 -1
Lavrora/arch/legacy/LegacyInstr$NOP; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$NOP; <init> (I)V 1 -1
Lavrora/arch/legacy/LegacyInstr$NONE_class; <init> (Lavrora/arch/legacy/LegacyInstrProperties;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_CPI_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$CPI; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$CPI; <init> (ILavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_7 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_33 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_32 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_LDD_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lcck/util/Arithmetic; getBit (II)Z 1 -1
Lcck/util/Arithmetic; setBit (IIZ)I 1 -1
Lavrora/arch/legacy/LegacyInstr$LDD; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$2800 ()Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr$LDD; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$2900 (ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr; YZ (ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr$REGREGIMM_class; <init> (Lavrora/arch/legacy/LegacyInstrProperties;Lavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_ORI_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$ORI; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$ORI; <init> (ILavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_9 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_EOR_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$EOR; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$EOR; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_BLD_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_6 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_CPSE_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$CPSE; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$CPSE; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_3 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_BRCS_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$BRCS; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$1600 ()I 1 -1
Lavrora/arch/legacy/LegacyInstr$BRCS; <init> (II)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$1700 (III)I 1 -1
Lavrora/arch/legacy/LegacyInstr; SREL (III)I 1 -1
Lavrora/arch/legacy/LegacyDisassembler; relative (II)I 1 -1
Lcck/util/Arithmetic; signExtend (II)I 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_SBCI_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$SBCI; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$SBCI; <init> (ILavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_ADD_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$ADD; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$ADD; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_RCALL_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$RCALL; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$3400 ()I 1 -1
Lavrora/arch/legacy/LegacyInstr$RCALL; <init> (II)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$3500 (III)I 1 -1
Lavrora/arch/legacy/LegacyInstr; LREL (III)I 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_MUL_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$MUL; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$MUL; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_1 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_BRID_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$BRID; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$BRID; <init> (II)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_29 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_27 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_FMULS_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$FMULS; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$2400 ()Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr$FMULS; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$2500 (ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr; MGPR (ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_24 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_23 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_LPMPI_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$LPMPI; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$2200 ()Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr$LPMPI; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$2300 (ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr; Z (ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_LD_2 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$LD; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$2600 ()Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr$LD; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$2700 (ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr; ADR (ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_AND_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$AND; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$AND; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_RJMP_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$RJMP; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$RJMP; <init> (II)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_OR_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$OR; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$OR; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_IN_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$IN; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$IN; <init> (ILavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_17 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_SWAP_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$SWAP; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$SWAP; <init> (ILavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$REG_class; <init> (Lavrora/arch/legacy/LegacyInstrProperties;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_BRPL_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$BRPL; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$BRPL; <init> (II)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_SUB_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$SUB; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$SUB; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_2 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_SBRS_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$SBRS; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$SBRS; <init> (ILavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_BRTC_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$BRTC; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$BRTC; <init> (II)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_18 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_LSR_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$LSR; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$LSR; <init> (ILavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_STD_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$STD; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$STD; <init> (ILavrora/arch/legacy/LegacyRegister;ILavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$REGIMMREG_class; <init> (Lavrora/arch/legacy/LegacyInstrProperties;Lavrora/arch/legacy/LegacyRegister;ILavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_BRNE_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$BRNE; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$BRNE; <init> (II)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_11 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_ADIW_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$ADIW; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$600 ()Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr$ADIW; <init> (ILavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$800 (ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyInstr; RDL (ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_SBRC_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_28 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_FMUL_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$FMUL; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$FMUL; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_SBIW_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$SBIW; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$SBIW; <init> (ILavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_MOV_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$MOV; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$MOV; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_10 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_CBI_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$CBI; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$2000 ()I 1 -1
Lavrora/arch/legacy/LegacyInstr$CBI; <init> (III)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$2100 (II)I 1 -1
Lavrora/arch/legacy/LegacyInstr; IMM5 (II)I 1 -1
Lavrora/arch/legacy/LegacyInstr$IMMIMM_class; <init> (Lavrora/arch/legacy/LegacyInstrProperties;II)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_LDPD_2 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$LDPD; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$LDPD; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_BRMI_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$BRMI; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$BRMI; <init> (II)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_CP_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$CP; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$CP; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_SBIC_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$SBIC; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$SBIC; <init> (III)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_BRTS_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$BRTS; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$BRTS; <init> (II)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_ELPMD_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$ELPMD; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$ELPMD; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_5 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_ST_1 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$ST; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$ST; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_SBI_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$SBI; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$SBI; <init> (III)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_22 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_STPD_1 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$STPD; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$STPD; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_SBIS_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$SBIS; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$SBIS; <init> (III)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_STPD_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_ELPMPI_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$ELPMPI; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$ELPMPI; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_STPI_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$STPI; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$STPI; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_PUSH_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$PUSH; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$PUSH; <init> (ILavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_LDS_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$LDS; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$3000 ()I 1 -1
Lavrora/arch/legacy/LegacyInstr$LDS; <init> (ILavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyInstr; access$3100 (II)I 1 -1
Lavrora/arch/legacy/LegacyInstr; DADDR (II)I 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_CALL_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$CALL; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$CALL; <init> (II)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_POP_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$POP; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$POP; <init> (ILavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_16 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_13 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_RETI_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$RETI; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$RETI; <init> (I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_BREQ_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$BREQ; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$BREQ; <init> (II)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_DEC_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$DEC; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$DEC; <init> (ILavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$SBRC; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$SBRC; <init> (ILavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_19 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_COM_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$COM; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$COM; <init> (ILavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_BRGE_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$BRGE; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$BRGE; <init> (II)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_INC_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$INC; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$INC; <init> (ILavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_BRCC_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$BRCC; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$BRCC; <init> (II)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_CLI_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$CLI; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$CLI; <init> (I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_STS_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$STS; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$STS; <init> (IILavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_12 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_RET_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$RET; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$RET; <init> (I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_SEI_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$SEI; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$SEI; <init> (I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_ST_2 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_LPMD_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$LPMD; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$LPMD; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_BRLT_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$BRLT; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$BRLT; <init> (II)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_LDPI_1 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$LDPI; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$LDPI; <init> (ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_ICALL_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$ICALL; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$ICALL; <init> (I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_SLEEP_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$SLEEP; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$SLEEP; <init> (I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_STPI_2 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_LPM_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$LPM; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$LPM; <init> (I)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_ROR_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$ROR; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$ROR; <init> (ILavrora/arch/legacy/LegacyRegister;)V 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_15 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_SEC_0 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr$SEC; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$SEC; <init> (I)V 1 -1
Lavrora/syntax/elf/ELFParser; loadSymbolTables (Lavrora/core/Program;Ljava/io/RandomAccessFile;)V 1 -1
Lavrora/core/SourceMapping; <clinit> ()V 1 -1
Lavrora/core/SourceMapping$1; <init> ()V 1 -1
Lavrora/core/SourceMapping; <init> (Lavrora/core/Program;)V 1 -1
Lavrora/core/Program; setSourceMapping (Lavrora/core/SourceMapping;)V 1 -1
Lcck/elf/ELFLoader; readSymbolTables (Ljava/io/RandomAccessFile;Lcck/elf/ELFHeader;Lcck/elf/ELFSectionHeaderTable;)Ljava/util/List; 1 -1
Lcck/elf/ELFSectionHeaderTable$Entry32; isSymbolTable ()Z 1 -1
Lcck/elf/ELFSymbolTable; <init> (Lcck/elf/ELFHeader;Lcck/elf/ELFSectionHeaderTable$Entry32;)V 1 -1
Lcck/elf/ELFSymbolTable; read (Ljava/io/RandomAccessFile;)V 1 -1
Lcck/elf/ELFSymbolTable$Entry; <init> (Lcck/elf/ELFSymbolTable;)V 1 -1
Lcck/elf/ELFDataInputStream; read_Elf32_uchar ()I 1 -1
Lcck/elf/ELFSectionHeaderTable$Entry32; isStringTable ()Z 1 -1
Lcck/elf/ELFSymbolTable; setStringTable (Lcck/elf/ELFStringTable;)V 1 -1
Lcck/elf/ELFSymbolTable; getStringTable ()Lcck/elf/ELFStringTable; 1 -1
Lavrora/syntax/elf/ELFParser; addSymbols (Lavrora/core/SourceMapping;Lcck/elf/ELFSymbolTable;Lcck/elf/ELFStringTable;)V 1 -1
Lcck/elf/ELFSymbolTable$Entry; isFunction ()Z 1 -1
Lcck/elf/ELFSymbolTable$Entry; isObject ()Z 1 -1
Lcck/elf/ELFSectionHeaderTable; getSectionName (I)Ljava/lang/String; 1 -1
Lcck/elf/ELFSectionHeaderTable$Entry32; getName ()Ljava/lang/String; 1 -1
Lcck/elf/ELFStringTable; getString (I)Ljava/lang/String; 1 -1
Lavrora/actions/ELFDumpAction; getName (Lcck/elf/ELFStringTable;I)Ljava/lang/String; 1 -1
Lavrora/syntax/elf/ELFParser; findLMA (Lcck/elf/ELFSymbolTable$Entry;)I 1 -1
Lavrora/core/SourceMapping; newLocation (Ljava/lang/String;Ljava/lang/String;II)V 1 -1
Lavrora/core/SourceMapping$Location; <init> (Lavrora/core/SourceMapping;Ljava/lang/String;Ljava/lang/String;II)V 1 -1
Lcck/text/Status; success ()V 1 -1
Lcck/text/Status; print (ILjava/lang/String;)V 1 -1
Lcck/text/Terminal; nextln ()V 1 -1
Lavrora/sim/Simulation; createNode (Lavrora/sim/platform/PlatformFactory;Lavrora/core/LoadableProgram;)Lavrora/sim/Simulation$Node; 1 -1
Lavrora/sim/types/SensorSimulation; newNode (ILavrora/sim/platform/PlatformFactory;Lavrora/core/LoadableProgram;)Lavrora/sim/Simulation$Node; 1 -1
Lavrora/sim/types/SensorSimulation$SensorNode; <init> (Lavrora/sim/types/SensorSimulation;ILavrora/sim/platform/PlatformFactory;Lavrora/core/LoadableProgram;)V 1 -1
Lavrora/sim/Simulation$Node; <init> (Lavrora/sim/Simulation;ILavrora/sim/platform/PlatformFactory;Lavrora/core/LoadableProgram;)V 1 -1
Lavrora/sim/types/SensorSimulation; processRandom ()J 1 -1
Lcck/util/Option$Interval; getLow ()J 1 -1
Lcck/util/Option$Interval; getHigh ()J 1 -1
Lavrora/sim/types/SensorSimulation; processStagger ()J 1 -1
Lavrora/arch/legacy/LegacyDisassembler; decode_LD_1 (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/sim/types/SensorSimulation; processSensorInput ()V 1 -1
Lavrora/sim/types/SensorSimulation; createNoise ()V 1 -1
Lavrora/sim/radio/noise; <clinit> ()V 1 -1
Lavrora/sim/radio/noise; <init> ()V 1 -1
Lavrora/actions/SimAction$ShutdownThread; <init> (Lavrora/actions/SimAction;)V 1 -1
Lavrora/actions/SimAction; printSimHeader ()V 1 -1
Lcck/text/TermUtil; printSeparator (ILjava/lang/String;)V 1 -1
Lcck/text/StringUtil; dup (CI)Ljava/lang/String; 1 -1
Lcck/text/Terminal; printGreen (Ljava/lang/String;)V 1 -1
Lcck/text/TermUtil; printThinSeparator (I)V 1 -1
Lcck/text/Terminal; println (Ljava/lang/String;)V 1 -1
Lavrora/sim/Simulation; start ()V 1 -1
Lavrora/sim/Simulation; instantiateNodes ()V 1 -1
Lavrora/sim/types/SensorSimulation$SensorNode; instantiate ()V 1 -1
Lavrora/sim/types/SensorSimulation$SensorNode; createNode ()V 1 -1
Lavrora/sim/SimulatorThread; <init> (Lavrora/sim/Simulation$Node;)V 1 -1
Lavrora/sim/Simulation$Node; instantiate ()V 1 -1
Lavrora/core/LoadableProgram; getProgram ()Lavrora/core/Program; 1 -1
Lavrora/sim/platform/Mica2$Factory; newPlatform (ILavrora/sim/Simulation;Lavrora/core/Program;)Lavrora/sim/platform/Platform; 1 -1
Lavrora/sim/clock/ClockDomain; <init> (J)V 1 -1
Lavrora/sim/clock/MainClock; <init> (Ljava/lang/String;J)V 1 -1
Lavrora/sim/clock/Clock; <init> (Ljava/lang/String;J)V 1 -1
Lavrora/sim/clock/DeltaQueue; <init> ()V 1 -1
Lavrora/sim/clock/ClockDomain; newClock (Ljava/lang/String;J)Lavrora/sim/clock/Clock; 1 -1
Lavrora/sim/clock/Clock; getHZ ()J 1 -1
Lavrora/sim/clock/DerivedClock; <init> (Ljava/lang/String;Lavrora/sim/clock/Clock;J)V 1 -1
Lavrora/sim/clock/ClockDomain; addClock (Lavrora/sim/clock/Clock;)V 1 -1
Lavrora/sim/clock/Clock; getName ()Ljava/lang/String; 1 -1
Lavrora/sim/mcu/ATMegaFamily; <clinit> ()V 1 -1
Lavrora/sim/mcu/ATMega128; <clinit> ()V 1 -1
Lavrora/sim/FiniteStateMachine; buildBimodalTTM (II[I[I)[[I 1 -1
Lavrora/sim/FiniteStateMachine; newTTM (I)[[I 1 -1
Lavrora/sim/mcu/AtmelMicrocontroller; addPin (Ljava/util/HashMap;ILjava/lang/String;)V 1 -1
Lavrora/sim/mcu/AtmelMicrocontroller; addPin (Ljava/util/HashMap;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lavrora/sim/mcu/AtmelMicrocontroller; addPin (Ljava/util/HashMap;ILjava/lang/String;Ljava/lang/String;)V 1 -1
Lavrora/sim/mcu/RegisterLayout; <clinit> ()V 1 -1
Lavrora/sim/mcu/RegisterLayout$Field; <init> (Ljava/lang/String;)V 1 -1
Lavrora/sim/mcu/RegisterLayout; <init> (II)V 1 -1
Lavrora/sim/mcu/RegisterLayout; addIOReg (Ljava/lang/String;I)V 1 -1
Lavrora/sim/mcu/RegisterLayout$RegisterInfo; <init> (Ljava/lang/String;I)V 1 -1
Lavrora/sim/mcu/RegisterLayout; addIOReg (Ljava/lang/String;ILjava/lang/String;)V 1 -1
Lavrora/sim/mcu/RegisterLayout; parseSubFields (Ljava/lang/String;ILjava/lang/String;)[Lavrora/sim/mcu/RegisterLayout$SubField; 1 -1
Lavrora/sim/mcu/RegisterLayout; readNamedField (Ljava/text/StringCharacterIterator;I[Lavrora/sim/mcu/RegisterLayout$SubField;II)I 1 -1
Lcck/text/StringUtil; readIdentifier (Ljava/text/CharacterIterator;)Ljava/lang/String; 1 -1
Lavrora/sim/mcu/RegisterLayout; getField (Ljava/lang/String;)Lavrora/sim/mcu/RegisterLayout$Field; 1 -1
Lavrora/sim/mcu/RegisterLayout$SubField; <init> (Lavrora/sim/mcu/RegisterLayout$Field;I)V 1 -1
Lavrora/sim/mcu/RegisterLayout$Field; add (Lavrora/sim/mcu/RegisterLayout$SubField;)V 1 -1
Lavrora/sim/mcu/RegisterLayout; readBit (ILavrora/sim/mcu/RegisterLayout$SubField;)I 1 -1
Lcck/text/StringUtil; skipWhiteSpace (Ljava/text/CharacterIterator;)V 1 -1
Lavrora/sim/mcu/RegisterLayout; readUnusedField (Ljava/text/StringCharacterIterator;[Lavrora/sim/mcu/RegisterLayout$SubField;II)I 1 -1
Lavrora/sim/mcu/RegisterLayout; eat (ILjava/text/StringCharacterIterator;Lavrora/sim/mcu/RegisterLayout$SubField;C)I 1 -1
Lcck/util/Arithmetic; getBitMask (I)I 1 -1
Lavrora/sim/mcu/RegisterLayout; readBitRange (Ljava/text/StringCharacterIterator;ILavrora/sim/mcu/RegisterLayout$SubField;)I 1 -1
Lavrora/sim/mcu/AtmelMicrocontroller; addInterrupt (Ljava/util/HashMap;Ljava/lang/String;I)V 1 -1
Lavrora/sim/mcu/ReprogrammableCodeSegment$Factory; <init> (II)V 1 -1
Lavrora/arch/avr/AVRProperties; <init> (IIIIIILavrora/sim/CodeSegment$Factory;Ljava/util/HashMap;Lavrora/sim/mcu/RegisterLayout;Ljava/util/HashMap;)V 1 -1
Lavrora/sim/mcu/MCUProperties; <init> (Ljava/util/HashMap;Lavrora/sim/mcu/RegisterLayout;Ljava/util/HashMap;I)V 1 -1
Lavrora/sim/mcu/MCUProperties; initIORNames ()[Ljava/lang/String; 1 -1
Lavrora/sim/mcu/MCUProperties; initInterruptNames ()[Ljava/lang/String; 1 -1
Lavrora/sim/mcu/MCUProperties; getMax ()I 1 -1
Lavrora/sim/mcu/ATMega128; <init> (ILavrora/sim/Simulation;Lavrora/sim/clock/ClockDomain;Lavrora/core/Program;)V 1 -1
Lavrora/sim/clock/ClockDomain; getMainClock ()Lavrora/sim/clock/MainClock; 1 -1
Lavrora/sim/FiniteStateMachine; <init> (Lavrora/sim/clock/Clock;I[Ljava/lang/String;[[I)V 1 -1
Lavrora/sim/FiniteStateMachine$TransitionEvent; <init> (Lavrora/sim/FiniteStateMachine;)V 1 -1
Lavrora/sim/util/MulticastFSMProbe; <init> ()V 1 -1
Lavrora/sim/util/TransactionalList; <init> ()V 1 -1
Lavrora/sim/FiniteStateMachine; buildStates ([Ljava/lang/String;[[I)V 1 -1
Lavrora/sim/FiniteStateMachine$State; <init> (Lavrora/sim/FiniteStateMachine;Ljava/lang/String;[I)V 1 -1
Lavrora/sim/mcu/ATMegaFamily; <init> (Lavrora/sim/clock/ClockDomain;Lavrora/arch/avr/AVRProperties;Lavrora/sim/FiniteStateMachine;)V 1 -1
Lavrora/sim/mcu/AtmelMicrocontroller; <init> (Lavrora/sim/clock/ClockDomain;Lavrora/arch/avr/AVRProperties;Lavrora/sim/FiniteStateMachine;)V 1 -1
Lavrora/sim/mcu/MCUProperties; getRegisterLayout ()Lavrora/sim/mcu/RegisterLayout; 1 -1
Lavrora/sim/mcu/RegisterLayout; instantiate ()Lavrora/sim/mcu/RegisterSet; 1 -1
Lavrora/sim/mcu/RegisterSet; <init> (Lavrora/sim/mcu/RegisterLayout;)V 1 -1
Lavrora/sim/mcu/RegisterSet$FieldWriter; <init> ()V 1 -1
Lavrora/sim/mcu/RegisterSet$Field; <init> ()V 1 -1
Lavrora/sim/RWRegister; <init> ()V 1 -1
Lavrora/sim/mcu/RegisterSet; createMultiFieldRegister (Lavrora/sim/mcu/RegisterLayout$RegisterInfo;)Lavrora/sim/mcu/RegisterSet$MultiFieldRegister; 1 -1
Lavrora/sim/mcu/RegisterSet; createSubRegWriter (Lavrora/sim/mcu/RegisterLayout$RegisterInfo;I[Lavrora/sim/mcu/RegisterSet$SubRegWriter;)V 1 -1
Lavrora/sim/mcu/RegisterSet$UnusedWriter; <init> (Lavrora/sim/mcu/RegisterLayout$SubField;)V 1 -1
Lavrora/sim/mcu/RegisterSet$SubRegWriter; <init> (Lavrora/sim/mcu/RegisterLayout$SubField;)V 1 -1
Lavrora/sim/mcu/RegisterSet$TotalFieldWriter; <init> (Lavrora/sim/mcu/RegisterLayout$SubField;Lavrora/sim/mcu/RegisterSet$FieldWriter;)V 1 -1
Lavrora/sim/mcu/RegisterSet$SubFieldWriter; <init> (Lavrora/sim/mcu/RegisterLayout$SubField;Lavrora/sim/mcu/RegisterSet$FieldWriter;)V 1 -1
Lavrora/sim/mcu/RegisterSet$MultiFieldRegister; <init> (Lavrora/sim/mcu/RegisterSet;[Lavrora/sim/mcu/RegisterSet$SubRegWriter;)V 1 -1
Lavrora/sim/mcu/DefaultMCU; <init> (Lavrora/sim/clock/ClockDomain;ILavrora/sim/mcu/RegisterSet;Lavrora/sim/FiniteStateMachine;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; <clinit> ()V 1 -1
Lavrora/arch/legacy/LegacyInterpreter$Factory; <init> ()V 1 -1
Lavrora/sim/InterpreterFactory; <init> ()V 1 -1
Lavrora/sim/Simulation; createSimulator (ILavrora/sim/InterpreterFactory;Lavrora/sim/mcu/Microcontroller;Lavrora/core/Program;)Lavrora/sim/Simulator; 1 -1
Lavrora/sim/Simulator; <init> (ILavrora/sim/Simulation;Lavrora/sim/InterpreterFactory;Lavrora/sim/mcu/Microcontroller;Lavrora/core/Program;)V 1 -1
Lavrora/sim/mcu/DefaultMCU; getClockDomain ()Lavrora/sim/clock/ClockDomain; 1 -1
Lavrora/sim/mcu/AtmelMicrocontroller; getProperties ()Lavrora/sim/mcu/MCUProperties; 1 -1
Lavrora/arch/legacy/LegacyInterpreter$Factory; newInterpreter (Lavrora/sim/Simulator;Lavrora/core/Program;Lavrora/sim/mcu/MCUProperties;)Lavrora/sim/Interpreter; 1 -1
Lavrora/arch/legacy/LegacyInterpreter; <init> (Lavrora/sim/Simulator;Lavrora/core/Program;Lavrora/arch/avr/AVRProperties;)V 1 -1
Lavrora/sim/AtmelInterpreter; <init> (Lavrora/sim/Simulator;Lavrora/core/Program;Lavrora/arch/avr/AVRProperties;)V 1 -1
Lavrora/sim/Interpreter; <init> (Lavrora/sim/Simulator;)V 1 -1
Ljava/lang/Compiler; compileClass (Ljava/lang/Class;)Z 1 -1
Lavrora/arch/legacy/LegacyInterpreter; runLoop ()V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; step ()I 1 -1
Lavrora/arch/legacy/LegacyInterpreter; stepInstruction ()I 1 -1
Lavrora/arch/legacy/LegacyInterpreter; stepInterrupt (J)I 1 -1
Lavrora/arch/legacy/LegacyInterpreter; invokeInterrupt (J)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; sleepLoop ()V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; fastLoop ()V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; instrumentedLoop ()V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ADC;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ADD;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ADIW;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$AND;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ANDI;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ASR;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BCLR;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BLD;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRBC;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRBS;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRCC;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRCS;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BREAK;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BREQ;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRGE;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRHC;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRHS;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRID;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRIE;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRLO;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRLT;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRMI;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRNE;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRPL;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRSH;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRTC;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRTS;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRVC;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRVS;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BSET;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BST;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CALL;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CBI;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CBR;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CLC;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CLH;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CLI;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CLN;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CLR;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CLS;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CLT;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CLV;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CLZ;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$COM;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CP;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CPC;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CPI;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CPSE;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$DEC;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$EICALL;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$EIJMP;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ELPM;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ELPMD;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ELPMPI;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$EOR;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$FMUL;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$FMULS;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$FMULSU;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ICALL;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$IJMP;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$IN;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$INC;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$JMP;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LD;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LDD;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LDI;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LDPD;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LDPI;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LDS;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LPM;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LPMD;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LPMPI;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LSL;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LSR;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$MOV;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$MOVW;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$MUL;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$MULS;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$MULSU;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$NEG;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$NOP;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$OR;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ORI;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$OUT;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$POP;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$PUSH;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$RCALL;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$RET;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$RETI;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$RJMP;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ROL;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ROR;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBC;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBCI;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBI;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBIC;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBIS;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBIW;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBR;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBRC;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBRS;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SEC;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SEH;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SEI;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SEN;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SER;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SES;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SET;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SEV;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SEZ;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SLEEP;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SPM;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ST;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$STD;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$STPD;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$STPI;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$STS;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SUB;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SUBI;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SWAP;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$TST;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$WDR;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; pushPC (I)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; low (I)B 1 -1
Lavrora/arch/legacy/LegacyInterpreter; high (I)B 1 -1
Lavrora/arch/legacy/LegacyInterpreter; bit (Z)B 1 -1
Lavrora/arch/legacy/LegacyInterpreter; uword (BB)I 1 -1
Lavrora/arch/legacy/LegacyInterpreter; extended (I)I 1 -1
Lavrora/arch/legacy/LegacyInterpreter; enterSleepMode ()V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; leaveSleepMode ()V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; <clinit> ()V 1 -1
Lavrora/sim/AtmelInterpreter$StateImpl; <init> (Lavrora/sim/AtmelInterpreter;)V 1 -1
Lavrora/sim/util/MulticastProbe; <init> ()V 1 -1
Lavrora/sim/mcu/MCUProperties; getIOReg (Ljava/lang/String;)I 1 -1
Lavrora/sim/mcu/RegisterLayout; getIOReg (Ljava/lang/String;)I 1 -1
Lavrora/sim/mcu/MCUProperties; hasIOReg (Ljava/lang/String;)Z 1 -1
Lavrora/sim/mcu/RegisterLayout; hasIOReg (Ljava/lang/String;)Z 1 -1
Lavrora/sim/AtmelInterpreter; toSRAM (I)I 1 -1
Lavrora/sim/Simulator; getMicrocontroller ()Lavrora/sim/mcu/Microcontroller; 1 -1
Lavrora/sim/mcu/DefaultMCU; getRegisterSet ()Lavrora/sim/mcu/RegisterSet; 1 -1
Lavrora/sim/state/VolatileBehavior; <init> ()V 1 -1
Lavrora/sim/mcu/RegisterSet; share ()[Lavrora/sim/ActiveRegister; 1 -1
Lavrora/sim/AtmelInterpreter$IORegBehavior; <init> (Lavrora/sim/ActiveRegister;)V 1 -1
Lavrora/sim/AtmelInterpreter$SREGBehavior; <init> (Lavrora/sim/AtmelInterpreter;Lavrora/sim/AtmelInterpreter$1;)V 1 -1
Lavrora/sim/AtmelInterpreter$SREGBehavior; <init> (Lavrora/sim/AtmelInterpreter;)V 1 -1
Lavrora/sim/mcu/ReprogrammableCodeSegment$Factory; newCodeSegment (Ljava/lang/String;Lavrora/sim/AtmelInterpreter;Lavrora/core/Program;)Lavrora/sim/CodeSegment; 1 -1
Lavrora/sim/CodeSegment; <clinit> ()V 1 -1
Lavrora/sim/mcu/ReprogrammableCodeSegment; <init> (Ljava/lang/String;ILavrora/sim/AtmelInterpreter;I)V 1 -1
Lavrora/sim/CodeSegment; <init> (Ljava/lang/String;ILavrora/sim/AtmelInterpreter;)V 1 -1
Lavrora/sim/Segment; <init> (Ljava/lang/String;IBLavrora/sim/State;)V 1 -1
Lavrora/sim/CodeSegment$NoLegacyInstr; <init> (Lavrora/sim/CodeSegment;)V 1 -1
Lavrora/sim/mcu/ReprogrammableCodeSegment$SPMCSR_reg; <init> (Lavrora/sim/mcu/ReprogrammableCodeSegment;Lavrora/sim/mcu/ReprogrammableCodeSegment$1;)V 1 -1
Lavrora/sim/mcu/ReprogrammableCodeSegment$SPMCSR_reg; <init> (Lavrora/sim/mcu/ReprogrammableCodeSegment;)V 1 -1
Lavrora/sim/mcu/ReprogrammableCodeSegment$SPMCSR_reg$ResetEvent; <init> (Lavrora/sim/mcu/ReprogrammableCodeSegment$SPMCSR_reg;)V 1 -1
Lavrora/sim/Interpreter; getMainClock ()Lavrora/sim/clock/MainClock; 1 -1
Lcck/util/Arithmetic; getBitRangeMask (II)I 1 -1
Lavrora/sim/mcu/ReprogrammableCodeSegment; resetBuffer ()V 1 -1
Lavrora/sim/mcu/ReprogrammableCodeSegment; bufferSize ()I 1 -1
Lavrora/sim/Interpreter; getSimulator ()Lavrora/sim/Simulator; 1 -1
Lavrora/sim/AtmelInterpreter; installIOReg (ILavrora/sim/ActiveRegister;)V 1 -1
Lavrora/sim/Simulator; getPrinter (Ljava/lang/String;)Lavrora/sim/output/SimPrinter; 1 -1
Lavrora/sim/Simulation; getPrinter (Lavrora/sim/Simulator;Ljava/lang/String;)Lavrora/sim/output/SimPrinter; 1 -1
Lcck/text/Verbose; <clinit> ()V 1 -1
Lcck/text/Verbose; getVerbosePrinter (Ljava/lang/String;)Lcck/text/Verbose$Printer; 1 -1
Lcck/text/Verbose; getPrinter (Ljava/lang/String;)Lcck/text/Verbose$Printer; 1 -1
Lcck/text/Printer; <clinit> ()V 1 -1
Lcck/text/Printer; <init> (Ljava/io/PrintStream;)V 1 -1
Lcck/text/Verbose$Printer; <init> ()V 1 -1
Lcck/text/Verbose; isVerbose (Ljava/lang/String;)Z 1 -1
Lavrora/sim/CodeSegment; load (Lavrora/core/Program;)V 1 -1
Lavrora/core/Program; readInstr (I)Lavrora/arch/AbstractInstr; 1 -1
Lavrora/core/Program; readProgramByte (I)B 1 -1
Lavrora/sim/CodeSegment; shareCode (Lavrora/sim/CodeSegment$CodeSharer;)[Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/sim/InterruptTable; <init> (Lavrora/sim/Interpreter;I)V 1 -1
Lavrora/sim/AtmelInterpreter; getState ()Lavrora/sim/State; 1 -1
Lavrora/sim/output/EventBuffer; <init> (Lavrora/sim/Simulator;)V 1 -1
Lavrora/sim/Simulator; getInterpreter ()Lavrora/sim/Interpreter; 1 -1
Lavrora/sim/mcu/AtmelMicrocontroller; getIOReg (Ljava/lang/String;)Lavrora/sim/ActiveRegister; 1 -1
Lavrora/sim/AtmelInterpreter; getIOReg (I)Lavrora/sim/ActiveRegister; 1 -1
Lavrora/sim/mcu/ATMega128; installPins ()V 1 -1
Lavrora/sim/mcu/DefaultMCU$Pin; <init> (Lavrora/sim/mcu/DefaultMCU;I)V 1 -1
Lavrora/sim/mcu/ATMega128; installDevices ()V 1 -1
Lavrora/sim/mcu/ATMegaFamily; buildInterruptRange (ZLjava/lang/String;Ljava/lang/String;II)Lavrora/sim/mcu/ATMegaFamily$FlagRegister; 1 -1
Lavrora/sim/mcu/ATMegaFamily$FlagRegister; <init> (Lavrora/sim/AtmelInterpreter;[I)V 1 -1
Lavrora/sim/Interpreter; getInterruptTable ()Lavrora/sim/InterruptTable; 1 -1
Lavrora/sim/mcu/ATMegaFamily$FlagRegister$Notification; <init> (Lavrora/sim/mcu/ATMegaFamily$FlagRegister;I)V 1 -1
Lavrora/sim/InterruptTable; registerInternalNotification (Lavrora/sim/InterruptTable$Notification;I)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$MaskRegister; <init> (Lavrora/sim/AtmelInterpreter;[I)V 1 -1
Lavrora/sim/mcu/AtmelMicrocontroller; installIOReg (Ljava/lang/String;Lavrora/sim/ActiveRegister;)Lavrora/sim/ActiveRegister; 1 -1
Lavrora/sim/mcu/ATMegaFamily$Timer0; <init> (Lavrora/sim/mcu/ATMegaFamily;)V 1 -1
Lavrora/sim/mcu/Timer8Bit; <init> (Lavrora/sim/mcu/AtmelMicrocontroller;IIIII[I)V 1 -1
Lavrora/sim/mcu/AtmelInternalDevice; <init> (Ljava/lang/String;Lavrora/sim/mcu/AtmelMicrocontroller;)V 1 -1
Lavrora/sim/mcu/DefaultMCU; getSimulator ()Lavrora/sim/Simulator; 1 -1
Lavrora/sim/Simulator; getClock ()Lavrora/sim/clock/MainClock; 1 -1
Lavrora/sim/mcu/Timer8Bit$ControlRegister; <init> (Lavrora/sim/mcu/Timer8Bit;)V 1 -1
Lavrora/sim/state/RegisterUtil; bitRangeView (Lavrora/sim/state/RegisterView;II)Lavrora/sim/state/RegisterView; 1 -1
Lavrora/sim/state/RegisterUtil$BitRangeView; <init> (Lavrora/sim/state/RegisterView;BB)V 1 -1
Lavrora/sim/state/RegisterUtil; permutedView (Lavrora/sim/state/RegisterView;[B)Lavrora/sim/state/RegisterView; 1 -1
Lavrora/sim/state/RegisterUtil$PermutedView; <init> (Lavrora/sim/state/RegisterView;[B)V 1 -1
Lavrora/sim/mcu/Timer8Bit$TCNTnRegister; <init> (Lavrora/sim/mcu/Timer8Bit;)V 1 -1
Lavrora/sim/mcu/Timer8Bit$BufferedRegister; <init> (Lavrora/sim/mcu/Timer8Bit;)V 1 -1
Lavrora/sim/mcu/DefaultMCU; getClock (Ljava/lang/String;)Lavrora/sim/clock/Clock; 1 -1
Lavrora/sim/clock/ClockDomain; getClock (Ljava/lang/String;)Lavrora/sim/clock/Clock; 1 -1
Lavrora/sim/mcu/AtmelMicrocontroller; getPin (Ljava/lang/String;)Lavrora/sim/mcu/Microcontroller$Pin; 1 -1
Lavrora/sim/mcu/MCUProperties; getPin (Ljava/lang/String;)I 1 -1
Lavrora/sim/mcu/AtmelInternalDevice; installIOReg (Ljava/lang/String;Lavrora/sim/ActiveRegister;)V 1 -1
Lavrora/sim/mcu/Timer8Bit; installTickers ()V 1 -1
Lavrora/sim/mcu/Timer8Bit$Mode_Normal; <init> (Lavrora/sim/mcu/Timer8Bit;)V 1 -1
Lavrora/sim/mcu/Timer8Bit$Mode_CTC; <init> (Lavrora/sim/mcu/Timer8Bit;)V 1 -1
Lavrora/sim/mcu/Timer8Bit$Mode_FastPWM; <init> (Lavrora/sim/mcu/Timer8Bit;)V 1 -1
Lavrora/sim/mcu/Timer8Bit$Mode_PWM; <init> (Lavrora/sim/mcu/Timer8Bit;)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$Timer0$ASSRRegister; <init> (Lavrora/sim/mcu/ATMegaFamily$Timer0;)V 1 -1
Lavrora/sim/mcu/AtmelMicrocontroller; addDevice (Lavrora/sim/mcu/AtmelInternalDevice;)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$Timer1; <init> (Lavrora/sim/mcu/ATMegaFamily;I)V 1 -1
Lavrora/sim/mcu/Timer16Bit; <init> (IILavrora/sim/mcu/AtmelMicrocontroller;)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$Timer1; initValues ()V 1 -1
Lavrora/sim/mcu/Timer16Bit$1; <init> (Lavrora/sim/mcu/Timer16Bit;)V 1 -1
Lavrora/sim/mcu/RegisterSet; installField (Ljava/lang/String;Lavrora/sim/mcu/RegisterSet$Field;)Lavrora/sim/mcu/RegisterSet$Field; 1 -1
Lavrora/sim/mcu/RegisterSet; getFieldWriter (Ljava/lang/String;)Lavrora/sim/mcu/RegisterSet$FieldWriter; 1 -1
Lavrora/sim/mcu/Timer16Bit$2; <init> (Lavrora/sim/mcu/Timer16Bit;)V 1 -1
Lavrora/sim/mcu/MCUProperties; getInterrupt (Ljava/lang/String;)I 1 -1
Lavrora/sim/mcu/Timer16Bit$InputCapturePin; <init> (Lavrora/sim/mcu/Timer16Bit;)V 1 -1
Lavrora/sim/mcu/Timer16Bit; newOCU (IILavrora/sim/mcu/Microcontroller;Lavrora/sim/mcu/RegisterSet;CILavrora/sim/mcu/ATMegaFamily$FlagRegister;)V 1 -1
Lavrora/sim/mcu/Timer16Bit$OutputCompareUnit; <init> (Lavrora/sim/mcu/Timer16Bit;Lavrora/sim/mcu/Microcontroller;Lavrora/sim/mcu/RegisterSet;CILavrora/sim/mcu/ATMegaFamily$FlagRegister;)V 1 -1
Lavrora/sim/mcu/Timer16Bit$BufferedRegister; <init> (Lavrora/sim/mcu/Timer16Bit;)V 1 -1
Lavrora/sim/mcu/Timer16Bit$OCRnxPairedRegister; <init> (Lavrora/sim/mcu/Timer16Bit;Lavrora/sim/RWRegister;Lavrora/sim/RWRegister;)V 1 -1
Lavrora/sim/mcu/Timer16Bit$PairedRegister; <init> (Lavrora/sim/mcu/Timer16Bit;Lavrora/sim/RWRegister;Lavrora/sim/RWRegister;)V 1 -1
Lavrora/sim/mcu/RegisterSet; getField (Ljava/lang/String;)Lavrora/sim/mcu/RegisterSet$Field; 1 -1
Lavrora/sim/mcu/Timer16Bit$OutputCompareUnit$FOC_Field; <init> (Lavrora/sim/mcu/Timer16Bit$OutputCompareUnit;)V 1 -1
Lavrora/sim/mcu/Timer16Bit$OCRnxTempHighRegister; <init> (Lavrora/sim/mcu/Timer16Bit;Lavrora/sim/RWRegister;)V 1 -1
Lavrora/sim/mcu/Timer16Bit$TCNTnRegister; <init> (Lavrora/sim/mcu/Timer16Bit;)V 1 -1
Lavrora/sim/mcu/Timer16Bit; installTickers ()V 1 -1
Lavrora/sim/mcu/Timer16Bit$Mode_Normal; <init> (Lavrora/sim/mcu/Timer16Bit;)V 1 -1
Lavrora/sim/mcu/Timer16Bit$Mode_PWMPhaseCorrect; <init> (Lavrora/sim/mcu/Timer16Bit;ILavrora/sim/RWRegister;Lavrora/sim/RWRegister;)V 1 -1
Lavrora/sim/mcu/Timer16Bit$Mode_CTC; <init> (Lavrora/sim/mcu/Timer16Bit;Lavrora/sim/RWRegister;Lavrora/sim/RWRegister;)V 1 -1
Lavrora/sim/mcu/Timer16Bit$Mode_FastPWM; <init> (Lavrora/sim/mcu/Timer16Bit;ILavrora/sim/RWRegister;Lavrora/sim/RWRegister;)V 1 -1
Lavrora/sim/mcu/Timer16Bit$Mode_PWM_PNF; <init> (Lavrora/sim/mcu/Timer16Bit;Lavrora/sim/RWRegister;Lavrora/sim/RWRegister;)V 1 -1
Lavrora/sim/mcu/Timer16Bit$Mode_Reserved; <init> (Lavrora/sim/mcu/Timer16Bit;)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$Timer2; <init> (Lavrora/sim/mcu/ATMegaFamily;)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$Timer3; <init> (Lavrora/sim/mcu/ATMegaFamily;I)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$Timer3; initValues ()V 1 -1
Lavrora/sim/mcu/ATMegaFamily; buildPort (C)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$PortRegister; <init> ([Lavrora/sim/mcu/DefaultMCU$Pin;)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$DirectionRegister; <init> ([Lavrora/sim/mcu/DefaultMCU$Pin;)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$PinRegister; <init> ([Lavrora/sim/mcu/DefaultMCU$Pin;)V 1 -1
Lavrora/sim/mcu/EEPROM; <init> (ILavrora/sim/mcu/AtmelMicrocontroller;)V 1 -1
Lavrora/sim/mcu/EEPROM$EEPROMTicker; <init> (Lavrora/sim/mcu/EEPROM;)V 1 -1
Lavrora/sim/mcu/EEPROM$EEPROMWriteFinishedEvent; <init> (Lavrora/sim/mcu/EEPROM;)V 1 -1
Lavrora/sim/mcu/EEPROM$EECRReg; <init> (Lavrora/sim/mcu/EEPROM;)V 1 -1
Lavrora/sim/state/RegisterUtil; booleanView (Lavrora/sim/state/RegisterView;I)Lavrora/sim/state/BooleanView; 1 -1
Lavrora/sim/state/RegisterUtil$BoolView; <init> (Lavrora/sim/state/RegisterView;B)V 1 -1
Lavrora/sim/mcu/EEPROM$EEARLReg; <init> (Lavrora/sim/mcu/EEPROM;)V 1 -1
Lavrora/sim/mcu/EEPROM$EEARHReg; <init> (Lavrora/sim/mcu/EEPROM;)V 1 -1
Lcck/util/Arithmetic; log (I)I 1 -1
Lcck/util/Arithmetic; highestBit (I)I 1 -1
Lavrora/sim/mcu/USART; <clinit> ()V 1 -1
Lavrora/sim/mcu/USART; <init> (Ljava/lang/String;Lavrora/sim/mcu/AtmelMicrocontroller;)V 1 -1
Lavrora/sim/mcu/USART; getUSARTProperties (Ljava/lang/String;Lavrora/sim/mcu/Microcontroller;)Lavrora/sim/mcu/USART$USARTProperties; 1 -1
Lavrora/sim/mcu/USART$USARTProperties; <init> ()V 1 -1
Lavrora/sim/mcu/USART$DataRegister; <init> (Lavrora/sim/mcu/USART;)V 1 -1
Lavrora/sim/mcu/USART$DataRegister$TwoLevelFIFO; <init> (Lavrora/sim/mcu/USART$DataRegister;)V 1 -1
Lavrora/sim/mcu/USART$DataRegister$TwoLevelFIFO$USARTFrameWrapper; <init> (Lavrora/sim/mcu/USART$DataRegister$TwoLevelFIFO;Lavrora/sim/mcu/USART$1;)V 1 -1
Lavrora/sim/mcu/USART$DataRegister$TwoLevelFIFO$USARTFrameWrapper; <init> (Lavrora/sim/mcu/USART$DataRegister$TwoLevelFIFO;)V 1 -1
Lavrora/sim/mcu/USART$ControlRegisterA; <init> (Lavrora/sim/mcu/USART;)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$InterruptFlag; <init> (Lavrora/sim/AtmelInterpreter;ZILavrora/sim/state/BooleanView;)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$InterruptFlag; flag (Z)V 1 -1
Lavrora/sim/state/RegisterUtil$BoolView; setValue (Z)V 1 -1
Lavrora/sim/RWRegister; getValue ()I 1 -1
Lavrora/sim/RWRegister; setValue (I)V 1 -1
Lavrora/sim/AtmelInterpreter; setPosted (IZ)V 1 -1
Lavrora/sim/InterruptTable; post (I)V 1 -1
Lcck/util/Arithmetic; setBit (JIZ)J 1 -1
Lavrora/sim/mcu/USART$ControlRegisterB; <init> (Lavrora/sim/mcu/USART;)V 1 -1
Lavrora/sim/state/RegisterUtil; bitView (Lavrora/sim/state/RegisterView;I)Lavrora/sim/state/RegisterView; 1 -1
Lavrora/sim/mcu/USART$ControlRegisterC; <init> (Lavrora/sim/mcu/USART;)V 1 -1
Lavrora/sim/mcu/USART$UBRRnLReg; <init> (Lavrora/sim/mcu/USART;)V 1 -1
Lavrora/sim/mcu/USART$UBRRnHReg; <init> (Lavrora/sim/mcu/USART;)V 1 -1
Lavrora/sim/mcu/USART$Transmitter; <init> (Lavrora/sim/mcu/USART;)V 1 -1
Lavrora/sim/mcu/USART$Transmitter$Transmit; <init> (Lavrora/sim/mcu/USART$Transmitter;)V 1 -1
Lavrora/sim/mcu/USART$Receiver; <init> (Lavrora/sim/mcu/USART;)V 1 -1
Lavrora/sim/mcu/USART$Receiver$Receive; <init> (Lavrora/sim/mcu/USART$Receiver;)V 1 -1
Lavrora/sim/mcu/USART$SerialPrinter; <init> (Lavrora/sim/mcu/USART;)V 1 -1
Lavrora/sim/mcu/USART; connect (Lavrora/sim/mcu/USART$USARTDevice;)V 1 -1
Lavrora/sim/mcu/SPI; <clinit> ()V 1 -1
Lavrora/sim/mcu/SPI$Frame; <init> (B)V 1 -1
Lavrora/sim/mcu/SPI; <init> (Lavrora/sim/mcu/AtmelMicrocontroller;)V 1 -1
Lavrora/sim/mcu/SPI$TransferEvent; <init> (Lavrora/sim/mcu/SPI;)V 1 -1
Lavrora/sim/mcu/SPI$SPDReg; <init> (Lavrora/sim/mcu/SPI;)V 1 -1
Lavrora/sim/mcu/SPI$SPDReg$TransmitRegister; <init> (Lavrora/sim/mcu/SPI$SPDReg;)V 1 -1
Lavrora/sim/mcu/SPI$SPCRReg; <init> (Lavrora/sim/mcu/SPI;)V 1 -1
Lavrora/sim/mcu/SPI$SPSReg; <init> (Lavrora/sim/mcu/SPI;)V 1 -1
Lavrora/sim/mcu/ADC; <clinit> ()V 1 -1
Lavrora/sim/mcu/ADC$2; <init> ()V 1 -1
Lavrora/sim/mcu/ADC; <init> (Lavrora/sim/mcu/AtmelMicrocontroller;I)V 1 -1
Lavrora/sim/mcu/ADC$1; <init> (Lavrora/sim/mcu/ADC;)V 1 -1
Lavrora/sim/mcu/ADC$MUXRegister; <init> (Lavrora/sim/mcu/ADC;)V 1 -1
Lavrora/sim/mcu/ADC$ControlRegister; <init> (Lavrora/sim/mcu/ADC;)V 1 -1
Lavrora/sim/mcu/ADC$ControlRegister$ConversionEvent; <init> (Lavrora/sim/mcu/ADC$ControlRegister;Lavrora/sim/mcu/ADC$1;)V 1 -1
Lavrora/sim/mcu/ADC$ControlRegister$ConversionEvent; <init> (Lavrora/sim/mcu/ADC$ControlRegister;)V 1 -1
Lavrora/sim/Simulation; getEnergyControl ()Lavrora/sim/energy/EnergyControl; 1 -1
Lavrora/sim/energy/Energy; <init> (Ljava/lang/String;[DLavrora/sim/FiniteStateMachine;Lavrora/sim/energy/EnergyControl;)V 1 -1
Lavrora/sim/FiniteStateMachine; getClock ()Lavrora/sim/clock/Clock; 1 -1
Lavrora/sim/FiniteStateMachine; getStartState ()I 1 -1
Lavrora/sim/energy/EnergyControl; addConsumer (Lavrora/sim/energy/Energy;)V 1 -1
Lavrora/sim/platform/Mica2; <init> (Lavrora/sim/mcu/Microcontroller;)V 1 -1
Lavrora/sim/platform/Platform; <init> (Lavrora/sim/mcu/Microcontroller;)V 1 -1
Lavrora/sim/mcu/DefaultMCU; setPlatform (Lavrora/sim/platform/Platform;)V 1 -1
Lavrora/sim/platform/Mica2; addDevices ()V 1 -1
Lavrora/sim/platform/LED; <clinit> ()V 1 -1
Lavrora/sim/platform/LED; <init> (Lavrora/sim/Simulator;ILjava/lang/String;)V 1 -1
Lavrora/sim/FiniteStateMachine; <init> (Lavrora/sim/clock/Clock;I[Ljava/lang/String;I)V 1 -1
Lavrora/sim/FiniteStateMachine; buildUniformTTM (II)[[I 1 -1
Lavrora/sim/platform/LED$LEDProbe; <init> (Lavrora/sim/platform/LED;)V 1 -1
Lavrora/sim/Simulator; getPrinter ()Lavrora/sim/output/SimPrinter; 1 -1
Lavrora/sim/Simulation; getPrinter (Lavrora/sim/Simulator;)Lavrora/sim/output/SimPrinter; 1 -1
Lavrora/sim/output/SimPrinter; <init> (Lavrora/sim/Simulator;Ljava/lang/String;)V 1 -1
Lavrora/sim/Simulator; getSimulation ()Lavrora/sim/Simulation; 1 -1
Lavrora/sim/platform/LED$LEDGroup; <init> (Lavrora/sim/Simulator;[Lavrora/sim/platform/LED;)V 1 -1
Lavrora/sim/platform/Platform; addDevice (Ljava/lang/String;Ljava/lang/Object;)V 1 -1
Lavrora/sim/mcu/DefaultMCU$Pin; connectOutput (Lavrora/sim/mcu/Microcontroller$Pin$Output;)V 1 -1
Lavrora/sim/radio/CC1000Radio; <clinit> ()V 1 -1
Lavrora/sim/radio/RadioEnergy; <clinit> ()V 1 -1
Lavrora/sim/radio/RadioEnergy; allModeNames ()[Ljava/lang/String; 1 -1
Lcck/text/StringUtil; leftJustify (Ljava/lang/String;I)Ljava/lang/String; 1 -1
Lcck/text/StringUtil; justify (ZLjava/lang/String;I)Ljava/lang/String; 1 -1
Lavrora/sim/FiniteStateMachine; buildSparseTTM (II)[[I 1 -1
Lavrora/sim/radio/CC1000Radio; <init> (Lavrora/sim/mcu/Microcontroller;J)V 1 -1
Lavrora/sim/radio/CC1000Radio$DummyRegister; <init> (Lavrora/sim/radio/CC1000Radio;I)V 1 -1
Lavrora/sim/radio/CC1000Radio$RadioRegister; <init> (Lavrora/sim/radio/CC1000Radio;Ljava/lang/String;B)V 1 -1
Lavrora/sim/radio/CC1000Radio$MainRegister; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/radio/CC1000Radio$FrequencyRegister; <init> (Lavrora/sim/radio/CC1000Radio;Ljava/lang/String;)V 1 -1
Lavrora/sim/radio/CC1000Radio$FrequencyRegister$FrequencySubRegister; <init> (Lavrora/sim/radio/CC1000Radio$FrequencyRegister;Ljava/lang/String;)V 1 -1
Lavrora/sim/radio/CC1000Radio$FrequencyRegister; setFrequency (I)V 1 -1
Lavrora/sim/radio/CC1000Radio$RadioRegister; write (B)V 1 -1
Lavrora/sim/radio/CC1000Radio$FrequencyRegister$FrequencySubRegister; decode (B)V 1 -1
Lavrora/sim/radio/CC1000Radio$FrequencyRegister; updateFrequency ()V 1 -1
Lavrora/sim/radio/CC1000Radio$FrequencySeparationRegister; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/radio/CC1000Radio$FrequencySeparationRegister$SubRegister; <init> (Lavrora/sim/radio/CC1000Radio$FrequencySeparationRegister;Ljava/lang/String;)V 1 -1
Lavrora/sim/radio/CC1000Radio$FrequencySeparationRegister; setFrequencySeparation (I)V 1 -1
Lavrora/sim/radio/CC1000Radio$FrequencySeparationRegister$SubRegister; decode (B)V 1 -1
Lavrora/sim/radio/CC1000Radio$FrequencySeparationRegister; updateFrequencySeparation ()V 1 -1
Lavrora/sim/radio/CC1000Radio$CurrentRegister; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/radio/CC1000Radio$FrontEndRegister; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/radio/CC1000Radio$PA_POWRegister; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/radio/CC1000Radio$PLLRegister; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/radio/CC1000Radio$LockRegister; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/radio/CC1000Radio$CALRegister; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/radio/CC1000Radio$CALRegister$Calibrate; <init> (Lavrora/sim/radio/CC1000Radio$CALRegister;)V 1 -1
Lavrora/sim/radio/CC1000Radio$Modem2Register; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/radio/CC1000Radio$Modem1Register; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/radio/CC1000Radio$Modem0Register; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/radio/CC1000Radio$Modem0Register; decode (B)V 1 -1
Lavrora/sim/radio/CC1000Radio$Modem0Register; calculateBaudRate (II)V 1 -1
Lavrora/sim/radio/CC1000Radio$MatchRegister; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/radio/CC1000Radio$FSCTRLRegister; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/radio/CC1000Radio$PrescalerRegister; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/radio/CC1000Radio$SPITicker; <init> (Lavrora/sim/radio/CC1000Radio;Lavrora/sim/radio/CC1000Radio$1;)V 1 -1
Lavrora/sim/radio/CC1000Radio$SPITicker; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/mcu/AtmelMicrocontroller; getDevice (Ljava/lang/String;)Lavrora/sim/mcu/AtmelInternalDevice; 1 -1
Lavrora/sim/radio/CC1000Radio; createMedium (Lavrora/sim/clock/Synchronizer;Lavrora/sim/radio/Medium$Arbitrator;)Lavrora/sim/radio/Medium; 1 -1
Lavrora/sim/radio/Medium; <clinit> ()V 1 -1
Lavrora/sim/radio/Medium; <init> (Lavrora/sim/clock/Synchronizer;Lavrora/sim/radio/Medium$Arbitrator;IIII)V 1 -1
Lavrora/sim/radio/Medium$BasicArbitrator; <clinit> ()V 1 -1
Lavrora/sim/radio/Medium$BasicArbitrator; <init> ()V 1 -1
Lavrora/sim/radio/CC1000Radio; setMedium (Lavrora/sim/radio/Medium;)V 1 -1
Lavrora/sim/radio/Medium$TXRX; <clinit> ()V 1 -1
Lavrora/sim/radio/CC1000Radio$Transmitter; <init> (Lavrora/sim/radio/CC1000Radio;Lavrora/sim/radio/Medium;)V 1 -1
Lavrora/sim/radio/Medium$Transmitter; <init> (Lavrora/sim/radio/Medium;Lavrora/sim/clock/Clock;)V 1 -1
Lavrora/sim/radio/Medium$TXRX; <init> (Lavrora/sim/radio/Medium;Lavrora/sim/clock/Clock;)V 1 -1
Lavrora/sim/radio/Medium$Transmitter$Ticker; <init> (Lavrora/sim/radio/Medium$Transmitter;)V 1 -1
Lavrora/sim/radio/Medium$Receiver; <clinit> ()V 1 -1
Lavrora/sim/radio/CC1000Radio$Receiver; <init> (Lavrora/sim/radio/CC1000Radio;Lavrora/sim/radio/Medium;)V 1 -1
Lavrora/sim/radio/Medium$Receiver; <init> (Lavrora/sim/radio/Medium;Lavrora/sim/clock/Clock;)V 1 -1
Lavrora/sim/radio/Medium$Receiver$Ticker; <clinit> ()V 1 -1
Lavrora/sim/radio/Medium$Receiver$Ticker; <init> (Lavrora/sim/radio/Medium$Receiver;)V 1 -1
Lavrora/sim/radio/CC1000Radio$RSSIOutput; <init> (Lavrora/sim/radio/CC1000Radio;Lavrora/sim/radio/CC1000Radio$1;)V 1 -1
Lavrora/sim/radio/CC1000Radio$RSSIOutput; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/mcu/ADC; connectADCInput (Lavrora/sim/mcu/ADC$ADCInput;I)V 1 -1
Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface; <init> (Lavrora/sim/radio/CC1000Radio;)V 1 -1
Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface$PCLKOutput; <init> (Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface;)V 1 -1
Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface$PDATAOutput; <init> (Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface;)V 1 -1
Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface$PDATAInput; <init> (Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface;)V 1 -1
Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface$PALEOutput; <init> (Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface;)V 1 -1
Lavrora/sim/mcu/DefaultMCU; getPin (I)Lavrora/sim/mcu/Microcontroller$Pin; 1 -1
Lavrora/sim/mcu/DefaultMCU$Pin; connectInput (Lavrora/sim/mcu/Microcontroller$Pin$Input;)V 1 -1
Lavrora/sim/platform/sensors/SensorBoard; <init> (Lavrora/sim/Simulator;)V 1 -1
Lavrora/sim/platform/ExternalFlash; <clinit> ()V 1 -1
Lavrora/sim/platform/ExternalFlash; <init> (Lavrora/sim/mcu/Microcontroller;II)V 1 -1
Lavrora/sim/platform/ExternalFlash$Memory; <init> (Lavrora/sim/platform/ExternalFlash;II)V 1 -1
Lavrora/sim/platform/ExternalFlash$Page; <init> (Lavrora/sim/platform/ExternalFlash;I)V 1 -1
Lavrora/sim/platform/ExternalFlash$PA3Output; <init> (Lavrora/sim/platform/ExternalFlash;)V 1 -1
Lavrora/sim/platform/ExternalFlash$PD3Output; <init> (Lavrora/sim/platform/ExternalFlash;)V 1 -1
Lavrora/sim/platform/ExternalFlash$PD5Output; <init> (Lavrora/sim/platform/ExternalFlash;)V 1 -1
Lavrora/sim/platform/ExternalFlash$PD2Input; <init> (Lavrora/sim/platform/ExternalFlash;)V 1 -1
Lavrora/sim/platform/sensors/AccelSensor; <clinit> ()V 1 -1
Lavrora/sim/platform/sensors/AccelSensor; <init> (Lavrora/sim/mcu/AtmelMicrocontroller;ILjava/lang/String;)V 1 -1
Lavrora/sim/platform/sensors/Sensor; <init> ()V 1 -1
Lavrora/sim/platform/sensors/AccelSensor$OnPin; <init> (Lavrora/sim/platform/sensors/AccelSensor;)V 1 -1
Lavrora/sim/platform/sensors/AccelSensor$ADCInput; <init> (Lavrora/sim/platform/sensors/AccelSensor;)V 1 -1
Lavrora/sim/platform/sensors/LightSensor; <clinit> ()V 1 -1
Lavrora/sim/platform/sensors/LightSensor; <init> (Lavrora/sim/mcu/AtmelMicrocontroller;ILjava/lang/String;Ljava/lang/String;)V 1 -1
Lavrora/sim/platform/sensors/LightSensor$OnPin; <init> (Lavrora/sim/platform/sensors/LightSensor;)V 1 -1
Lavrora/sim/platform/sensors/LightSensor$PowerPin; <init> (Lavrora/sim/platform/sensors/LightSensor;)V 1 -1
Lavrora/sim/platform/sensors/LightSensor$ADCInput; <init> (Lavrora/sim/platform/sensors/LightSensor;)V 1 -1
Lavrora/sim/platform/Platform; getMicrocontroller ()Lavrora/sim/mcu/Microcontroller; 1 -1
Lavrora/sim/Simulation$Node; processTimeout ()V 1 -1
Lcck/util/Option$Double; get ()D 1 -1
Lavrora/sim/util/ClockCycleTimeout; <init> (Lavrora/sim/Simulator;J)V 1 -1
Lavrora/sim/Simulator; insertEvent (Lavrora/sim/Simulator$Event;J)V 1 -1
Lavrora/sim/clock/MainClock; insertEvent (Lavrora/sim/Simulator$Event;J)V 1 -1
Lavrora/sim/clock/DeltaQueue; insertEvent (Lavrora/sim/Simulator$Event;J)V 1 -1
Lavrora/sim/clock/DeltaQueue; newLink (Lavrora/sim/Simulator$Event;JLavrora/sim/clock/DeltaQueue$Link;)Lavrora/sim/clock/DeltaQueue$Link; 1 -1
Lavrora/sim/clock/DeltaQueue$Link; <init> (Lavrora/sim/clock/DeltaQueue;Lavrora/sim/Simulator$Event;J)V 1 -1
Lavrora/sim/clock/DeltaQueue; access$000 (Lavrora/sim/clock/DeltaQueue;Lavrora/sim/Simulator$Event;Lavrora/sim/clock/DeltaQueue$EventList;)Lavrora/sim/clock/DeltaQueue$EventList; 1 -1
Lavrora/sim/clock/DeltaQueue; newEventList (Lavrora/sim/Simulator$Event;Lavrora/sim/clock/DeltaQueue$EventList;)Lavrora/sim/clock/DeltaQueue$EventList; 1 -1
Lavrora/sim/clock/DeltaQueue$EventList; <init> (Lavrora/sim/Simulator$Event;Lavrora/sim/clock/DeltaQueue$EventList;)V 1 -1
Lavrora/sim/Simulation$Node; processInterruptSched ()V 1 -1
Lavrora/sim/Simulation$Node; processEepromLoad ()V 1 -1
Lavrora/sim/clock/RippleSynchronizer; addNode (Lavrora/sim/Simulation$Node;)V 1 -1
Lavrora/sim/Simulation$Node; getThread ()Lavrora/sim/SimulatorThread; 1 -1
Lavrora/sim/SimulatorThread; setSynchronizer (Lavrora/sim/clock/Synchronizer;)V 1 -1
Lavrora/sim/clock/RippleSynchronizer$NotifyEvent; <init> (Lavrora/sim/clock/RippleSynchronizer;Lavrora/sim/SimulatorThread;)V 1 -1
Lavrora/sim/SimulatorThread; getSimulator ()Lavrora/sim/Simulator; 1 -1
Lavrora/sim/Simulation$Node; getSimulator ()Lavrora/sim/Simulator; 1 -1
Lavrora/sim/clock/DeltaQueue; insertAfter (Lavrora/sim/clock/DeltaQueue$Link;Lavrora/sim/Simulator$Event;JLavrora/sim/clock/DeltaQueue$Link;)V 1 -1
Lavrora/sim/platform/Platform; getDevice (Ljava/lang/String;)Ljava/lang/Object; 1 -1
Lavrora/sim/types/SensorSimulation$SensorNode; createCC1000Medium ()Lavrora/sim/radio/Medium; 1 -1
Lavrora/sim/types/SensorSimulation$SensorNode; createRadioModel ()V 1 -1
Lavrora/sim/types/SensorSimulation; access$300 (Lavrora/sim/types/SensorSimulation;)Lavrora/sim/clock/Synchronizer; 1 -1
Lavrora/sim/Simulator; delay (J)V 1 -1
Lavrora/sim/AtmelInterpreter; delay (J)V 1 -1
Lavrora/sim/types/SensorSimulation$SensorNode; updateNodeID ()V 1 -1
Lavrora/core/Program; getSourceMapping ()Lavrora/core/SourceMapping; 1 -1
Lavrora/sim/types/SensorSimulation$SensorNode; updateVariable (Lavrora/core/SourceMapping;Ljava/lang/String;I)V 1 -1
Lavrora/core/SourceMapping; getLocation (Ljava/lang/String;)Lavrora/core/SourceMapping$Location; 1 -1
Lcck/text/StringUtil; isHex (Ljava/lang/String;)Z 1 -1
Lcck/util/Arithmetic; low (I)B 1 -1
Lavrora/sim/AtmelInterpreter; writeFlashByte (IB)V 1 -1
Lavrora/sim/Segment; set (IB)V 1 -1
Lavrora/sim/Segment; direct_write (IB)V 1 -1
Lcck/util/Arithmetic; high (I)B 1 -1
Lavrora/sim/types/SensorSimulation$SensorNode; addSensorData ()V 1 -1
Lavrora/sim/Simulation$Node; addMonitors ()V 1 -1
Lavrora/monitors/LEDMonitor; newMonitor (Lavrora/sim/Simulator;)Lavrora/monitors/Monitor; 1 -1
Lavrora/monitors/LEDMonitor$Mon; <init> (Lavrora/monitors/LEDMonitor;Lavrora/sim/Simulator;)V 1 -1
Lavrora/sim/mcu/DefaultMCU; getPlatform ()Lavrora/sim/platform/Platform; 1 -1
Lavrora/sim/FiniteStateMachine; insertProbe (Lavrora/sim/FiniteStateMachine$Probe;)V 1 -1
Lavrora/sim/util/TransactionalList; add (Ljava/lang/Object;)V 1 -1
Lavrora/sim/util/TransactionalList$Link; <init> (Ljava/lang/Object;)V 1 -1
Lavrora/monitors/PacketMonitor; newMonitor (Lavrora/sim/Simulator;)Lavrora/monitors/Monitor; 1 -1
Lavrora/monitors/PacketMonitor$Mon; <init> (Lavrora/monitors/PacketMonitor;Lavrora/sim/Simulator;)V 1 -1
Lavrora/sim/radio/CC1000Radio; getTransmitter ()Lavrora/sim/radio/Medium$Transmitter; 1 -1
Lavrora/sim/radio/Medium$TXRX; insertProbe (Lavrora/sim/radio/Medium$Probe;)V 1 -1
Lavrora/sim/radio/Medium$Probe$List; <init> ()V 1 -1
Lavrora/sim/radio/CC1000Radio; getReceiver ()Lavrora/sim/radio/Medium$Receiver; 1 -1
Lavrora/sim/clock/RippleSynchronizer; start ()V 1 -1
Lavrora/sim/Simulation; join ()V 1 -1
Lavrora/sim/clock/RippleSynchronizer; join ()V 1 -1
Lavrora/sim/SimulatorThread; run ()V 1 -1
Lavrora/sim/Simulator; start ()V 1 -1
Lavrora/sim/AtmelInterpreter; start ()V 1 -1
Lavrora/sim/AtmelInterpreter; advanceClock (J)V 1 -1
Lavrora/sim/util/TransactionalList; isEmpty ()Z 1 -1
Lavrora/sim/clock/MainClock; advance (J)V 1 -1
Lavrora/sim/AtmelInterpreter; commit ()V 1 -1
Lavrora/sim/clock/DeltaQueue; advance (J)V 1 -1
Lavrora/arch/legacy/LegacyInstr$EOR; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/AtmelInterpreter; getRegisterByte (Lavrora/arch/legacy/LegacyRegister;)B 1 -1
Lavrora/sim/clock/DeltaQueue; advanceSlow (J)V 1 -1
Lavrora/arch/legacy/LegacyRegister; getNumber ()I 1 -1
Lavrora/sim/clock/DeltaQueue$Link; fire ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$OUT; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/AtmelInterpreter; writeIORegisterByte (IB)V 1 -1
Lavrora/sim/clock/RippleSynchronizer$NotifyEvent; fire ()V 1 -1
Lavrora/sim/AtmelInterpreter; writeSRAM (ZIB)V 1 -1
Lavrora/sim/clock/MainClock; getCount ()J 1 -1
Lavrora/sim/AtmelInterpreter; fireBeforeWrite (ZIB)V 1 -1
Lavrora/sim/AtmelInterpreter; writeVolatile (IB)B 1 -1
Lavrora/sim/clock/RippleSynchronizer$NotifyEvent; currentWaitLink ()Lavrora/sim/clock/RippleSynchronizer$WaitLink; 1 -1
Lavrora/sim/AtmelInterpreter$SREGBehavior; write (II)I 1 -1
Lavrora/sim/clock/RippleSynchronizer; access$000 (Lavrora/sim/clock/RippleSynchronizer;JLavrora/sim/clock/RippleSynchronizer$WaitLink;)Lavrora/sim/clock/RippleSynchronizer$WaitLink; 1 -1
Lavrora/sim/InterruptTable; disableAll ()V 1 -1
Lavrora/sim/AtmelInterpreter; fireAfterWrite (ZIB)V 1 -1
Lavrora/arch/legacy/LegacyInstr$LDI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/clock/RippleSynchronizer; notifyLink (Lavrora/sim/clock/RippleSynchronizer$WaitLink;)V 1 -1
Lavrora/sim/RWRegister; write (B)V 1 -1
Lavrora/sim/clock/DeltaQueue; free (Lavrora/sim/clock/DeltaQueue$Link;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$CPI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/clock/DeltaQueue$Link; add (Lavrora/sim/Simulator$Event;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$CPC; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$BRNE; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$ELPMPI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/AtmelInterpreter; getRegisterWord (Lavrora/arch/legacy/LegacyRegister;)I 1 -1
Lavrora/arch/legacy/LegacyRegister; nextRegister ()Lavrora/arch/legacy/LegacyRegister; 1 -1
Lcck/util/Arithmetic; uword (BB)C 1 -1
Lavrora/sim/AtmelInterpreter; getIORegisterByte (I)B 1 -1
Lavrora/sim/AtmelInterpreter; readSRAM (ZI)B 1 -1
Lavrora/sim/AtmelInterpreter; fireBeforeRead (ZI)V 1 -1
Lavrora/sim/AtmelInterpreter; readVolatile (I)B 1 -1
Lavrora/sim/AtmelInterpreter$IORegBehavior; read (I)I 1 -1
Lavrora/sim/RWRegister; read ()B 1 -1
Lavrora/sim/AtmelInterpreter; fireAfterRead (ZIB)V 1 -1
Lavrora/sim/AtmelInterpreter; getFlashByte (I)B 1 -1
Lavrora/sim/Segment; read (I)B 1 -1
Lavrora/sim/Segment; checked_read (I)B 1 -1
Lavrora/sim/Segment; direct_read (I)B 1 -1
Lavrora/sim/AtmelInterpreter; writeRegisterWord (Lavrora/arch/legacy/LegacyRegister;I)V 1 -1
Lavrora/arch/legacy/LegacyInstr$STPI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/AtmelInterpreter; writeDataByte (IB)V 1 -1
Lavrora/arch/legacy/LegacyInstr$SBI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/AtmelInterpreter; setIORegBit (IIZ)V 1 -1
Lcck/util/Arithmetic; setBit (BIZ)B 1 -1
Lcck/util/Arithmetic; setBit (BI)B 1 -1
Lavrora/sim/mcu/ATMegaFamily$DirectionRegister; write (B)V 1 -1
Lcck/util/Arithmetic; getBit (BI)Z 1 -1
Lavrora/sim/mcu/DefaultMCU$Pin; setOutputDir (Z)V 1 -1
Lavrora/sim/mcu/DefaultMCU$Pin; write (Z)V 1 -1
Lavrora/sim/mcu/DefaultMCU$Pin; printWrite (Z)V 1 -1
Lavrora/sim/mcu/DefaultMCU; access$000 (Lavrora/sim/mcu/DefaultMCU;)Z 1 -1
Lavrora/sim/platform/LED; write (Z)V 1 -1
Lavrora/sim/FiniteStateMachine; transition (I)V 1 -1
Lavrora/sim/FiniteStateMachine; fireBefore (Lavrora/sim/util/MulticastFSMProbe;II)V 1 -1
Lavrora/sim/util/MulticastFSMProbe; fireBeforeTransition (II)V 1 -1
Lavrora/monitors/LEDMonitor$Mon; fireBeforeTransition (II)V 1 -1
Lavrora/sim/FiniteStateMachine; fireAfter (Lavrora/sim/util/MulticastFSMProbe;II)V 1 -1
Lavrora/sim/util/MulticastFSMProbe; fireAfterTransition (II)V 1 -1
Lavrora/monitors/LEDMonitor$Mon; fireAfterTransition (II)V 1 -1
Lavrora/sim/output/SimPrinter; getBuffer (I)Ljava/lang/StringBuffer; 1 -1
Lavrora/sim/util/SimUtil; getIDTimeString (Ljava/lang/StringBuffer;Lavrora/sim/Simulator;)V 1 -1
Lavrora/sim/Simulator; getID ()I 1 -1
Lavrora/sim/util/SimUtil; toIDTimeString (Ljava/lang/StringBuffer;ILavrora/sim/clock/Clock;)V 1 -1
Lcck/text/StringUtil; justify (ZLjava/lang/StringBuffer;JI)V 1 -1
Lcck/text/StringUtil; justify (ZLjava/lang/StringBuffer;Ljava/lang/String;I)V 1 -1
Lcck/text/StringUtil; space (Ljava/lang/StringBuffer;I)V 1 -1
Lavrora/sim/platform/LED; getState ()I 1 -1
Lavrora/sim/FiniteStateMachine; getCurrentState ()I 1 -1
Lcck/text/Terminal; append (ILjava/lang/StringBuffer;Ljava/lang/String;)V 1 -1
Lavrora/sim/output/SimPrinter; printBuffer (Ljava/lang/StringBuffer;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$CBI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lcck/util/Arithmetic; clearBit (BI)B 1 -1
Lavrora/sim/platform/sensors/AccelSensor$OnPin; write (Z)V 1 -1
Lavrora/sim/platform/sensors/AccelSensor; access$000 (Lavrora/sim/platform/sensors/AccelSensor;)I 1 -1
Lavrora/sim/platform/sensors/AccelSensor; state ()I 1 -1
Lavrora/sim/platform/sensors/LightSensor$OnPin; write (Z)V 1 -1
Lavrora/sim/platform/sensors/LightSensor; access$000 (Lavrora/sim/platform/sensors/LightSensor;)I 1 -1
Lavrora/sim/platform/sensors/LightSensor; state ()I 1 -1
Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface$PALEOutput; write (Z)V 1 -1
Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface$PDATAOutput; write (Z)V 1 -1
Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface$PCLKOutput; write (Z)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$PortRegister; write (B)V 1 -1
Lavrora/sim/platform/ExternalFlash$PA3Output; write (Z)V 1 -1
Lavrora/sim/platform/ExternalFlash; access$100 (Lavrora/sim/platform/ExternalFlash;)Z 1 -1
Lavrora/sim/platform/ExternalFlash; access$000 (Lavrora/sim/platform/ExternalFlash;Ljava/lang/String;)V 1 -1
Lavrora/sim/platform/ExternalFlash; echo (Ljava/lang/String;)V 1 -1
Lavrora/sim/platform/ExternalFlash; access$102 (Lavrora/sim/platform/ExternalFlash;Z)Z 1 -1
Lavrora/sim/platform/ExternalFlash$PD3Output; write (Z)V 1 -1
Lavrora/sim/platform/ExternalFlash; access$1702 (Lavrora/sim/platform/ExternalFlash;Z)Z 1 -1
Lavrora/sim/platform/ExternalFlash$PD5Output; write (Z)V 1 -1
Lavrora/sim/platform/ExternalFlash; access$1800 (Lavrora/sim/platform/ExternalFlash;)Z 1 -1
Lavrora/sim/platform/ExternalFlash; access$200 (Lavrora/sim/platform/ExternalFlash;)I 1 -1
Lavrora/sim/platform/ExternalFlash; access$1172 (Lavrora/sim/platform/ExternalFlash;I)S 1 -1
Lavrora/sim/platform/ExternalFlash; access$500 (Lavrora/sim/platform/ExternalFlash;)D 1 -1
Lavrora/sim/clock/Clock; millisToCycles (D)J 1 -1
Lavrora/sim/platform/ExternalFlash$Delay; <init> (Lavrora/sim/platform/ExternalFlash;)V 1 -1
Lavrora/sim/platform/ExternalFlash; access$202 (Lavrora/sim/platform/ExternalFlash;I)I 1 -1
Lavrora/sim/platform/ExternalFlash; access$1302 (Lavrora/sim/platform/ExternalFlash;I)I 1 -1
Lavrora/sim/platform/ExternalFlash; access$302 (Lavrora/sim/platform/ExternalFlash;I)I 1 -1
Lavrora/sim/platform/ExternalFlash; access$1402 (Lavrora/sim/platform/ExternalFlash;S)S 1 -1
Lavrora/sim/platform/ExternalFlash; access$1502 (Lavrora/sim/platform/ExternalFlash;Z)Z 1 -1
Lavrora/sim/platform/ExternalFlash; access$1602 (Lavrora/sim/platform/ExternalFlash;B)B 1 -1
Lavrora/sim/platform/ExternalFlash$Delay; fire ()V 1 -1
Lavrora/sim/platform/ExternalFlash; access$1176 (Lavrora/sim/platform/ExternalFlash;I)S 1 -1
Lavrora/arch/legacy/LegacyInstr$SUBI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$BRCS; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$STS; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$CALL; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/AtmelInterpreter$SREGBehavior; read (I)I 1 -1
Lavrora/sim/AtmelInterpreter; getSP ()I 1 -1
Lavrora/arch/legacy/LegacyInstr$CLI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/AtmelInterpreter; setSP (I)V 1 -1
Lavrora/arch/legacy/LegacyInstr$MOV; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$ANDI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$MaskRegister; write (B)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$MaskRegister; setEnabled (IZ)V 1 -1
Lavrora/sim/AtmelInterpreter; setEnabled (IZ)V 1 -1
Lavrora/sim/InterruptTable; disable (I)V 1 -1
Lavrora/arch/legacy/LegacyInstr$ORI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$Timer0$ASSRRegister; write (B)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$Timer0$ASSRRegister; decode (B)V 1 -1
Lavrora/sim/mcu/Timer8Bit$ControlRegister; write (B)V 1 -1
Lavrora/sim/state/RegisterUtil$PermutedView; getValue ()I 1 -1
Lavrora/sim/state/RegisterUtil$BitRangeView; getValue ()I 1 -1
Lavrora/sim/clock/DerivedClock; insertEvent (Lavrora/sim/Simulator$Event;J)V 1 -1
Lavrora/sim/mcu/Timer8Bit$TCNTnRegister; write (B)V 1 -1
Lavrora/sim/mcu/Timer8Bit$BufferedRegister; write (B)V 1 -1
Lavrora/sim/mcu/Timer8Bit$BufferedRegister; flush ()V 1 -1
Lavrora/sim/InterruptTable; enable (I)V 1 -1
Lavrora/arch/legacy/LegacyInstr$RET; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/AtmelInterpreter; popByte ()B 1 -1
Lavrora/sim/AtmelInterpreter; getDataByte (I)B 1 -1
Lavrora/arch/legacy/LegacyInstr$MOVW; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$ADD; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/AtmelInterpreter; getRegisterUnsigned (Lavrora/arch/legacy/LegacyRegister;)I 1 -1
Lavrora/arch/legacy/LegacyInstr$ADC; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$SBCI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$STD; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$ADIW; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$BRLT; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$LDS; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$LPMD; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/mcu/SPI$SPCRReg; write (B)V 1 -1
Lavrora/sim/mcu/SPI$SPCRReg; decode (B)V 1 -1
Lavrora/sim/state/RegisterUtil$BoolView; getValue ()Z 1 -1
Lavrora/sim/mcu/SPI$SPSReg; clearSPIF ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$SBRS; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface; access$200 (Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface;)V 1 -1
Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface; clockInBit ()V 1 -1
Lavrora/sim/AtmelInterpreter; getInstrSize (I)I 1 -1
Lavrora/sim/AtmelInterpreter; getInstr (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/sim/util/MulticastFSMProbe; <init> ()V 3 0
Lavrora/sim/CodeSegment; readInstr (I)Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/arch/legacy/LegacyInstr; asInstr ()Lavrora/arch/legacy/LegacyInstr; 1 -1
Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface; inputWriteBit ()V 1 -1
Lavrora/sim/radio/CC1000Radio$MainRegister; decode (B)V 1 -1
Lavrora/sim/radio/Medium$Receiver; endReceive ()V 1 -1
Lavrora/sim/clock/MainClock; removeEvent (Lavrora/sim/Simulator$Event;)V 1 -1
Lavrora/sim/clock/DeltaQueue; removeEvent (Lavrora/sim/Simulator$Event;)V 1 -1
Lavrora/sim/clock/DeltaQueue$Link; remove (Lavrora/sim/Simulator$Event;)V 1 -1
Lavrora/sim/radio/Medium$Transmitter; endTransmit ()V 1 -1
Lavrora/sim/radio/CC1000Radio$SPITicker; deactivate ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$NOP; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$SBIW; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$CP; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/mcu/Timer8Bit$Mode_CTC; fire ()V 1 -1
Lavrora/sim/mcu/Timer8Bit; access$000 (Lavrora/sim/mcu/Timer8Bit;I)V 1 -1
Lavrora/sim/mcu/Timer8Bit; tickerStart (I)V 1 -1
Lavrora/sim/mcu/Timer8Bit$BufferedRegister; read ()B 1 -1
Lavrora/sim/mcu/Timer8Bit; access$100 (Lavrora/sim/mcu/Timer8Bit;Lavrora/sim/Simulator$Event;I)V 1 -1
Lavrora/sim/mcu/Timer8Bit; tickerFinish (Lavrora/sim/Simulator$Event;I)V 1 -1
Lavrora/sim/radio/CC1000Radio$PA_POWRegister; decode (B)V 1 -1
Lavrora/sim/radio/CC1000Radio$Modem2Register; decode (B)V 1 -1
Lavrora/sim/radio/CC1000Radio$Modem1Register; decode (B)V 1 -1
Lavrora/sim/radio/CC1000Radio$FSCTRLRegister; decode (B)V 1 -1
Lavrora/arch/legacy/LegacyInstr$BRGE; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$LDPI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/radio/CC1000Radio$CurrentRegister; decode (B)V 1 -1
Lavrora/sim/radio/CC1000Radio$FrontEndRegister; decode (B)V 1 -1
Lavrora/sim/radio/CC1000Radio$PLLRegister; decode (B)V 1 -1
Lavrora/sim/radio/CC1000Radio$MatchRegister; decode (B)V 1 -1
Lavrora/sim/radio/CC1000Radio$DummyRegister; decode (B)V 1 -1
Lavrora/sim/radio/Medium$Receiver; beginReceive (D)V 1 -1
Lavrora/sim/radio/CC1000Radio$SPITicker; activate ()V 1 -1
Lavrora/sim/radio/CC1000Radio$CALRegister; decode (B)V 1 -1
Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface; outputReadBit ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$SBIC; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/AtmelInterpreter; getIORegBit (II)Z 1 -1
Lavrora/sim/mcu/ATMegaFamily$PinRegister; read ()B 1 -1
Lavrora/sim/mcu/DefaultMCU$Pin; read ()Z 1 -1
Lavrora/sim/mcu/DefaultMCU$Pin; printRead (Z)V 1 -1
Lavrora/sim/platform/ExternalFlash$PD2Input; read ()Z 1 -1
Lavrora/sim/platform/ExternalFlash; access$2400 (Lavrora/sim/platform/ExternalFlash;)Z 1 -1
Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface$PDATAInput; read ()Z 1 -1
Lavrora/arch/legacy/LegacyInstr$AND; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$BREQ; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/clock/DeltaQueue; access$100 (Lavrora/sim/clock/DeltaQueue;Lavrora/sim/clock/DeltaQueue$EventList;)V 1 -1
Lavrora/sim/clock/DeltaQueue; free (Lavrora/sim/clock/DeltaQueue$EventList;)V 1 -1
Lavrora/sim/radio/CC1000Radio; getPower ()D 1 -1
Lavrora/sim/radio/CC1000Radio$PA_POWRegister; getPower ()I 1 -1
Lavrora/sim/radio/CC1000Radio; getFrequency ()D 1 -1
Lavrora/sim/radio/Medium$Transmitter; beginTransmit (DD)V 1 -1
Lavrora/sim/radio/Medium; newTransmission (Lavrora/sim/radio/Medium$Transmitter;DD)Lavrora/sim/radio/Medium$Transmission; 1 -1
Lavrora/sim/radio/Medium$Transmission; <clinit> ()V 1 -1
Lavrora/sim/radio/Medium$Transmission; <init> (Lavrora/sim/radio/Medium;Lavrora/sim/radio/Medium$Transmitter;DD)V 1 -1
Lavrora/sim/radio/Medium$TXRX; getBitNum (J)J 1 -1
Lcck/util/Arithmetic; roundup (II)I 1 -1
Lavrora/sim/radio/Medium$Transmitter$Ticker; fire ()V 1 -1
Lavrora/sim/radio/CC1000Radio$Transmitter; nextByte ()B 1 -1
Lavrora/sim/radio/Medium$Probe$List; fireBeforeTransmit (Lavrora/sim/radio/Medium$Transmitter;B)V 1 -1
Lavrora/sim/util/TransactionalList; beginTransaction ()V 1 -1
Lavrora/monitors/PacketMonitor$Mon; fireBeforeTransmit (Lavrora/sim/radio/Medium$Transmitter;B)V 1 -1
Lavrora/monitors/PacketMonitor$Mon; append (C)V 1 -1
Lavrora/sim/util/TransactionalList; endTransaction ()V 1 -1
Lavrora/sim/radio/CC1000Radio$LockRegister; decode (B)V 1 -1
Lavrora/sim/mcu/ADC$ControlRegister; write (B)V 1 -1
Lavrora/sim/mcu/ADC$ControlRegister; stopConversion ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$MUL; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$PUSH; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/mcu/USART$UBRRnHReg; write (B)V 1 -1
Lavrora/arch/legacy/LegacyInstr$BRCC; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/mcu/USART; updatePeriod ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$DEC; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$ST; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/mcu/USART$ControlRegisterA; write (B)V 1 -1
Lavrora/arch/legacy/LegacyInstr$BRPL; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$InterruptFlag; sync ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$SBRC; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/InterruptTable; unpost (I)V 1 -1
Lavrora/arch/legacy/LegacyInstr$OR; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/mcu/SPI; newFrame (B)Lavrora/sim/mcu/SPI$Frame; 1 -1
Lavrora/sim/mcu/SPI; exchange (Lavrora/sim/mcu/SPI$Frame;)Lavrora/sim/mcu/SPI$Frame; 1 -1
Lavrora/sim/mcu/SPI; receive (Lavrora/sim/mcu/SPI$Frame;)V 1 -1
Lavrora/sim/mcu/SPI; postSPIInterrupt ()V 1 -1
Lavrora/sim/mcu/SPI$SPSReg; setSPIF ()V 1 -1
Lavrora/sim/radio/Medium$Transmission; end ()V 1 -1
Lavrora/sim/radio/Medium$Probe$List; fireBeforeTransmitEnd (Lavrora/sim/radio/Medium$Transmitter;)V 1 -1
Lavrora/monitors/PacketMonitor$Mon; fireBeforeTransmitEnd (Lavrora/sim/radio/Medium$Transmitter;)V 1 -1
Lavrora/monitors/PacketMonitor$Mon; renderPacket (Ljava/lang/String;)Ljava/lang/StringBuffer; 1 -1
Lavrora/monitors/PacketMonitor$Mon; renderByte (ICZLjava/lang/StringBuffer;)Z 1 -1
Lavrora/sim/radio/Medium; isCorruptedByte (C)Z 1 -1
Lavrora/monitors/PacketMonitor$Mon; renderByte (Ljava/lang/StringBuffer;IC)V 1 -1
Lcck/text/StringUtil; toHex (JI)Ljava/lang/String; 1 -1
Lavrora/monitors/PacketMonitor$Mon; appendTime (Ljava/lang/StringBuffer;)V 1 -1
Lavrora/sim/clock/Clock; cyclesToMillis (J)D 1 -1
Lcck/text/StringUtil; toFixedFloat (FI)Ljava/lang/String; 1 -1
Lcck/text/StringUtil; appendFract (Ljava/lang/StringBuffer;DI)V 1 -1
Lavrora/monitors/PacketMonitor$Mon; clear ()V 1 -1
Lavrora/sim/clock/DeltaQueue; advance (J)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; fastLoop ()V 3 0
Lavrora/arch/legacy/LegacyInstr$SEI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/AtmelInterpreter; enableInterrupts ()V 1 -1
Lavrora/sim/InterruptTable; enableAll ()V 1 -1
Lavrora/sim/InterruptTable; getPendingInterrupts ()J 1 -1
Lcck/util/Arithmetic; lowestBit (J)I 1 -1
Lavrora/sim/InterruptTable; beforeInvoke (I)V 1 -1
Lavrora/sim/mcu/SPI; invoke (I)V 1 -1
Lavrora/sim/mcu/SPI; unpostSPIInterrupt ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$NOP; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 0
Lavrora/sim/AtmelInterpreter; getInterruptVectorAddress (I)I 1 -1
Lavrora/sim/InterruptTable; afterInvoke (I)V 1 -1
Lavrora/sim/mcu/SPI$SPDReg; read ()B 1 -1
Lavrora/sim/mcu/SPI$SPDReg; write (B)V 1 -1
Lavrora/sim/mcu/SPI$SPDReg$TransmitRegister; write (B)V 1 -1
Lavrora/sim/mcu/SPI$TransferEvent; enableTransfer ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$CPSE; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$NOP;)V 3 0
Lavrora/arch/legacy/LegacyInstr$COM; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$RETI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$SLEEP; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/mcu/AtmelMicrocontroller; sleep ()V 1 -1
Lavrora/sim/mcu/ATMega128; getSleepMode ()I 1 -1
Lcck/util/Arithmetic; getBitField (I[I)I 1 -1
Lavrora/sim/clock/MainClock; skipAhead ()V 1 -1
Lavrora/sim/clock/DeltaQueue; skipAhead ()V 1 -1
Lavrora/sim/radio/Medium$Receiver$Ticker; fire ()V 1 -1
Lavrora/sim/AtmelInterpreter; commit ()V 3 0
Lavrora/sim/radio/Medium$Receiver$Ticker; fireUnlocked (J)V 1 -1
Lavrora/sim/radio/Medium$Receiver; access$000 (Lavrora/sim/radio/Medium$Receiver;J)V 1 -1
Lavrora/sim/radio/Medium$Receiver; waitForNeighbors (J)V 1 -1
Lavrora/sim/clock/RippleSynchronizer; waitForNeighbors (J)V 1 -1
Lavrora/sim/clock/RippleSynchronizer$NotifyEvent; access$100 (Lavrora/sim/clock/RippleSynchronizer$NotifyEvent;)Lavrora/sim/clock/RippleSynchronizer$WaitLink; 1 -1
Lavrora/sim/clock/RippleSynchronizer; waitFor (JLavrora/sim/clock/RippleSynchronizer$WaitLink;)V 1 -1
Lavrora/sim/clock/RippleSynchronizer; insertLink (JLavrora/sim/clock/RippleSynchronizer$WaitLink;Lavrora/sim/clock/RippleSynchronizer$WaitLink;)Lavrora/sim/clock/RippleSynchronizer$WaitLink; 1 -1
Lavrora/sim/clock/RippleSynchronizer; waitForLink (Lavrora/sim/clock/RippleSynchronizer$WaitLink;)V 1 -1
Lavrora/sim/radio/Medium$Receiver; access$100 (Lavrora/sim/radio/Medium$Receiver;J)Lavrora/sim/radio/Medium$Transmission; 1 -1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRLT;)V 3 0
Lavrora/sim/radio/Medium$Receiver; earliestNewTransmission (J)Lavrora/sim/radio/Medium$Transmission; 1 -1
Lavrora/sim/radio/Medium$BasicArbitrator; lockTransmission (Lavrora/sim/radio/Medium$Receiver;Lavrora/sim/radio/Medium$Transmission;I)Z 1 -1
Lavrora/sim/radio/Medium$TXRX; getCycleTime (J)J 1 -1
Lavrora/arch/legacy/LegacyRegister; getNumber ()I 3 0
Lavrora/sim/mcu/AtmelMicrocontroller; wakeup ()I 1 -1
Lavrora/sim/FiniteStateMachine; getTransitionTime (II)I 1 -1
Lavrora/sim/mcu/DefaultMCU$Pin; write (Z)V 3 0
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect1186; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect46899; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect46899; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy5; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lavrora/sim/radio/CC1000Radio$CALRegister$Calibrate; fire ()V 1 -1
Lavrora/sim/radio/CC1000Radio$LockRegister; read ()B 1 -1
Lavrora/sim/mcu/DefaultMCU$Pin; printWrite (Z)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CPC;)V 3 0
Lavrora/sim/platform/ExternalFlash$PD5Output; write (Z)V 3 0
Lavrora/sim/radio/Medium$Receiver$Ticker; deliverByte (J)V 1 -1
Lavrora/sim/radio/Medium$Receiver; access$200 (Lavrora/sim/radio/Medium$Receiver;J)Ljava/util/List; 1 -1
Lavrora/sim/radio/Medium$Receiver; getIntersection (J)Ljava/util/List; 1 -1
Lavrora/sim/radio/Medium$Receiver; intersect (JLavrora/sim/radio/Medium$Transmission;)Z 1 -1
Lavrora/sim/radio/Medium$BasicArbitrator; computeReceivedPower (Lavrora/sim/radio/Medium$Transmission;Lavrora/sim/radio/Medium$Receiver;I)D 1 -1
Lavrora/sim/radio/Medium; access$300 ()D 1 -1
Lavrora/sim/radio/Medium; access$302 (D)D 1 -1
Lavrora/sim/radio/Medium$BasicArbitrator; getNoise (I)I 1 -1
Lavrora/sim/radio/Medium; access$400 ()I 1 -1
Lavrora/sim/radio/Medium; access$402 (I)I 1 -1
Lavrora/sim/radio/CC1000Radio$Receiver; setBER (D)V 1 -1
Lavrora/sim/radio/CC1000Radio$Receiver; setRSSI (D)V 1 -1
Lavrora/sim/radio/Medium$BasicArbitrator; mergeTransmissions (Lavrora/sim/radio/Medium$Receiver;Ljava/util/List;JI)C 1 -1
Lavrora/sim/radio/Medium$Transmission; getByteAtTime (J)B 1 -1
Lavrora/sim/radio/CC1000Radio$Receiver; nextByte (ZB)B 1 -1
Lavrora/sim/radio/Medium$Probe$List; fireAfterReceive (Lavrora/sim/radio/Medium$Receiver;C)V 1 -1
Lavrora/monitors/PacketMonitor$Mon; fireAfterReceive (Lavrora/sim/radio/Medium$Receiver;C)V 1 -1
Lavrora/sim/radio/Medium$Receiver$Ticker; fireLocked (J)V 1 -1
Lavrora/sim/radio/Medium$Probe$List; fireAfterReceiveEnd (Lavrora/sim/radio/Medium$Receiver;)V 1 -1
Lavrora/monitors/PacketMonitor$Mon; fireAfterReceiveEnd (Lavrora/sim/radio/Medium$Receiver;)V 1 -1
Lavrora/sim/mcu/Timer8Bit; compareMatch ()V 1 -1
Lavrora/sim/mcu/ATMegaFamily$FlagRegister; flagBit (I)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$FlagRegister; setPosted (IZ)V 1 -1
Lavrora/sim/mcu/ATMegaFamily$FlagRegister$Notification; invoke (I)V 1 -1
Lavrora/arch/legacy/LegacyInstr$LD; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$LDD; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$ICALL; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$SUB; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$SBC; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$INC; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$SEC; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/sim/mcu/ADC$ControlRegister; startConversion ()V 1 -1
Lavrora/sim/mcu/ADC$ControlRegister; insertConversion ()V 1 -1
Lavrora/sim/mcu/ADC$ControlRegister; getPrescaler ()I 1 -1
Lavrora/sim/mcu/ADC$MUXRegister; isSingleEnded ()Z 1 -1
Lavrora/sim/mcu/ADC$MUXRegister; getSingleIndex ()I 1 -1
Lavrora/sim/mcu/ADC$ControlRegister$ConversionEvent; fire ()V 1 -1
Lavrora/sim/mcu/ADC$ControlRegister; access$100 (Lavrora/sim/mcu/ADC$ControlRegister;)I 1 -1
Lavrora/sim/mcu/ADC$ControlRegister; convertVoltage ()I 1 -1
Lavrora/sim/radio/CC1000Radio$RSSIOutput; getVoltage ()F 1 -1
Lavrora/sim/radio/Medium$Receiver; isChannelClear (II)Z 1 -1
Lavrora/sim/mcu/AtmelInternalDevice; write16 (ILavrora/sim/RWRegister;Lavrora/sim/RWRegister;)V 1 -1
Lavrora/sim/mcu/ADC$ControlRegister; access$300 (Lavrora/sim/mcu/ADC$ControlRegister;)V 1 -1
Lavrora/sim/mcu/ADC$ControlRegister; invoke (I)V 1 -1
Lavrora/sim/mcu/ADC$ControlRegister; unpostADCInterrupt ()V 1 -1
Lavrora/arch/legacy/LegacyInstr$LPM; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$LSR; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lavrora/arch/legacy/LegacyInstr$ROR; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect46908; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect46908; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy6; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lavrora/sim/radio/Medium$Receiver; earliestNewTransmission (J)Lavrora/sim/radio/Medium$Transmission; 3 0
Lavrora/sim/clock/DeltaQueue; free (Lavrora/sim/clock/DeltaQueue$Link;)V 3 0
Lavrora/arch/legacy/LegacyInstr$RJMP; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 0
Lavrora/sim/clock/MainClock; advance (J)V 3 0
Lavrora/sim/AtmelInterpreter; popByte ()B 3 0
Lavrora/sim/AtmelInterpreter; pushByte (B)V 3 0
Lavrora/sim/AtmelInterpreter; fireAfterWrite (ZIB)V 3 0
Lavrora/sim/mcu/SPI; receive (Lavrora/sim/mcu/SPI$Frame;)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; runLoop ()V 3 0
Lavrora/sim/clock/RippleSynchronizer; waitForNeighbors (J)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$PUSH;)V 3 0
Lavrora/sim/RWRegister; write (B)V 3 0
Lavrora/arch/legacy/LegacyInstr$ORI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 0
Lavrora/sim/clock/MainClock; insertEvent (Lavrora/sim/Simulator$Event;J)V 3 0
Lavrora/sim/AtmelInterpreter$IORegBehavior; write (II)I 3 0
Lcck/util/Arithmetic; uword (BB)C 3 0
Lavrora/sim/AtmelInterpreter; setSP (I)V 3 0
Lavrora/sim/AtmelInterpreter; readSRAM (ZI)B 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CP;)V 3 0
Lavrora/sim/clock/DeltaQueue; newLink (Lavrora/sim/Simulator$Event;JLavrora/sim/clock/DeltaQueue$Link;)Lavrora/sim/clock/DeltaQueue$Link; 3 0
Lavrora/sim/clock/Clock; cyclesToMillis (J)D 3 0
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect3146; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect46918; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect46918; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy7; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lavrora/sim/clock/RippleSynchronizer; notifyLink (Lavrora/sim/clock/RippleSynchronizer$WaitLink;)V 3 0
Lavrora/sim/InterruptTable; beforeInvoke (I)V 3 0
Lavrora/sim/AtmelInterpreter; writeSRAM (ZIB)V 3 0
Lavrora/sim/clock/RippleSynchronizer; waitFor (JLavrora/sim/clock/RippleSynchronizer$WaitLink;)V 3 0
Lavrora/sim/clock/DeltaQueue; insertEvent (Lavrora/sim/Simulator$Event;J)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBIW;)V 3 0
Lavrora/sim/clock/RippleSynchronizer; advance (JLavrora/sim/clock/RippleSynchronizer$WaitLink;)Lavrora/sim/clock/RippleSynchronizer$WaitLink; 3 0
Lavrora/sim/clock/RippleSynchronizer; waitForNeighbors (J)V 3 2
Lavrora/arch/legacy/LegacyInterpreter; fastLoop ()V 3 2
Lavrora/sim/AtmelInterpreter; popByte ()B 3 2
Lavrora/sim/AtmelInterpreter; pushByte (B)V 3 2
Lavrora/sim/clock/MainClock; skipAhead ()V 3 1
Lavrora/sim/AtmelInterpreter; writeDataByte (IB)V 3 1
Lavrora/sim/AtmelInterpreter; getIORegisterByte (I)B 3 1
Lavrora/sim/AtmelInterpreter; writeRegisterByte (Lavrora/arch/legacy/LegacyRegister;B)V 3 1
Lavrora/sim/mcu/SPI$SPSReg; setSPIF ()V 3 1
Lavrora/sim/mcu/SPI; postSPIInterrupt ()V 3 1
Lavrora/sim/AtmelInterpreter; commit ()V 3 2
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LDS;)V 3 0
Lavrora/sim/clock/RippleSynchronizer; waitForLink (Lavrora/sim/clock/RippleSynchronizer$WaitLink;)V 3 0
Lavrora/sim/Segment; read (I)B 3 0
Lavrora/sim/state/RegisterUtil$BoolView; setValue (Z)V 3 0
Lavrora/sim/radio/Medium$BasicArbitrator; mergeTransmissions (Lavrora/sim/radio/Medium$Receiver;Ljava/util/List;JI)C 3 0
Lavrora/sim/clock/Clock; cyclesToMillis (J)D 3 2
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBCI;)V 3 0
Lavrora/sim/clock/DeltaQueue; newLink (Lavrora/sim/Simulator$Event;JLavrora/sim/clock/DeltaQueue$Link;)Lavrora/sim/clock/DeltaQueue$Link; 3 1
Lavrora/sim/AtmelInterpreter; readSRAM (ZI)B 3 2
Lavrora/sim/clock/DeltaQueue$Link; add (Lavrora/sim/Simulator$Event;)V 3 1
Lavrora/sim/AtmelInterpreter; fireBeforeRead (ZI)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LDI;)V 3 1
Lavrora/sim/InterruptTable; afterInvoke (I)V 3 0
Lavrora/sim/clock/RippleSynchronizer; notifyLink (Lavrora/sim/clock/RippleSynchronizer$WaitLink;)V 3 1
Lavrora/sim/AtmelInterpreter; writeVolatile (IB)B 3 1
Lavrora/arch/legacy/LegacyInstr$LDS; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInstr$AND; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/clock/MainClock; getCount ()J 3 1
Lavrora/arch/legacy/LegacyInstr$CPC; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/AtmelInterpreter; writeIORegisterByte (IB)V 3 1
Lavrora/sim/util/TransactionalList; isEmpty ()Z 3 1
Lavrora/sim/FiniteStateMachine; fireAfter (Lavrora/sim/util/MulticastFSMProbe;II)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$IN;)V 3 0
Lavrora/sim/AtmelInterpreter; fireBeforeWrite (ZIB)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LPMD;)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRNE;)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; invokeInterrupt (J)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$EOR;)V 3 0
Lavrora/sim/radio/Medium$Receiver$Ticker; fireUnlocked (J)V 3 0
Lavrora/sim/AtmelInterpreter; writeSRAM (ZIB)V 3 1
Lavrora/arch/legacy/LegacyInstr$LDI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$DEC;)V 3 0
Lcck/util/Arithmetic; setBit (IIZ)I 3 1
Lavrora/sim/clock/DeltaQueue; insertAfter (Lavrora/sim/clock/DeltaQueue$Link;Lavrora/sim/Simulator$Event;JLavrora/sim/clock/DeltaQueue$Link;)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$PUSH;)V 3 2
Ljava/lang/reflect/Array; getLength (Ljava/lang/Object;)I 1 -1
Lavrora/sim/radio/CC1000Radio$SPITicker; fire ()V 3 0
Lavrora/arch/legacy/LegacyInterpreter; invokeInterrupt (J)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$COM;)V 3 0
Lavrora/arch/legacy/LegacyInstr$OUT; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/AtmelInterpreter; setPosted (IZ)V 3 1
Lavrora/sim/mcu/SPI$SPDReg; read ()B 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$POP;)V 3 1
Lavrora/sim/clock/RippleSynchronizer$NotifyEvent; fire ()V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CPI;)V 3 0
Lavrora/arch/legacy/LegacyInstr$POP; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/AtmelInterpreter; getRegisterByte (Lavrora/arch/legacy/LegacyRegister;)B 3 1
Lavrora/sim/InterruptTable; enableAll ()V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$RETI;)V 3 0
Lavrora/sim/mcu/Timer8Bit$Mode_CTC; fire ()V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ORI;)V 3 0
Lavrora/sim/FiniteStateMachine; transition (I)V 3 0
Lavrora/sim/clock/MainClock; skipAhead ()V 3 2
Lavrora/arch/legacy/LegacyInstr$PUSH; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/sim/InterruptTable; getPendingInterrupts ()J 3 2
Lavrora/sim/radio/Medium$Receiver; getIntersection (J)Ljava/util/List; 3 0
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect46927; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect46927; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy8; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lavrora/sim/radio/Medium$Receiver$Ticker; deliverByte (J)V 3 0
Lavrora/sim/clock/RippleSynchronizer$NotifyEvent; fire ()V 3 1
Lavrora/arch/legacy/LegacyInstr$CPSE; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/mcu/AtmelMicrocontroller; wakeup ()I 3 1
Lavrora/sim/radio/Medium$Receiver$Ticker; fire ()V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$AND;)V 3 0
Lavrora/arch/legacy/LegacyInstr$RJMP; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/sim/clock/DeltaQueue; insertEvent (Lavrora/sim/Simulator$Event;J)V 3 1
Lavrora/arch/legacy/LegacyInstr$BRLT; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/mcu/SPI; newFrame (B)Lavrora/sim/mcu/SPI$Frame; 3 1
Lavrora/sim/InterruptTable; post (I)V 3 0
Lavrora/sim/radio/CC1000Radio$Receiver; nextByte (ZB)B 3 0
Lcck/util/Arithmetic; lowestBit (J)I 3 0
Lavrora/sim/AtmelInterpreter; setIORegBit (IIZ)V 3 1
Lavrora/sim/state/RegisterUtil$BoolView; setValue (Z)V 3 1
Lavrora/sim/radio/Medium$Receiver; earliestNewTransmission (J)Lavrora/sim/radio/Medium$Transmission; 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CPSE;)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CPC;)V 3 1
Lavrora/sim/mcu/Timer8Bit$Mode_CTC; fire ()V 3 1
Lavrora/sim/radio/Medium$Receiver; getIntersection (J)Ljava/util/List; 3 1
Lavrora/arch/legacy/LegacyInterpreter; sleepLoop ()V 3 1
Lavrora/arch/legacy/LegacyInstr$CPI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LDS;)V 3 1
Lavrora/sim/mcu/SPI$SPDReg; write (B)V 3 1
Lavrora/sim/mcu/SPI$SPSReg; clearSPIF ()V 3 1
Lavrora/sim/radio/Medium$Receiver; waitForNeighbors (J)V 3 1
Lavrora/sim/clock/DeltaQueue$Link; fire ()V 3 1
Lavrora/sim/radio/Medium$Receiver$Ticker; fireLocked (J)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$MOV;)V 3 0
Lorg/dacapo/harness/TeeOutputStream; write (I)V 3 0
Lavrora/sim/radio/Medium$TXRX; getBitNum (J)J 3 1
Lavrora/sim/mcu/ATMegaFamily$PortRegister; write (B)V 3 1
Lavrora/sim/radio/Medium$Receiver$Ticker; fire ()V 3 1
Lavrora/arch/legacy/LegacyInstr$SBIW; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/AtmelInterpreter$SREGBehavior; write (II)I 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$EOR;)V 3 1
Lavrora/arch/legacy/LegacyInstr$MOV; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/AtmelInterpreter; disableInterrupts ()V 3 1
L$Proxy1; arguments ()[I 1 -1
Lavrora/sim/FiniteStateMachine; transition (I)V 3 1
Lavrora/arch/legacy/LegacyRegister; nextRegister ()Lavrora/arch/legacy/LegacyRegister; 3 1
Lavrora/arch/legacy/LegacyInstr$EOR; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/clock/DeltaQueue; newEventList (Lavrora/sim/Simulator$Event;Lavrora/sim/clock/DeltaQueue$EventList;)Lavrora/sim/clock/DeltaQueue$EventList; 3 0
Lavrora/sim/AtmelInterpreter$SREGBehavior; read (I)I 3 0
Lavrora/arch/legacy/LegacyInstr$BRNE; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lcck/util/Arithmetic; getBit (II)Z 3 1
Lavrora/sim/output/SimPrinter; printBuffer (Ljava/lang/StringBuffer;)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CALL;)V 3 1
Lcck/util/Arithmetic; getBit (BI)Z 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBRS;)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SUBI;)V 3 0
Lavrora/sim/clock/DeltaQueue; newEventList (Lavrora/sim/Simulator$Event;Lavrora/sim/clock/DeltaQueue$EventList;)Lavrora/sim/clock/DeltaQueue$EventList; 3 1
Lcck/util/Arithmetic; getBitField (I[I)I 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$OUT;)V 3 0
Lavrora/sim/clock/DeltaQueue; advanceSlow (J)V 3 0
Lavrora/sim/radio/Medium$Receiver$Ticker; fire ()V 3 2
Lavrora/sim/radio/Medium$Transmitter$Ticker; fire ()V 3 0
Lavrora/sim/radio/CC1000Radio$SPITicker; fire ()V 3 1
Lavrora/arch/legacy/LegacyInstr$POP; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/arch/legacy/LegacyInstr$LDS; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lcck/util/Arithmetic; setBit (JIZ)J 3 1
Lavrora/arch/legacy/LegacyInstr$NOP; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ADC;)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; low (I)B 3 2
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRGE;)V 3 0
Lavrora/sim/InterruptTable; beforeInvoke (I)V 3 1
Lavrora/sim/mcu/SPI; unpostSPIInterrupt ()V 3 1
Lcck/text/Terminal; append (ILjava/lang/StringBuffer;Ljava/lang/String;)V 3 0
Lavrora/sim/AtmelInterpreter; getRegisterUnsigned (Lavrora/arch/legacy/LegacyRegister;)I 3 1
Lavrora/arch/legacy/LegacyInstr$STS; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInstr$ADD; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/mcu/AtmelMicrocontroller; sleep ()V 3 1
Lavrora/monitors/PacketMonitor$Mon; append (C)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ADD;)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$IN;)V 3 1
Lavrora/arch/legacy/LegacyInstr$SLEEP; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInstr$RET; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lcck/util/Arithmetic; lowestBit (J)I 3 1
Lavrora/monitors/PacketMonitor$Mon; renderByte (Ljava/lang/StringBuffer;IC)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$OUT;)V 3 1
Lavrora/arch/legacy/LegacyInstr$ST; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInstr$SUBI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LDD;)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ANDI;)V 3 0
Lavrora/sim/clock/DerivedClock; insertEvent (Lavrora/sim/Simulator$Event;J)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$DEC;)V 3 1
Lavrora/sim/AtmelInterpreter$IORegBehavior; read (I)I 3 1
Lavrora/sim/util/TransactionalList; endTransaction ()V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBIW;)V 3 1
Lavrora/sim/radio/Medium$Probe$List; fireAfterReceiveEnd (Lavrora/sim/radio/Medium$Receiver;)V 3 0
Lavrora/arch/legacy/LegacyInstr$ORI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lcck/text/StringUtil; convertToHex (JII[C[C)Ljava/lang/String; 3 0
Lavrora/monitors/PacketMonitor$Mon; renderByte (ICZLjava/lang/StringBuffer;)Z 3 0
Lavrora/sim/radio/Medium$Receiver$Ticker; fireLocked (J)V 3 2
Lavrora/arch/legacy/LegacyInterpreter; sleepLoop ()V 3 2
Lavrora/sim/AtmelInterpreter; enableInterrupts ()V 3 1
Lavrora/sim/util/ClockCycleTimeout; fire ()V 1 -1
Lavrora/sim/Simulator; getState ()Lavrora/sim/State; 1 -1
Lavrora/sim/AtmelInterpreter$StateImpl; getPC ()I 1 -1
Lavrora/actions/SimAction$TimeoutException; <init> (ILavrora/sim/State;JLjava/lang/String;)V 1 -1
Lavrora/sim/clock/RippleSynchronizer; removeNode (Lavrora/sim/Simulation$Node;)V 1 -1
Lavrora/actions/SimAction; exitSimulation (Ljava/lang/Throwable;)V 1 -1
Lavrora/actions/SimAction; report (Ljava/lang/Throwable;)V 1 -1
Lcck/text/TermUtil; printSeparator ()V 1 -1
Lavrora/actions/SimAction; reportTime (Lavrora/sim/Simulation;JZ)V 1 -1
Lavrora/sim/Simulation; getNodeIterator ()Ljava/util/Iterator; 1 -1
Lavrora/sim/Simulation$Iter; <init> (Lavrora/sim/Simulation;)V 1 -1
Lavrora/sim/Simulation$Iter; scan ()V 1 -1
Lavrora/sim/Simulation$Iter; hasNext ()Z 1 -1
Lavrora/sim/Simulation$Iter; next ()Ljava/lang/Object; 1 -1
Lcck/text/TermUtil; reportQuantity (Ljava/lang/String;JLjava/lang/String;)V 1 -1
Lcck/text/TermUtil; reportQuantity (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lcck/text/Terminal; printBrightCyan (Ljava/lang/String;)V 1 -1
Lavrora/actions/SimAction; reportMonitors (Lavrora/sim/Simulation;)V 1 -1
Lavrora/sim/Simulation$Node; getMonitors ()Ljava/util/List; 1 -1
Lavrora/monitors/LEDMonitor$Mon; report ()V 1 -1
Lavrora/monitors/PacketMonitor$Mon; report ()V 1 -1
Lcck/text/TermUtil; printThinSeparator ()V 1 -1
Lcck/text/StringUtil; rightJustify (JI)Ljava/lang/String; 1 -1
Lcck/text/StringUtil; justify (ZJI)Ljava/lang/String; 1 -1
Lcck/text/StringUtil; leftJustify (JI)Ljava/lang/String; 1 -1
Lorg/dacapo/harness/Benchmark; stopIteration ()V 1 -1
Lorg/dacapo/harness/Benchmark; revertClassLoader ()V 1 -1
Lorg/dacapo/harness/TeePrintStream; closeLog ()V 1 -1
Lorg/dacapo/harness/TeeOutputStream; closeLog ()V 1 -1
LMMTkCallback; stop ()V 1 -1
Lorg/dacapo/harness/Callback; stop ()V 1 -1
Lorg/dacapo/harness/Callback; stop (Z)V 1 -1
Lorg/dacapo/harness/Benchmark; validate (Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config; getOutputs (Ljava/lang/String;)Ljava/util/Set; 1 -1
Lorg/dacapo/parser/Config; hasDigest (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config$OutputFile; hasDigest ()Z 1 -1
Lorg/dacapo/parser/Config; getDigest (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; isTextFile (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config; filterScratch (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/harness/FileDigest; get (Ljava/lang/String;ZZLjava/io/File;)[B 1 -1
Lorg/dacapo/harness/FileDigest; getText (Ljava/io/File;ZLjava/io/File;)[B 1 -1
Lorg/dacapo/harness/Digest; create ()Ljava/security/MessageDigest; 1 -1
Ljava/security/Security; <clinit> ()V 1 -1
Ljava/security/Security; loadProviders (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lgnu/javax/crypto/jce/GnuCrypto; <init> ()V 1 -1
Lgnu/javax/crypto/jce/GnuCrypto$1; <init> (Lgnu/javax/crypto/jce/GnuCrypto;)V 1 -1
Lgnu/javax/crypto/jce/GnuCrypto$1; run ()Ljava/lang/Object; 1 -1
Lgnu/javax/crypto/jce/GnuSasl; <init> ()V 1 -1
Lgnu/javax/crypto/jce/GnuSasl$1; <init> (Lgnu/javax/crypto/jce/GnuSasl;)V 1 -1
Lgnu/javax/crypto/jce/GnuSasl$1; run ()Ljava/lang/Object; 1 -1
Lgnu/javax/net/ssl/provider/Jessie; <init> ()V 1 -1
Lgnu/javax/net/ssl/provider/Jessie$1; <init> (Lgnu/javax/net/ssl/provider/Jessie;)V 1 -1
Lgnu/javax/net/ssl/provider/Jessie$1; run ()Ljava/lang/Object; 1 -1
Lgnu/javax/security/auth/callback/GnuCallbacks; <init> ()V 1 -1
Lgnu/javax/security/auth/callback/GnuCallbacks$1; <init> (Lgnu/javax/security/auth/callback/GnuCallbacks;)V 1 -1
Lgnu/javax/security/auth/callback/GnuCallbacks$1; run ()Ljava/lang/Object; 1 -1
Ljava/security/Security; getProviders ()[Ljava/security/Provider; 1 -1
Lgnu/java/security/Engine; <clinit> ()V 1 -1
Lgnu/java/security/Engine; getInstance (Ljava/lang/String;Ljava/lang/String;Ljava/security/Provider;)Ljava/lang/Object; 1 -1
Lgnu/java/security/Engine; getInstance (Ljava/lang/String;Ljava/lang/String;Ljava/security/Provider;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lgnu/java/security/Engine; getCompatibleConstructor (Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/reflect/Constructor; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect39442; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect39442; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lgnu/java/security/jce/hash/Sha160Spi; <init> ()V 1 -1
Lgnu/java/security/jce/hash/MessageDigestAdapter; <init> (Ljava/lang/String;)V 1 -1
Lgnu/java/security/hash/HashFactory; getInstance (Ljava/lang/String;)Lgnu/java/security/hash/IMessageDigest; 1 -1
Lgnu/java/security/hash/Sha160; <clinit> ()V 1 -1
Lgnu/java/security/hash/Sha160; <init> ()V 1 -1
Lgnu/java/security/hash/BaseHash; <init> (Ljava/lang/String;II)V 1 -1
Lgnu/java/security/hash/Sha160; resetContext ()V 1 -1
Lgnu/java/security/hash/Sha160; selfTest ()Z 1 -1
Lgnu/java/security/hash/BaseHash; update (B)V 1 -1
Lgnu/java/security/hash/BaseHash; digest ()[B 1 -1
Lgnu/java/security/hash/Sha160; padBuffer ()[B 1 -1
Lgnu/java/security/hash/BaseHash; update ([BII)V 1 -1
Lgnu/java/security/hash/Sha160; transform ([BI)V 1 -1
Lgnu/java/security/hash/Sha160; sha (IIIII[BI)[I 1 -1
Lgnu/java/security/hash/Sha160; getResult ()[B 1 -1
Lgnu/java/security/hash/BaseHash; reset ()V 1 -1
Lgnu/java/security/util/Util; <clinit> ()V 1 -1
Lgnu/java/security/util/Util; toString ([B)Ljava/lang/String; 1 -1
Lgnu/java/security/util/Util; toString ([BII)Ljava/lang/String; 1 -1
Lgnu/java/security/jce/hash/MessageDigestAdapter; <init> (Lgnu/java/security/hash/IMessageDigest;)V 1 -1
Ljava/security/DummyMessageDigest; <init> (Ljava/security/MessageDigestSpi;Ljava/lang/String;)V 1 -1
Ljava/security/DummyMessageDigest; engineDigest ()[B 1 -1
Lgnu/java/security/jce/hash/Sha160Spi; engineDigest ()[B 1 -1
Lgnu/java/security/jce/hash/MessageDigestAdapter; engineDigest ()[B 1 -1
Lorg/dacapo/harness/Digest; toString ([B)Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; hasLines (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config$OutputFile; hasLines ()Z 1 -1
Lorg/dacapo/parser/Config; hasBytes (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config$OutputFile; hasBytes ()Z 1 -1
Lorg/dacapo/parser/Config; checkExists (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/harness/Callback; complete (Ljava/lang/String;Z)V 1 -1
Lorg/dacapo/harness/Callback; complete (Ljava/lang/String;ZZ)V 1 -1
Lorg/dacapo/harness/Benchmark; postIteration (Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/Benchmark; postIterationCleanup (Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; isKept (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/harness/Benchmark; deleteFile (Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/Callback; runAgain ()Z 1 -1
Lorg/dacapo/harness/TeePrintStream; version ()V 1 -1
Lorg/dacapo/harness/TeeOutputStream; version ()V 1 -1
Lavrora/sim/radio/Medium$Receiver$Ticker; deliverByte (J)V 3 1
Lavrora/arch/legacy/LegacyRegister; hashCode ()I 3 1
Lavrora/arch/legacy/LegacyDisassembler; decode_SUBI_0 (I)Lavrora/arch/legacy/LegacyInstr; 3 0
Lavrora/sim/radio/Medium$Receiver; waitForNeighbors (J)V 3 2
Lavrora/arch/legacy/LegacyInstr$BREQ; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$JMP;)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$STS;)V 3 0
Lavrora/sim/radio/Medium$Transmission; getByteAtTime (J)B 3 0
Lavrora/sim/mcu/SPI$TransferEvent; enableTransfer ()V 3 0
Lavrora/sim/state/RegisterUtil$BoolView; getValue ()Z 3 1
Lavrora/arch/legacy/LegacyInstr$CLI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBC;)V 3 0
Lavrora/sim/AtmelInterpreter; writeRegisterWord (Lavrora/arch/legacy/LegacyRegister;I)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CP;)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LD;)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$AND;)V 3 1
Lavrora/sim/radio/CC1000Radio$Receiver; nextByte (ZB)B 3 1
Lavrora/sim/mcu/ADC$ControlRegister$ConversionEvent; fire ()V 3 0
Lavrora/sim/clock/RippleSynchronizer; advance (JLavrora/sim/clock/RippleSynchronizer$WaitLink;)Lavrora/sim/clock/RippleSynchronizer$WaitLink; 3 1
Lavrora/sim/platform/ExternalFlash; access$1702 (Lavrora/sim/platform/ExternalFlash;Z)Z 3 1
Lavrora/arch/legacy/LegacyInstr$DEC; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInstr$IN; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRPL;)V 3 0
Lavrora/arch/legacy/LegacyInstr$BRNE; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ROR;)V 3 0
Lavrora/sim/InterruptTable; afterInvoke (I)V 3 1
Lavrora/sim/radio/Medium$BasicArbitrator; mergeTransmissions (Lavrora/sim/radio/Medium$Receiver;Ljava/util/List;JI)C 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CPI;)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; runLoop ()V 3 1
Lavrora/sim/clock/DerivedClock; insertEvent (Lavrora/sim/Simulator$Event;J)V 3 1
Lavrora/sim/AtmelInterpreter; setEnabled (IZ)V 3 1
Lavrora/sim/InterruptTable; disable (I)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBI;)V 3 1
Lavrora/sim/clock/DeltaQueue; advanceSlow (J)V 3 1
Lavrora/arch/legacy/LegacyInstr$CALL; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/AtmelInterpreter; getInstr (I)Lavrora/arch/legacy/LegacyInstr; 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$BRCS;)V 3 0
Lavrora/arch/legacy/LegacyInstr$LDD; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/CodeSegment; readInstr (I)Lavrora/arch/legacy/LegacyInstr; 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$RETI;)V 3 1
Lavrora/arch/legacy/LegacyInstr$OUT; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/arch/legacy/LegacyInstr$COM; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/monitors/PacketMonitor$Mon; renderByte (Ljava/lang/StringBuffer;IC)V 3 1
Lavrora/sim/mcu/SPI$SPDReg$TransmitRegister; write (B)V 3 1
Lavrora/arch/legacy/LegacyInstr$CP; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/mcu/ATMegaFamily$DirectionRegister; write (B)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LSR;)V 3 0
Lavrora/arch/legacy/LegacyInstr$ICALL; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInstr$SEI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/Segment; read (I)B 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$INC;)V 3 0
Lcck/text/Terminal; append (ILjava/lang/StringBuffer;Ljava/lang/String;)V 3 1
Lavrora/monitors/PacketMonitor$Mon; renderPacket (Ljava/lang/String;)Ljava/lang/StringBuffer; 3 0
Lavrora/core/Program; writeInstr (Lavrora/arch/AbstractInstr;I)V 3 0
Lavrora/arch/legacy/LegacyInstr$CBI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$MUL;)V 3 0
Lavrora/sim/CodeSegment; load (Lavrora/core/Program;)V 3 0
Lavrora/sim/AtmelInterpreter$SREGBehavior; write (II)I 3 1
Lavrora/arch/legacy/LegacyInstr$STD; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInstr$AND; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$RET;)V 3 1
Lavrora/sim/mcu/SPI$SPCRReg; decode (B)V 3 0
Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface; clockInBit ()V 3 0
Lavrora/sim/output/SimPrinter; printBuffer (Ljava/lang/StringBuffer;)V 3 2
Lavrora/arch/legacy/LegacyInstr$EOR; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/arch/legacy/LegacyInstr$SLEEP; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ADIW;)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$STD;)V 3 0
Lavrora/monitors/PacketMonitor$Mon; renderByte (ICZLjava/lang/StringBuffer;)Z 3 1
Lavrora/arch/legacy/LegacyInterpreter; runLoop ()V 3 2
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ICALL;)V 3 0
Lavrora/arch/legacy/LegacyInstr$LPM; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$CPSE;)V 3 1
Lavrora/arch/legacy/LegacyInstr$SBCI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInstr$ANDI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInstr$CPC; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/sim/radio/CC1000Radio$CurrentRegister; decode (B)V 3 0
Lavrora/arch/legacy/LegacyInstr$JMP; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBRS;)V 3 1
Lavrora/arch/legacy/LegacyInstr$IN; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/arch/legacy/LegacyInstr$ADC; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInstr$BRPL; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/mcu/ATMegaFamily; buildPort (C)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$MOVW;)V 3 0
Lavrora/monitors/PacketMonitor$Mon; fireBeforeTransmit (Lavrora/sim/radio/Medium$Transmitter;B)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SUBI;)V 3 1
Lavrora/sim/radio/Medium$Probe$List; fireAfterReceiveEnd (Lavrora/sim/radio/Medium$Receiver;)V 3 1
Lavrora/sim/AtmelInterpreter; getRegisterWord (Lavrora/arch/legacy/LegacyRegister;)I 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$STS;)V 3 2
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$MOVW;)V 3 1
Lavrora/arch/legacy/LegacyInstr$SBI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lcck/text/StringUtil; convertToHex (JII[C[C)Ljava/lang/String; 3 1
Lavrora/sim/RWRegister; read ()B 3 2
Lavrora/arch/legacy/LegacyInstr$SBRS; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInstr$CP; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/sim/radio/CC1000Radio$SPITicker; fire ()V 3 2
Lavrora/sim/mcu/ATMegaFamily$FlagRegister; flagBit (I)V 3 1
Lavrora/arch/legacy/LegacyInstr$ROR; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInstr$MOV; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ADC;)V 3 1
Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface$PDATAOutput; write (Z)V 3 1
Lcck/text/StringUtil; space (Ljava/lang/StringBuffer;I)V 3 1
Lavrora/sim/clock/RippleSynchronizer$NotifyEvent; fire ()V 3 2
Lavrora/sim/mcu/SPI; invoke (I)V 3 2
Lavrora/arch/legacy/LegacyInstr$CBI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/arch/legacy/LegacyInstr$BRCS; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInstr$CPI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/arch/legacy/LegacyInstr$BRGE; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/AtmelInterpreter$IORegBehavior; read (I)I 3 2
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LSR;)V 3 1
Lavrora/arch/legacy/LegacyInstr$BRCC; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ADD;)V 3 1
Lavrora/sim/mcu/ADC$ControlRegister$ConversionEvent; fire ()V 3 1
Lavrora/arch/legacy/LegacyInstr$COM; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/sim/mcu/SPI$TransferEvent; enableTransfer ()V 3 1
Lavrora/arch/legacy/LegacyInstr$CALL; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/monitors/PacketMonitor$Mon; renderPacket (Ljava/lang/String;)Ljava/lang/StringBuffer; 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBCI;)V 3 1
Lavrora/sim/mcu/ADC$MUXRegister; getSingleIndex ()I 3 1
Lavrora/sim/mcu/ADC$ControlRegister; unpostADCInterrupt ()V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$OR;)V 3 0
Lcck/text/StringUtil; appendFract (Ljava/lang/StringBuffer;DI)V 3 0
Lavrora/sim/clock/MainClock; insertEvent (Lavrora/sim/Simulator$Event;J)V 3 2
Lavrora/arch/legacy/LegacyInstr$ADIW; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/mcu/AtmelMicrocontroller; wakeup ()I 3 2
Lcck/util/Arithmetic; setBit (BIZ)B 3 1
Lcck/text/StringUtil; appendFract (Ljava/lang/StringBuffer;DI)V 3 1
Lavrora/sim/radio/Medium$Transmitter$Ticker; fire ()V 3 1
Lavrora/sim/AtmelInterpreter; getInstrSize (I)I 3 1
Lavrora/sim/platform/ExternalFlash$PD3Output; write (Z)V 3 1
Lavrora/arch/legacy/LegacyInstr$LD; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/InterruptTable; enable (I)V 3 0
Lavrora/arch/legacy/LegacyInstr$CPSE; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/monitors/PacketMonitor$Mon; clear ()V 3 1
Lavrora/arch/legacy/LegacyDisassembler; decode_root0 (I)Lavrora/arch/legacy/LegacyInstr; 3 0
Lavrora/core/Program; readProgramByte (I)B 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SBRC;)V 3 0
Lavrora/sim/AtmelInterpreter; getFlashByte (I)B 3 1
Lavrora/sim/mcu/ATMegaFamily$PortRegister; write (B)V 3 2
Lavrora/arch/legacy/LegacyInstr$SBIW; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 2
Lavrora/arch/legacy/LegacyInstr$RETI; accept (Lavrora/arch/legacy/LegacyInstrVisitor;)V 3 1
Lavrora/sim/radio/CC1000Radio$SerialConfigurationInterface$PCLKOutput; write (Z)V 3 1
Lavrora/sim/AtmelInterpreter$IORegBehavior; write (II)I 3 2
Lavrora/sim/mcu/ADC$MUXRegister; isSingleEnded ()Z 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$SUB;)V 3 0
Lavrora/sim/clock/DerivedClock; insertEvent (Lavrora/sim/Simulator$Event;J)V 3 2
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect48194; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect48194; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy9; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect48202; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect48202; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy10; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/dacapo/harness/TeeOutputStream; write (I)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LDD;)V 3 1
Lavrora/sim/mcu/ADC$ControlRegister; write (B)V 3 0
LMMTkHarness; harnessBegin ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect26119; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lavrora/syntax/elf/ELFParser; disassembleSection ([BLcck/elf/ELFProgramHeaderTable$Entry32;Lavrora/core/Program;)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ROR;)V 3 1
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$ST;)V 3 0
Lavrora/arch/legacy/LegacyInterpreter; visit (Lavrora/arch/legacy/LegacyInstr$LPMD;)V 3 1
Lavrora/sim/clock/RippleSynchronizer; waitForLink (Lavrora/sim/clock/RippleSynchronizer$WaitLink;)V 3 1
Lavrora/sim/mcu/ADC$ControlRegister; write (B)V 3 1
LMMTkHarness; harnessEnd ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect26120; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/dacapo/harness/Benchmark; cleanup ()V 1 -1
Lorg/dacapo/harness/Benchmark; deleteTree (Ljava/io/File;)V 1 -1
Ljava/io/BufferedWriter; <init> (Ljava/io/Writer;)V 1 -1
Ljava/io/BufferedWriter; <init> (Ljava/io/Writer;I)V 1 -1
Ljava/io/BufferedWriter; write (Ljava/lang/String;II)V 1 -1
Ljava/io/BufferedWriter; flush ()V 1 -1
Ljava/io/BufferedWriter; localFlush ()V 1 -1
