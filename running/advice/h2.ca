Ljava/lang/ClassLoader$StaticData; <clinit> ()V 1 -1
Lgnu/java/net/loader/JarURLLoader; <init> (Ljava/net/URLClassLoader;Lgnu/java/net/loader/URLStreamHandlerCache;Ljava/net/URLStreamHandlerFactory;Ljava/net/URL;Ljava/net/URL;)V 1 -1
Lgnu/java/net/loader/JarURLLoader; <init> (Ljava/net/URLClassLoader;Lgnu/java/net/loader/URLStreamHandlerCache;Ljava/net/URLStreamHandlerFactory;Ljava/net/URL;Ljava/net/URL;Ljava/util/Set;)V 1 -1
Lgnu/java/net/loader/URLLoader; <init> (Ljava/net/URLClassLoader;Lgnu/java/net/loader/URLStreamHandlerCache;Ljava/net/URLStreamHandlerFactory;Ljava/net/URL;Ljava/net/URL;)V 1 -1
Lgnu/java/net/loader/JarURLLoader; initialize ()V 1 -1
Lgnu/java/net/IndexListParser; <init> (Ljava/util/jar/JarFile;Ljava/net/URL;Ljava/net/URL;)V 1 -1
Lgnu/java/net/IndexListParser; clearAll ()V 1 -1
Lgnu/java/net/IndexListParser; getHeaders ()Ljava/util/LinkedHashMap; 1 -1
Lgnu/java/net/loader/JarURLLoader; getClassPath ()Ljava/util/ArrayList; 1 -1
Ljava/lang/InheritableThreadLocal; newChildThread (Ljava/lang/Thread;)V 1 -1
Lgnu/java/net/loader/URLLoader; getClass (Ljava/lang/String;)Ljava/lang/Class; 1 -1
Lgnu/java/net/loader/JarURLLoader; getResource (Ljava/lang/String;)Lgnu/java/net/loader/Resource; 1 -1
Lgnu/java/net/loader/JarURLResource; <init> (Lgnu/java/net/loader/JarURLLoader;Ljava/lang/String;Ljava/util/jar/JarEntry;)V 1 -1
Lgnu/java/net/loader/Resource; <init> (Lgnu/java/net/loader/URLLoader;)V 1 -1
Lgnu/java/net/loader/JarURLResource; getInputStream ()Ljava/io/InputStream; 1 -1
Lgnu/java/net/loader/JarURLResource; getLength ()I 1 -1
Lgnu/java/net/loader/Resource; getCodeSource ()Ljava/security/CodeSource; 1 -1
Lgnu/java/net/loader/JarURLResource; getCertificates ()[Ljava/security/cert/Certificate; 1 -1
LHarness; main ([Ljava/lang/String;)V 1 -1
Lgnu/java/net/loader/Resource; getLoader ()Lgnu/java/net/loader/URLLoader; 1 -1
Lgnu/java/net/loader/JarURLLoader; getManifest ()Ljava/util/jar/Manifest; 1 -1
Lgnu/java/net/loader/URLLoader; getBaseURL ()Ljava/net/URL; 1 -1
Lorg/dacapo/harness/TestHarness; <clinit> ()V 1 -1
Lorg/dacapo/harness/TestHarness; twoDecimalPlaces ()Ljava/text/DecimalFormat; 1 -1
Ljava/text/DecimalFormat; <clinit> ()V 1 -1
Ljava/text/DecimalFormatSymbols; <init> (Ljava/util/Locale;)V 1 -1
Ljava/util/Currency; <clinit> ()V 1 -1
Ljava/util/Currency; getInstance (Ljava/lang/String;)Ljava/util/Currency; 1 -1
Ljava/util/Currency; <init> (Ljava/lang/String;)V 1 -1
Ljava/util/Currency; getInstance (Ljava/util/Locale;)Ljava/util/Currency; 1 -1
Ljava/util/Currency; <init> (Ljava/util/Locale;)V 1 -1
Ljava/util/Currency; getCurrencyCode ()Ljava/lang/String; 1 -1
Ljava/text/DecimalFormatSymbols; setCurrency (Ljava/util/Currency;)V 1 -1
Ljava/util/Currency; getSymbol (Ljava/util/Locale;)Ljava/lang/String; 1 -1
Ljava/text/DecimalFormatSymbols; safeGetChar (Ljava/util/ResourceBundle;Ljava/lang/String;C)C 1 -1
Ljava/text/DecimalFormatSymbols; safeGetString (Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Ljava/text/DecimalFormat; <init> ()V 1 -1
Ljava/text/DecimalFormat; <init> (Ljava/lang/String;)V 1 -1
Ljava/text/DecimalFormatSymbols; <init> ()V 1 -1
Ljava/text/DecimalFormat; <init> (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V 1 -1
Ljava/text/NumberFormat; <init> ()V 1 -1
Ljava/text/Format; <init> ()V 1 -1
Ljava/text/DecimalFormatSymbols; clone ()Ljava/lang/Object; 1 -1
Ljava/text/DecimalFormat; applyPatternWithSymbols (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V 1 -1
Ljava/text/DecimalFormat; setDefaultValues ()V 1 -1
Ljava/text/DecimalFormatSymbols; getMinusSign ()C 1 -1
Ljava/text/DecimalFormat; scanFix (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;IZ)I 1 -1
Ljava/text/DecimalFormatSymbols; getDecimalSeparator ()C 1 -1
Ljava/text/DecimalFormatSymbols; getPatternSeparator ()C 1 -1
Ljava/text/DecimalFormatSymbols; getGroupingSeparator ()C 1 -1
Ljava/text/DecimalFormatSymbols; getDigit ()C 1 -1
Ljava/text/DecimalFormatSymbols; getZeroDigit ()C 1 -1
Ljava/text/DecimalFormatSymbols; getPercent ()C 1 -1
Ljava/text/DecimalFormatSymbols; getPerMill ()C 1 -1
Ljava/text/DecimalFormatSymbols; getCurrencySymbol ()Ljava/lang/String; 1 -1
Ljava/text/DecimalFormat; scanNumberInteger (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;I)I 1 -1
Ljava/text/DecimalFormatSymbols; getExponential ()C 1 -1
Ljava/text/DecimalFormat; scanFractionalPortion (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;I)I 1 -1
Ljava/text/DecimalFormat; setMaximumFractionDigits (I)V 1 -1
Ljava/text/NumberFormat; setMaximumFractionDigits (I)V 1 -1
Ljava/text/NumberFormat; getMinimumFractionDigits ()I 1 -1
Ljava/text/DecimalFormat; setMinimumFractionDigits (I)V 1 -1
Ljava/text/NumberFormat; setMinimumFractionDigits (I)V 1 -1
Ljava/text/NumberFormat; getMaximumFractionDigits ()I 1 -1
Ljava/text/NumberFormat; setGroupingUsed (Z)V 1 -1
Lorg/dacapo/harness/TestHarness; main ([Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; <clinit> ()V 1 -1
Lorg/dacapo/harness/CommandLineArgs; makeOption (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/cli/Option; 1 -1
Lorg/apache/commons/cli/Option; <init> (Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V 1 -1
Lorg/apache/commons/cli/OptionValidator; validateOption (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/OptionValidator; isValidOpt (C)Z 1 -1
Lorg/apache/commons/cli/OptionValidator; isValidChar (C)Z 1 -1
Lorg/apache/commons/cli/Option; setValueSeparator (C)V 1 -1
Lorg/apache/commons/cli/Option; setArgName (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/PosixParser; <init> ()V 1 -1
Lorg/apache/commons/cli/Parser; <init> ()V 1 -1
Lorg/apache/commons/cli/Options; <init> ()V 1 -1
Lorg/dacapo/harness/CommandLineArgs; <init> ([Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/Options; addOption (Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options; 1 -1
Lorg/apache/commons/cli/Option; getKey ()Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Option; hasLongOpt ()Z 1 -1
Lorg/apache/commons/cli/Option; getLongOpt ()Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Option; isRequired ()Z 1 -1
Lorg/apache/commons/cli/Option; getDescription ()Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Parser; parse (Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine; 1 -1
Lorg/apache/commons/cli/Parser; parse (Lorg/apache/commons/cli/Options;[Ljava/lang/String;Ljava/util/Properties;Z)Lorg/apache/commons/cli/CommandLine; 1 -1
Lorg/apache/commons/cli/Options; helpOptions ()Ljava/util/List; 1 -1
Lorg/apache/commons/cli/Option; clearValues ()V 1 -1
Lorg/apache/commons/cli/Parser; setOptions (Lorg/apache/commons/cli/Options;)V 1 -1
Lorg/apache/commons/cli/Options; getRequiredOptions ()Ljava/util/List; 1 -1
Lorg/apache/commons/cli/CommandLine; <init> ()V 1 -1
Lorg/apache/commons/cli/Parser; getOptions ()Lorg/apache/commons/cli/Options; 1 -1
Lorg/apache/commons/cli/PosixParser; flatten (Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/PosixParser; init ()V 1 -1
Lorg/apache/commons/cli/PosixParser; processOptionToken (Ljava/lang/String;Z)V 1 -1
Lorg/apache/commons/cli/Options; hasOption (Ljava/lang/String;)Z 1 -1
Lorg/apache/commons/cli/Util; stripLeadingHyphens (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Options; getOption (Ljava/lang/String;)Lorg/apache/commons/cli/Option; 1 -1
Lorg/apache/commons/cli/PosixParser; gobble (Ljava/util/Iterator;)V 1 -1
Lorg/apache/commons/cli/PosixParser; processNonOptionToken (Ljava/lang/String;Z)V 1 -1
Lorg/apache/commons/cli/Parser; processOption (Ljava/lang/String;Ljava/util/ListIterator;)V 1 -1
Lorg/apache/commons/cli/Option; clone ()Ljava/lang/Object; 1 -1
Lorg/apache/commons/cli/Options; getOptionGroup (Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup; 1 -1
Lorg/apache/commons/cli/Option; hasArg ()Z 1 -1
Lorg/apache/commons/cli/Parser; processArgs (Lorg/apache/commons/cli/Option;Ljava/util/ListIterator;)V 1 -1
Lorg/apache/commons/cli/Util; stripLeadingAndTrailingQuotes (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Option; addValueForProcessing (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/Option; processValue (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/Option; hasValueSeparator ()Z 1 -1
Lorg/apache/commons/cli/Option; getValueSeparator ()C 1 -1
Lorg/apache/commons/cli/Option; add (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/Option; getValues ()[Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Option; hasNoValues ()Z 1 -1
Lorg/apache/commons/cli/CommandLine; addOption (Lorg/apache/commons/cli/Option;)V 1 -1
Lorg/apache/commons/cli/CommandLine; addArg (Ljava/lang/String;)V 1 -1
Lorg/apache/commons/cli/Parser; processProperties (Ljava/util/Properties;)V 1 -1
Lorg/apache/commons/cli/Parser; checkRequiredOptions ()V 1 -1
Lorg/apache/commons/cli/Parser; getRequiredOptions ()Ljava/util/List; 1 -1
Lorg/apache/commons/cli/CommandLine; hasOption (Ljava/lang/String;)Z 1 -1
Lorg/apache/commons/cli/CommandLine; resolveOption (Ljava/lang/String;)Lorg/apache/commons/cli/Option; 1 -1
Lorg/apache/commons/cli/Option; getOpt ()Ljava/lang/String; 1 -1
Lorg/dacapo/harness/CommandLineArgs; defineCallback ()V 1 -1
Lorg/apache/commons/cli/Option; equals (Ljava/lang/Object;)Z 1 -1
Lorg/apache/commons/cli/CommandLine; getOptionValue (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/CommandLine; getOptionValues (Ljava/lang/String;)[Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/Option; getValuesList ()Ljava/util/List; 1 -1
Lorg/dacapo/harness/Callback; <clinit> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40503; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40503; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
LMMTkCallback; <init> (Lorg/dacapo/harness/CommandLineArgs;)V 1 -1
Lorg/dacapo/harness/Callback; <init> (Lorg/dacapo/harness/CommandLineArgs;)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; getMethodology ()Lorg/dacapo/harness/CommandLineArgs$Methodology; 1 -1
Lorg/dacapo/harness/CommandLineArgs$Methodology; <clinit> ()V 1 -1
Lorg/dacapo/harness/CommandLineArgs$Methodology; <init> (Ljava/lang/String;I)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; getDebug ()Z 1 -1
LMMTkHarness; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect26119; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect26120; <init> ()V 1 -1
Lorg/dacapo/harness/CommandLineArgs; getCallback ()Lorg/dacapo/harness/Callback; 1 -1
Lorg/apache/commons/cli/CommandLine; getArgList ()Ljava/util/List; 1 -1
Lorg/dacapo/harness/CommandLineArgs; extractBenchmarkSet ()Ljava/util/List; 1 -1
Lgnu/java/net/loader/JarURLResource; getURL ()Ljava/net/URL; 1 -1
Lorg/dacapo/harness/CommandLineArgs; getScratchDir ()Ljava/lang/String; 1 -1
Lorg/apache/commons/cli/CommandLine; getOptionValue (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/dacapo/harness/TestHarness; makeCleanScratch (Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/TestHarness; rmdir (Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/Benchmark; <clinit> ()V 1 -1
Lorg/dacapo/harness/Benchmark; setCommandLineOptions (Lorg/dacapo/harness/CommandLineArgs;)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; getSilent ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getVerbose ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getPreserve ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getValidate ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getValidateOutput ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getPreIterationGC ()Z 1 -1
Lorg/dacapo/harness/CommandLineArgs; getValidationReport ()Ljava/lang/String; 1 -1
Lorg/dacapo/harness/CommandLineArgs; getThreadCount ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; <clinit> ()V 1 -1
Lorg/dacapo/parser/Config; setThreadCountOverride (I)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; benchmarks ()Ljava/lang/Iterable; 1 -1
Lorg/dacapo/harness/CommandLineArgs; getCnfOverride ()Ljava/lang/String; 1 -1
Lorg/dacapo/harness/TestHarness; <init> (Ljava/io/InputStream;)V 1 -1
Lorg/dacapo/parser/Config; parse (Ljava/io/InputStream;)Lorg/dacapo/parser/Config; 1 -1
Lorg/dacapo/parser/ConfigFile; <clinit> ()V 1 -1
Lorg/dacapo/parser/ConfigFile; jj_la1_init_0 ()V 1 -1
Lorg/dacapo/parser/ConfigFile; jj_la1_init_1 ()V 1 -1
Lorg/dacapo/parser/ConfigFile; <init> (Ljava/io/InputStream;)V 1 -1
Lorg/dacapo/parser/ConfigFile; <init> (Ljava/io/InputStream;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/SimpleCharStream; <init> (Ljava/io/InputStream;Ljava/lang/String;II)V 1 -1
Lorg/dacapo/parser/SimpleCharStream; <init> (Ljava/io/InputStream;Ljava/lang/String;III)V 1 -1
Lorg/dacapo/parser/SimpleCharStream; <init> (Ljava/io/Reader;III)V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; <clinit> ()V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; <init> (Lorg/dacapo/parser/SimpleCharStream;)V 1 -1
Lorg/dacapo/parser/Token; <init> ()V 1 -1
Lorg/dacapo/parser/ConfigFile; configFile ()Lorg/dacapo/parser/Config; 1 -1
Lorg/dacapo/parser/ConfigFile; config ()Lorg/dacapo/parser/Config; 1 -1
Lorg/dacapo/parser/ConfigFile; jj_consume_token (I)Lorg/dacapo/parser/Token; 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; getNextToken ()Lorg/dacapo/parser/Token; 1 -1
Lorg/dacapo/parser/SimpleCharStream; BeginToken ()C 1 -1
Lorg/dacapo/parser/SimpleCharStream; readChar ()C 1 -1
Lorg/dacapo/parser/SimpleCharStream; FillBuff ()V 1 -1
Lorg/dacapo/parser/SimpleCharStream; UpdateLineColumn (C)V 1 -1
Lorg/dacapo/parser/SimpleCharStream; backup (I)V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa0_0 ()I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa1_0 (J)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa2_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa3_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa4_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa5_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa6_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa7_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa8_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjStartNfaWithStates_0 (III)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveNfa_0 (II)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjFillToken ()Lorg/dacapo/parser/Token; 1 -1
Lorg/dacapo/parser/SimpleCharStream; getBeginLine ()I 1 -1
Lorg/dacapo/parser/SimpleCharStream; getBeginColumn ()I 1 -1
Lorg/dacapo/parser/SimpleCharStream; getEndLine ()I 1 -1
Lorg/dacapo/parser/SimpleCharStream; getEndColumn ()I 1 -1
Lorg/dacapo/parser/Token; newToken (ILjava/lang/String;)Lorg/dacapo/parser/Token; 1 -1
Lorg/dacapo/parser/Token; <init> (ILjava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjCheckNAdd (I)V 1 -1
Lorg/dacapo/parser/SimpleCharStream; GetImage ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; <init> (Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFile; jj_ntk ()I 1 -1
Lorg/dacapo/parser/ConfigFile; configOption (Lorg/dacapo/parser/Config;)V 1 -1
Lorg/dacapo/parser/ConfigFile; identifier ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjStartNfa_0 (IJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjStopStringLiteralDfa_0 (IJ)I 1 -1
Lorg/dacapo/parser/Config; setClass (Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa9_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa10_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjMoveStringLiteralDfa11_0 (JJ)I 1 -1
Lorg/dacapo/parser/ConfigFile; threadModel ()Lorg/dacapo/parser/Config$ThreadModel; 1 -1
Lorg/dacapo/parser/Config$ThreadModel; <clinit> ()V 1 -1
Lorg/dacapo/parser/Config$ThreadModel; <init> (Ljava/lang/String;ILjava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; setThreadModel (Lorg/dacapo/parser/Config$ThreadModel;)V 1 -1
Lorg/dacapo/parser/ConfigFile; libraries (Lorg/dacapo/parser/Config;)V 1 -1
Lorg/dacapo/parser/ConfigFile; string ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjCheckNAddStates (II)V 1 -1
Lorg/dacapo/parser/ConfigFile; unQuote (Lorg/dacapo/parser/Token;)Ljava/lang/String; 1 -1
Lorg/dacapo/parser/ConfigFileTokenManager; jjStopAtPos (II)I 1 -1
Ljava/lang/reflect/Array; newInstance (Ljava/lang/Class;I)Ljava/lang/Object; 1 -1
Lorg/dacapo/parser/Config; setLibs ([Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFile; sizeSpec (Lorg/dacapo/parser/Config;)V 1 -1
Lorg/dacapo/parser/ConfigFile; sizeClause (Lorg/dacapo/parser/Config;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; addSize (Ljava/lang/String;Ljava/util/Vector;)V 1 -1
Lorg/dacapo/parser/Config$Size; <init> (Lorg/dacapo/parser/Config;Ljava/lang/String;Ljava/util/Vector;)V 1 -1
Lorg/dacapo/parser/ConfigFile; integer ()I 1 -1
Lorg/dacapo/parser/Config; setThreadLimit (Ljava/lang/String;I)V 1 -1
Lorg/dacapo/parser/Config; getSize (Ljava/lang/String;)Lorg/dacapo/parser/Config$Size; 1 -1
Lorg/dacapo/parser/Config$Size; setThreadLimit (I)V 1 -1
Lorg/dacapo/parser/ConfigFile; outputFile (Lorg/dacapo/parser/Config;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; addOutputFile (Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config$Size; addOutputFile (Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config$OutputFile; <init> (Lorg/dacapo/parser/Config;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; setTextFile (Ljava/lang/String;Ljava/lang/String;Z)V 1 -1
Lorg/dacapo/parser/Config$Size; getOutputFile (Ljava/lang/String;)Lorg/dacapo/parser/Config$OutputFile; 1 -1
Lorg/dacapo/parser/Config; setFilterScratch (Ljava/lang/String;Ljava/lang/String;Z)V 1 -1
Lorg/dacapo/parser/ConfigFile; outputClause (Lorg/dacapo/parser/Config;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFile; hex ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/ConfigFile; unHex (Lorg/dacapo/parser/Token;)Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; setDigest (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/ConfigFile; description (Lorg/dacapo/parser/Config;)V 1 -1
Lorg/dacapo/parser/ConfigFile; descElement (Lorg/dacapo/parser/Config;)V 1 -1
Lorg/dacapo/parser/ConfigFile; descId ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; addDesc (Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/CommandLineArgs; getSize ()Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; getThreadLimit (Ljava/lang/String;)I 1 -1
Lorg/dacapo/parser/Config$Size; getThreadLimit ()I 1 -1
Lorg/dacapo/harness/CommandLineArgs; getThreadFactor ()Ljava/lang/String; 1 -1
Lorg/dacapo/harness/TestHarness; isValidSize (Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config; getSizes ()Ljava/util/Collection; 1 -1
Lorg/dacapo/harness/TestHarness; isValidThreadCount (Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config; getThreadCount (Ljava/lang/String;)I 1 -1
Lorg/dacapo/parser/Config$1; <clinit> ()V 1 -1
Lorg/dacapo/parser/Config$ThreadModel; values ()[Lorg/dacapo/parser/Config$ThreadModel; 1 -1
Lorg/dacapo/parser/Config; getThreadModel ()Lorg/dacapo/parser/Config$ThreadModel; 1 -1
Lorg/dacapo/parser/Config; getThreadFactor (Ljava/lang/String;)I 1 -1
Lorg/dacapo/parser/Config$Size; getThreadCount ()I 1 -1
Lorg/dacapo/harness/CommandLineArgs; getInformation ()Z 1 -1
Lorg/dacapo/harness/TestHarness; dump (Z)V 1 -1
Lorg/dacapo/harness/TestHarness; runBenchmark (Ljava/io/File;Ljava/lang/String;Lorg/dacapo/harness/TestHarness;)V 1 -1
Lorg/dacapo/parser/Config; printThreadModel (Ljava/io/PrintStream;Ljava/lang/String;Z)V 1 -1
Lorg/dacapo/harness/TestHarness; findClass ()Ljava/lang/Class; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40963; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect40963; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/dacapo/harness/H2; <init> (Lorg/dacapo/parser/Config;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/Benchmark; <init> (Lorg/dacapo/parser/Config;Ljava/io/File;Z)V 1 -1
Lorg/dacapo/harness/Benchmark; initialize ()V 1 -1
Lorg/dacapo/harness/Benchmark; fileIn (Ljava/io/File;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/dacapo/harness/TeePrintStream; <init> (Ljava/io/OutputStream;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/TeeOutputStream; <init> (Ljava/io/OutputStream;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/TeeOutputStream; newLog ()V 1 -1
Lorg/dacapo/harness/TeePrintStream; enableOutput (Z)V 1 -1
Lorg/dacapo/harness/TeeOutputStream; enableOutput (Z)V 1 -1
Lorg/dacapo/harness/Benchmark; prepareJars ()V 1 -1
Lorg/dacapo/harness/Benchmark; extractFileResource (Ljava/lang/String;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/Benchmark; getURL (Ljava/lang/String;)Ljava/net/URL; 1 -1
Lorg/dacapo/harness/Benchmark; fileFromInputStream (Ljava/io/InputStream;Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/DacapoClassLoader; create (Lorg/dacapo/parser/Config;Ljava/io/File;)Lorg/dacapo/harness/DacapoClassLoader; 1 -1
Lorg/dacapo/harness/DacapoClassLoader; getJars (Lorg/dacapo/parser/Config;Ljava/io/File;)[Ljava/net/URL; 1 -1
Lorg/dacapo/harness/Benchmark; getVerbose ()Z 1 -1
Lorg/dacapo/harness/DacapoClassLoader; <init> ([Ljava/net/URL;Ljava/lang/ClassLoader;)V 1 -1
Lorg/dacapo/harness/H2; prepare ()V 1 -1
Lorg/dacapo/harness/Benchmark; useBenchmarkClassLoader ()V 1 -1
Lorg/dacapo/harness/DacapoClassLoader; loadClass (Ljava/lang/String;Z)Ljava/lang/Class; 1 -1
Lorg/dacapo/h2/TPCC; <clinit> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect41108; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect41109; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect41110; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect41111; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect41112; <init> ()V 1 -1
Lorg/dacapo/harness/Benchmark; getPreserve ()Z 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect41108; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/dacapo/h2/TPCC; make (Lorg/dacapo/parser/Config;Ljava/io/File;Ljava/lang/Boolean;Ljava/lang/Boolean;)Lorg/dacapo/h2/TPCC; 1 -1
Lorg/dacapo/h2/TPCC; <init> (Lorg/dacapo/parser/Config;Ljava/io/File;ZZ)V 1 -1
Lorg/dacapo/h2/TPCCReporter; <init> ()V 1 -1
Lorg/dacapo/harness/Benchmark; revertClassLoader ()V 1 -1
Lorg/dacapo/harness/Callback; init (Lorg/dacapo/parser/Config;)V 1 -1
Lorg/dacapo/harness/Callback$1; <clinit> ()V 1 -1
Lorg/dacapo/harness/CommandLineArgs$Methodology; values ()[Lorg/dacapo/harness/CommandLineArgs$Methodology; 1 -1
Lorg/dacapo/harness/CommandLineArgs; getIterations ()I 1 -1
Lorg/dacapo/harness/Callback$Mode; <clinit> ()V 1 -1
Lorg/dacapo/harness/Callback$Mode; <init> (Ljava/lang/String;I)V 1 -1
Lorg/dacapo/harness/Benchmark; run (Lorg/dacapo/harness/Callback;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/harness/H2; prepare (Ljava/lang/String;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect41109; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/dacapo/h2/TPCC; prepare (Ljava/lang/String;)V 1 -1
Lorg/dacapo/h2/TPCC; configure ()V 1 -1
Lorg/dacapo/parser/Config; preprocessArgs (Ljava/lang/String;Ljava/io/File;)[Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; getArgs (Ljava/lang/String;)[Ljava/lang/String; 1 -1
Lorg/h2/Driver; <clinit> ()V 1 -1
Lorg/h2/Driver; <init> ()V 1 -1
Lorg/h2/Driver; load ()Lorg/h2/Driver; 1 -1
Ljava/sql/DriverManager; <clinit> ()V 1 -1
Ljava/sql/DriverManager; registerDriver (Ljava/sql/Driver;)V 1 -1
Ljava/sql/DriverManager; getDriver (Ljava/lang/String;)Ljava/sql/Driver; 1 -1
Lorg/h2/Driver; acceptsURL (Ljava/lang/String;)Z 1 -1
Lorg/dacapo/harness/H2; preIteration (Ljava/lang/String;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect41110; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/dacapo/h2/TPCC; preIteration (Ljava/lang/String;)V 1 -1
Lorg/dacapo/h2/TPCCReporter; reset ()V 1 -1
Lorg/apache/derbyTesting/system/oe/client/Submitter; <clinit> ()V 1 -1
Lorg/dacapo/h2/TPCCSubmitter; <clinit> ()V 1 -1
Lorg/dacapo/h2/TPCCSubmitter; setSeed (J)V 1 -1
Lorg/dacapo/h2/TPCC; preIterationMemoryDB ()V 1 -1
Lorg/dacapo/h2/TPCC; createSchema ()V 1 -1
Lorg/dacapo/h2/TPCC; runScript (Ljava/lang/String;)V 1 -1
Lorg/dacapo/h2/TPCC; runScript (Ljava/lang/String;Ljava/lang/String;)I 1 -1
Lorg/dacapo/h2/TPCC; getTestResource (Ljava/lang/String;)Ljava/net/URL; 1 -1
Lorg/dacapo/h2/TPCC$1; <init> (Ljava/lang/String;)V 1 -1
Lorg/dacapo/h2/TPCC$1; run ()Ljava/lang/Object; 1 -1
Lorg/dacapo/h2/TPCC; openTestResource (Ljava/net/URL;)Ljava/io/InputStream; 1 -1
Lorg/dacapo/h2/TPCC$2; <init> (Ljava/net/URL;)V 1 -1
Lorg/dacapo/h2/TPCC$2; run ()Ljava/lang/Object; 1 -1
Lorg/dacapo/h2/TPCC; getConnection ()Ljava/sql/Connection; 1 -1
Lorg/dacapo/h2/TPCC; makeConnection (Z)Ljava/sql/Connection; 1 -1
Lorg/dacapo/h2/TPCC; getDatabaseURLString (Z)Ljava/lang/String; 1 -1
Lorg/dacapo/h2/TPCC; getDatabaseName ()Ljava/lang/String; 1 -1
Lorg/h2/Driver; connect (Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection; 1 -1
Lorg/h2/message/TraceObject; <clinit> ()V 1 -1
Lorg/h2/jdbc/JdbcConnection; <init> (Ljava/lang/String;Ljava/util/Properties;)V 1 -1
Lorg/h2/engine/ConnectionInfo; <clinit> ()V 1 -1
Lorg/h2/util/New; hashSet ()Ljava/util/HashSet; 1 -1
Lorg/h2/command/dml/SetTypes; <clinit> ()V 1 -1
Lorg/h2/util/New; arrayList ()Ljava/util/ArrayList; 1 -1
Lorg/h2/command/dml/SetTypes; getTypes ()Ljava/util/ArrayList; 1 -1
Lorg/h2/constant/SysProperties; <clinit> ()V 1 -1
Lorg/h2/constant/SysProperties; getStringSetting (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/constant/SysProperties; getProperty (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/constant/SysProperties; getBooleanSetting (Ljava/lang/String;Z)Z 1 -1
Lorg/h2/constant/SysProperties; getIntSetting (Ljava/lang/String;I)I 1 -1
Lorg/h2/constant/SysProperties; getEscapeChar (Ljava/lang/String;)Ljava/lang/Character; 1 -1
Lorg/h2/util/MathUtils; nextPowerOf2 (I)I 1 -1
Lorg/h2/constant/SysProperties; getCollatorCacheSize ()I 1 -1
Lorg/h2/engine/ConnectionInfo; <init> (Ljava/lang/String;Ljava/util/Properties;)V 1 -1
Lorg/h2/engine/ConnectionInfo; readProperties (Ljava/util/Properties;)V 1 -1
Lorg/h2/util/StringUtils; toUpperEnglish (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/engine/ConnectionInfo; isKnownSetting (Ljava/lang/String;)Z 1 -1
Lorg/h2/engine/ConnectionInfo; readSettingsFromURL ()V 1 -1
Lorg/h2/util/StringUtils; arraySplit (Ljava/lang/String;CZ)[Ljava/lang/String; 1 -1
Lorg/h2/engine/ConnectionInfo; removeProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/engine/ConnectionInfo; setUserName (Ljava/lang/String;)V 1 -1
Lorg/h2/engine/ConnectionInfo; convertPasswords ()V 1 -1
Lorg/h2/engine/ConnectionInfo; removePassword ()[C 1 -1
Lorg/h2/security/SHA256; <clinit> ()V 1 -1
Lorg/h2/security/SHA256; <init> ()V 1 -1
Lorg/h2/engine/ConnectionInfo; getProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/engine/ConnectionInfo; getProperty (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/security/SHA256; getKeyPasswordHash (Ljava/lang/String;[C)[B 1 -1
Lorg/h2/security/SHA256; getHash ([BZ)[B 1 -1
Lorg/h2/security/SHA256; readInt ([BI)I 1 -1
Lorg/h2/security/SHA256; rot (II)I 1 -1
Lorg/h2/security/SHA256; writeInt ([BII)V 1 -1
Lorg/h2/engine/ConnectionInfo; parseName ()V 1 -1
Lorg/h2/jdbc/JdbcConnection; <init> (Lorg/h2/engine/ConnectionInfo;Z)V 1 -1
Lorg/h2/message/TraceObject; <init> ()V 1 -1
Lorg/h2/constant/SysProperties; getBaseDir ()Ljava/lang/String; 1 -1
Lorg/h2/jdbc/JdbcConnection; checkJavaVersion ()V 1 -1
Lorg/h2/engine/SessionRemote; <init> ()V 1 -1
Lorg/h2/engine/SessionWithState; <init> ()V 1 -1
Lorg/h2/util/ObjectArray; newInstance ()Lorg/h2/util/ObjectArray; 1 -1
Lorg/h2/util/ObjectArray; <init> (I)V 1 -1
Lorg/h2/util/ObjectArray; createArray (I)[Ljava/lang/Object; 1 -1
Lorg/h2/engine/SessionRemote; createSession (Lorg/h2/engine/ConnectionInfo;)Lorg/h2/engine/SessionInterface; 1 -1
Lorg/h2/engine/SessionRemote; <init> (Lorg/h2/engine/ConnectionInfo;)V 1 -1
Lorg/h2/engine/SessionRemote; connectEmbeddedOrServer (Z)Lorg/h2/engine/SessionInterface; 1 -1
Lorg/h2/engine/ConnectionInfo; isRemote ()Z 1 -1
Lorg/h2/util/ClassUtils; <clinit> ()V 1 -1
Lorg/h2/util/ClassUtils; loadSystemClass (Ljava/lang/String;)Ljava/lang/Class; 1 -1
Lorg/h2/engine/SessionFactoryEmbedded; <init> ()V 1 -1
Lorg/h2/engine/SessionFactoryEmbedded; createSession (Lorg/h2/engine/ConnectionInfo;)Lorg/h2/engine/SessionInterface; 1 -1
Lorg/h2/engine/Engine; <clinit> ()V 1 -1
Lorg/h2/engine/Engine; <init> ()V 1 -1
Lorg/h2/util/New; hashMap ()Ljava/util/HashMap; 1 -1
Lorg/h2/engine/Engine; getInstance ()Lorg/h2/engine/Engine; 1 -1
Lorg/h2/engine/Engine; getSession (Lorg/h2/engine/ConnectionInfo;)Lorg/h2/engine/Session; 1 -1
Lorg/h2/store/FileLock; getFileLockMethod (Ljava/lang/String;)I 1 -1
Lorg/h2/engine/Engine; openSession (Lorg/h2/engine/ConnectionInfo;)Lorg/h2/engine/Session; 1 -1
Lorg/h2/engine/ConnectionInfo; removeProperty (Ljava/lang/String;Z)Z 1 -1
Lorg/h2/engine/Engine; openSession (Lorg/h2/engine/ConnectionInfo;ZLjava/lang/String;)Lorg/h2/engine/Session; 1 -1
Lorg/h2/engine/ConnectionInfo; getName ()Ljava/lang/String; 1 -1
Lorg/h2/engine/ConnectionInfo; getProperty (Ljava/lang/String;Z)Z 1 -1
Lorg/h2/engine/ConnectionInfo; isUnnamedInMemory ()Z 1 -1
Lorg/h2/engine/Database; <init> (Ljava/lang/String;Lorg/h2/engine/ConnectionInfo;Ljava/lang/String;)V 1 -1
Lorg/h2/util/BitField; <init> ()V 1 -1
Lorg/h2/engine/Mode; <clinit> ()V 1 -1
Lorg/h2/engine/Mode; <init> (Ljava/lang/String;)V 1 -1
Lorg/h2/engine/Mode; add (Lorg/h2/engine/Mode;)V 1 -1
Lorg/h2/engine/Mode; getInstance (Ljava/lang/String;)Lorg/h2/engine/Mode; 1 -1
Lorg/h2/util/SmallLRUCache; newInstance (I)Lorg/h2/util/SmallLRUCache; 1 -1
Lorg/h2/util/SmallLRUCache; <init> (I)V 1 -1
Lorg/h2/util/TempFileDeleter; getInstance ()Lorg/h2/util/TempFileDeleter; 1 -1
Lorg/h2/util/TempFileDeleter; <init> ()V 1 -1
Lorg/h2/value/CompareMode; getInstance (Ljava/lang/String;I)Lorg/h2/value/CompareMode; 1 -1
Lorg/h2/value/CompareMode; <init> (Ljava/lang/String;I)V 1 -1
Lorg/h2/value/CompareMode; getCollator (Ljava/lang/String;)Ljava/text/Collator; 1 -1
Lorg/h2/engine/ConnectionInfo; isPersistent ()Z 1 -1
Lorg/h2/engine/ConnectionInfo; getFilePasswordHash ()[B 1 -1
Lorg/h2/engine/Database; parseDatabaseShortName ()Ljava/lang/String; 1 -1
Lorg/h2/constant/SysProperties; getPageStore ()Z 1 -1
Lorg/h2/engine/ConnectionInfo; getProperty (Ljava/lang/String;I)I 1 -1
Lorg/h2/engine/ConnectionInfo; getURL ()Ljava/lang/String; 1 -1
Lorg/h2/engine/ConnectionInfo; getDatabaseEventListenerObject ()Lorg/h2/api/DatabaseEventListener; 1 -1
Lorg/h2/engine/ConnectionInfo; removeDatabaseEventListenerObject ()V 1 -1
Lorg/h2/engine/ConnectionInfo; getProperty (ILjava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/command/dml/SetTypes; getTypeName (I)Ljava/lang/String; 1 -1
Lorg/h2/engine/ConnectionInfo; getIntProperty (II)I 1 -1
Lorg/h2/engine/Database; openDatabase (IIZ)V 1 -1
Lorg/h2/util/MemoryUtils; <clinit> ()V 1 -1
Lorg/h2/util/MemoryUtils; allocateReserveMemory ()V 1 -1
Lorg/h2/engine/Database; open (II)V 1 -1
Lorg/h2/message/TraceSystem; <init> (Ljava/lang/String;Z)V 1 -1
Lorg/h2/message/TraceSystem; updateLevel ()V 1 -1
Ljava/text/SimpleDateFormat; <init> (Ljava/lang/String;)V 1 -1
Ljava/text/SimpleDateFormat; <init> (Ljava/lang/String;Ljava/util/Locale;)V 1 -1
Ljava/text/DateFormat; <init> ()V 1 -1
Ljava/util/Calendar; <clinit> ()V 1 -1
Ljava/util/GregorianCalendar; <clinit> ()V 1 -1
Ljava/util/GregorianCalendar; <init> (Ljava/util/Locale;)V 1 -1
Ljava/util/TimeZone; <clinit> ()V 1 -1
Ljava/util/TimeZone; getDefault ()Ljava/util/TimeZone; 1 -1
Ljava/util/TimeZone; defaultZone ()Ljava/util/TimeZone; 1 -1
Ljava/util/TimeZone$1; <init> ()V 1 -1
Ljava/util/TimeZone$1; run ()Ljava/lang/Object; 1 -1
Ljava/util/TimeZone; getDefaultTimeZone (Ljava/lang/String;)Ljava/util/TimeZone; 1 -1
Ljava/util/TimeZone; getTimeZoneInternal (Ljava/lang/String;)Ljava/util/TimeZone; 1 -1
Ljava/util/TimeZone; timezones ()Ljava/util/HashMap; 1 -1
Ljava/util/SimpleTimeZone; <clinit> ()V 1 -1
Ljava/util/SimpleTimeZone; <init> (ILjava/lang/String;)V 1 -1
Ljava/util/TimeZone; <init> ()V 1 -1
Ljava/util/TimeZone; setID (Ljava/lang/String;)V 1 -1
Ljava/util/SimpleTimeZone; <init> (ILjava/lang/String;IIIIIIII)V 1 -1
Ljava/util/SimpleTimeZone; setStartRule (IIII)V 1 -1
Ljava/util/SimpleTimeZone; checkRule (III)I 1 -1
Ljava/util/SimpleTimeZone; getDaysInMonth (II)I 1 -1
Ljava/util/SimpleTimeZone; setEndRule (IIII)V 1 -1
Ljava/util/SimpleTimeZone; <init> (ILjava/lang/String;IIIIIIIII)V 1 -1
Ljava/util/TimeZone; getTimeZone (Ljava/lang/String;)Ljava/util/TimeZone; 1 -1
Ljava/util/TimeZone; getID ()Ljava/lang/String; 1 -1
Ljava/util/TimeZone; clone ()Ljava/lang/Object; 1 -1
Ljava/util/GregorianCalendar; <init> (Ljava/util/TimeZone;Ljava/util/Locale;)V 1 -1
Ljava/util/GregorianCalendar; <init> (Ljava/util/TimeZone;Ljava/util/Locale;Z)V 1 -1
Ljava/util/Calendar; <init> (Ljava/util/TimeZone;Ljava/util/Locale;)V 1 -1
Ljava/util/Calendar; clear ()V 1 -1
Ljava/util/SimpleTimeZone; getRawOffset ()I 1 -1
Ljava/util/Date; <clinit> ()V 1 -1
Ljava/util/Date; <init> (J)V 1 -1
Ljava/util/Date; getTime ()J 1 -1
Ljava/util/Calendar; setTimeInMillis (J)V 1 -1
Ljava/util/GregorianCalendar; computeFields ()V 1 -1
Ljava/util/Calendar; getTimeZone ()Ljava/util/TimeZone; 1 -1
Ljava/util/GregorianCalendar; calculateDay ([IJZ)V 1 -1
Ljava/util/GregorianCalendar; getLinearDay (IIZ)J 1 -1
Ljava/util/GregorianCalendar; isLeapYear (I)Z 1 -1
Ljava/util/SimpleTimeZone; getOffset (IIIIII)I 1 -1
Ljava/util/Calendar; getFirstDayOfWeek ()I 1 -1
Ljava/util/Calendar; getMinimalDaysInFirstWeek ()I 1 -1
Ljava/util/GregorianCalendar; getWeekDay (II)I 1 -1
Ljava/util/GregorianCalendar; isGregorian (II)Z 1 -1
Ljava/text/SimpleDateFormat; computeCenturyStart ()V 1 -1
Ljava/util/Calendar; get (I)I 1 -1
Ljava/util/Calendar; complete ()V 1 -1
Ljava/util/Calendar; set (II)V 1 -1
Ljava/util/Calendar; getTime ()Ljava/util/Date; 1 -1
Ljava/util/GregorianCalendar; computeTime ()V 1 -1
Ljava/util/Calendar; isLenient ()Z 1 -1
Ljava/text/SimpleDateFormat; set2DigitYearStart (Ljava/util/Date;)V 1 -1
Ljava/util/Calendar; setTime (Ljava/util/Date;)V 1 -1
Ljava/text/DateFormatSymbols; <clinit> ()V 1 -1
Ljava/util/concurrent/ConcurrentHashMap; <init> ()V 1 -1
Ljava/util/concurrent/ConcurrentHashMap; <init> (IFI)V 1 -1
Ljava/util/concurrent/ConcurrentHashMap$Segment; newArray (I)[Ljava/util/concurrent/ConcurrentHashMap$Segment; 1 -1
Ljava/util/concurrent/ConcurrentHashMap$Segment; <init> (IF)V 1 -1
Ljava/util/concurrent/locks/ReentrantLock; <init> ()V 1 -1
Ljava/util/concurrent/locks/AbstractQueuedSynchronizer; <clinit> ()V 1 -1
Ljava/util/concurrent/locks/ReentrantLock$NonfairSync; <init> ()V 1 -1
Ljava/util/concurrent/locks/ReentrantLock$Sync; <init> ()V 1 -1
Ljava/util/concurrent/locks/AbstractQueuedSynchronizer; <init> ()V 1 -1
Ljava/util/concurrent/locks/AbstractOwnableSynchronizer; <init> ()V 1 -1
Ljava/util/concurrent/ConcurrentHashMap$HashEntry; newArray (I)[Ljava/util/concurrent/ConcurrentHashMap$HashEntry; 1 -1
Ljava/util/concurrent/ConcurrentHashMap$Segment; setTable ([Ljava/util/concurrent/ConcurrentHashMap$HashEntry;)V 1 -1
Ljava/text/DateFormatSymbols; <init> (Ljava/util/Locale;)V 1 -1
Ljava/text/DateFormatSymbols; retrieveData (Ljava/util/Locale;)Ljava/text/DateFormatSymbols$DFSData; 1 -1
Ljava/util/concurrent/ConcurrentHashMap; get (Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Ljava/util/concurrent/ConcurrentHashMap; hash (I)I 1 -1
Ljava/util/concurrent/ConcurrentHashMap; segmentFor (I)Ljava/util/concurrent/ConcurrentHashMap$Segment; 1 -1
Ljava/util/concurrent/ConcurrentHashMap$Segment; get (Ljava/lang/Object;I)Ljava/lang/Object; 1 -1
Lgnu/java/locale/LocaleHelper; getFallbackLocale (Ljava/util/Locale;)Ljava/util/Locale; 1 -1
Ljava/text/DateFormatSymbols; getStringArray (Ljava/util/List;Ljava/lang/String;I)[Ljava/lang/String; 1 -1
Ljava/text/DateFormatSymbols; getStringArray (Ljava/util/List;Ljava/lang/String;I[Ljava/lang/String;)[Ljava/lang/String; 1 -1
Ljava/text/DateFormatSymbols; getString (Ljava/util/List;Ljava/lang/String;)Ljava/lang/String; 1 -1
Ljava/text/DateFormatSymbols; formatsForKey (Ljava/util/List;Ljava/lang/String;)[Ljava/lang/String; 1 -1
Ljava/text/DateFormatSymbols; getZoneStrings (Ljava/util/List;Ljava/util/Locale;)[[Ljava/lang/String; 1 -1
Ljava/util/ServiceLoader; load (Ljava/lang/Class;)Ljava/util/ServiceLoader; 1 -1
Ljava/util/ServiceLoader; load (Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader; 1 -1
Ljava/util/ServiceLoader; <init> (Ljava/lang/Class;Ljava/lang/ClassLoader;)V 1 -1
Ljava/util/ServiceLoader; iterator ()Ljava/util/Iterator; 1 -1
Ljava/util/ServiceLoader$1; <init> (Ljava/util/ServiceLoader;)V 1 -1
Ljava/util/ServiceLoader; access$000 (Ljava/util/ServiceLoader;)Ljava/util/List; 1 -1
Ljava/util/ServiceLoader$1; hasNext ()Z 1 -1
Ljava/util/ServiceLoader; access$100 (Ljava/util/ServiceLoader;)Ljava/util/Iterator; 1 -1
Ljava/util/ServiceLoader; access$200 (Ljava/util/ServiceLoader;)Ljava/lang/Class; 1 -1
Ljava/util/ServiceLoader; access$300 (Ljava/util/ServiceLoader;)Ljava/lang/ClassLoader; 1 -1
Lgnu/classpath/ServiceFactory; <clinit> ()V 1 -1
Lgnu/classpath/ServiceFactory; lookupProviders (Ljava/lang/Class;Ljava/lang/ClassLoader;Z)Ljava/util/Iterator; 1 -1
Lgnu/classpath/ServiceFactory$ServiceIterator; <init> (Ljava/lang/Class;Ljava/util/Enumeration;Ljava/lang/ClassLoader;ZLjava/security/AccessControlContext;)V 1 -1
Lgnu/classpath/ServiceFactory$ServiceIterator; loadNextServiceProvider ()Ljava/lang/Object; 1 -1
Lgnu/classpath/ServiceFactory$ServiceIterator; advanceReader ()V 1 -1
Ljava/util/ServiceLoader; access$102 (Ljava/util/ServiceLoader;Ljava/util/Iterator;)Ljava/util/Iterator; 1 -1
Lgnu/classpath/ServiceFactory$ServiceIterator; hasNext ()Z 1 -1
Ljava/text/DateFormatSymbols$DFSData; <init> ([Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[[Ljava/lang/String;)V 1 -1
Ljava/util/concurrent/ConcurrentHashMap; putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Ljava/util/concurrent/ConcurrentHashMap$Segment; put (Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object; 1 -1
Ljava/util/concurrent/locks/ReentrantLock; lock ()V 1 -1
Ljava/util/concurrent/locks/ReentrantLock$NonfairSync; lock ()V 1 -1
Ljava/util/concurrent/locks/AbstractQueuedSynchronizer; compareAndSetState (II)Z 1 -1
Ljava/util/concurrent/locks/AbstractOwnableSynchronizer; setExclusiveOwnerThread (Ljava/lang/Thread;)V 1 -1
Ljava/util/concurrent/ConcurrentHashMap$HashEntry; <init> (Ljava/lang/Object;ILjava/util/concurrent/ConcurrentHashMap$HashEntry;Ljava/lang/Object;)V 1 -1
Ljava/util/concurrent/locks/ReentrantLock; unlock ()V 1 -1
Ljava/util/concurrent/locks/AbstractQueuedSynchronizer; release (I)Z 1 -1
Ljava/util/concurrent/locks/ReentrantLock$Sync; tryRelease (I)Z 1 -1
Ljava/util/concurrent/locks/AbstractQueuedSynchronizer; getState ()I 1 -1
Ljava/util/concurrent/locks/AbstractOwnableSynchronizer; getExclusiveOwnerThread ()Ljava/lang/Thread; 1 -1
Ljava/util/concurrent/locks/AbstractQueuedSynchronizer; setState (I)V 1 -1
Ljava/text/DateFormatSymbols$DFSData; getAMPMs ()[Ljava/lang/String; 1 -1
Ljava/text/DateFormatSymbols$DFSData; getEras ()[Ljava/lang/String; 1 -1
Ljava/text/DateFormatSymbols$DFSData; getLocalPatternChars ()Ljava/lang/String; 1 -1
Ljava/text/DateFormatSymbols$DFSData; getMonths ()[Ljava/lang/String; 1 -1
Ljava/text/DateFormatSymbols$DFSData; getShortMonths ()[Ljava/lang/String; 1 -1
Ljava/text/DateFormatSymbols$DFSData; getWeekdays ()[Ljava/lang/String; 1 -1
Ljava/text/DateFormatSymbols$DFSData; getShortWeekdays ()[Ljava/lang/String; 1 -1
Ljava/text/DateFormatSymbols$DFSData; getDateFormats ()[Ljava/lang/String; 1 -1
Ljava/text/DateFormatSymbols$DFSData; getTimeFormats ()[Ljava/lang/String; 1 -1
Ljava/text/DateFormatSymbols$DFSData; getZoneStrings ()[[Ljava/lang/String; 1 -1
Ljava/text/SimpleDateFormat; compileFormat (Ljava/lang/String;)V 1 -1
Ljava/text/SimpleDateFormat$CompiledField; <init> (Ljava/text/SimpleDateFormat;IIC)V 1 -1
Ljava/text/NumberFormat; getInstance (Ljava/util/Locale;)Ljava/text/NumberFormat; 1 -1
Ljava/text/NumberFormat; getNumberInstance (Ljava/util/Locale;)Ljava/text/NumberFormat; 1 -1
Ljava/text/NumberFormat; computeInstance (Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/text/NumberFormat; 1 -1
Ljava/text/DecimalFormatSymbols; getInstance (Ljava/util/Locale;)Ljava/text/DecimalFormatSymbols; 1 -1
Ljava/text/NumberFormat; setParseIntegerOnly (Z)V 1 -1
Lorg/h2/log/LogSystem; <init> (Lorg/h2/engine/Database;Ljava/lang/String;ZLjava/lang/String;Lorg/h2/store/PageStore;)V 1 -1
Lorg/h2/engine/User; <init> (Lorg/h2/engine/Database;ILjava/lang/String;Z)V 1 -1
Lorg/h2/engine/RightOwner; <init> (Lorg/h2/engine/Database;ILjava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/h2/engine/DbObjectBase; <init> ()V 1 -1
Lorg/h2/engine/DbObjectBase; initDbObjectBase (Lorg/h2/engine/Database;ILjava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/h2/engine/Database; getTrace (Ljava/lang/String;)Lorg/h2/message/Trace; 1 -1
Lorg/h2/message/TraceSystem; getTrace (Ljava/lang/String;)Lorg/h2/message/Trace; 1 -1
Lorg/h2/message/Trace; <init> (Lorg/h2/message/TraceWriter;Ljava/lang/String;)V 1 -1
Lorg/h2/util/SmallLRUCache; removeEldestEntry (Ljava/util/Map$Entry;)Z 1 -1
Lorg/h2/engine/Database; getModificationMetaId ()J 1 -1
Lorg/h2/schema/Schema; <init> (Lorg/h2/engine/Database;ILjava/lang/String;Lorg/h2/engine/User;Z)V 1 -1
Lorg/h2/engine/DbObjectBase; getName ()Ljava/lang/String; 1 -1
Lorg/h2/engine/Role; <init> (Lorg/h2/engine/Database;ILjava/lang/String;Z)V 1 -1
Lorg/h2/engine/User; setAdmin (Z)V 1 -1
Lorg/h2/engine/Session; <init> (Lorg/h2/engine/Database;Lorg/h2/engine/User;I)V 1 -1
Lorg/h2/value/Value; <clinit> ()V 1 -1
Ljava/lang/ref/SoftReference; <init> (Ljava/lang/Object;)V 1 -1
Ljava/math/BigDecimal; <clinit> ()V 1 -1
Ljava/math/BigInteger; <clinit> ()V 1 -1
Ljava/math/BigInteger; <init> (I)V 1 -1
Ljava/math/BigDecimal; <init> (Ljava/math/BigInteger;I)V 1 -1
Ljava/math/BigDecimal; <init> (Ljava/lang/String;)V 1 -1
Ljava/math/BigInteger; <init> (Ljava/lang/String;)V 1 -1
Ljava/math/BigInteger; <init> (Ljava/lang/String;I)V 1 -1
Ljava/math/BigInteger; <init> ()V 1 -1
Ljava/math/BigInteger; valueOf ([BIZI)Ljava/math/BigInteger; 1 -1
Lgnu/java/math/MPN; chars_per_word (I)I 1 -1
Lgnu/java/math/MPN; set_str ([I[BII)I 1 -1
Lgnu/java/math/MPN; mul_1 ([I[III)I 1 -1
Lgnu/java/math/MPN; add_1 ([I[III)I 1 -1
Ljava/math/BigInteger; make ([II)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; wordsNeeded ([II)I 1 -1
Ljava/math/BigInteger; negate ([I[II)Z 1 -1
Lorg/h2/value/ValueLong; <clinit> ()V 1 -1
Lorg/h2/value/ValueLong; <init> (J)V 1 -1
Lorg/h2/value/Value; <init> ()V 1 -1
Lorg/h2/value/ValueLong; get (J)Lorg/h2/value/ValueLong; 1 -1
Lorg/h2/constant/SysProperties; getMaxQueryTimeout ()I 1 -1
Lorg/h2/log/UndoLog; <init> (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/engine/Session; getDatabase ()Lorg/h2/engine/Database; 1 -1
Lorg/h2/engine/Database; getLog ()Lorg/h2/log/LogSystem; 1 -1
Lorg/h2/engine/Database; findSetting (Ljava/lang/String;)Lorg/h2/engine/Setting; 1 -1
Lorg/h2/command/ddl/CreateTableData; <init> ()V 1 -1
Lorg/h2/table/Column; <init> (Ljava/lang/String;I)V 1 -1
Lorg/h2/table/Column; <init> (Ljava/lang/String;IJII)V 1 -1
Lorg/h2/value/DataType; <clinit> ()V 1 -1
Lorg/h2/value/DataType; <init> ()V 1 -1
Lorg/h2/value/DataType; add (IILjava/lang/String;Lorg/h2/value/DataType;[Ljava/lang/String;I)V 1 -1
Lorg/h2/value/DataType; createString (Z)Lorg/h2/value/DataType; 1 -1
Lorg/h2/value/DataType; createDecimal (IIIIZZ)Lorg/h2/value/DataType; 1 -1
Lorg/h2/value/DataType; createDate (ILjava/lang/String;II)Lorg/h2/value/DataType; 1 -1
Lorg/h2/value/DataType; createLob ()Lorg/h2/value/DataType; 1 -1
Lorg/h2/value/Value; getOrder (I)I 1 -1
Lorg/h2/value/DataType; getDataType (I)Lorg/h2/value/DataType; 1 -1
Lorg/h2/table/Column; setNullable (Z)V 1 -1
Lorg/h2/util/ObjectArray; add (Ljava/lang/Object;)V 1 -1
Lorg/h2/schema/Schema; createTable (Lorg/h2/command/ddl/CreateTableData;)Lorg/h2/table/TableData; 1 -1
Lorg/h2/table/TableData; <init> (Lorg/h2/command/ddl/CreateTableData;)V 1 -1
Lorg/h2/table/Table; <init> (Lorg/h2/schema/Schema;ILjava/lang/String;ZZ)V 1 -1
Lorg/h2/schema/SchemaObjectBase; <init> ()V 1 -1
Lorg/h2/schema/SchemaObjectBase; initSchemaObjectBase (Lorg/h2/schema/Schema;ILjava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/h2/engine/DbObjectBase; getDatabase ()Lorg/h2/engine/Database; 1 -1
Lorg/h2/engine/Database; getCompareMode ()Lorg/h2/value/CompareMode; 1 -1
Lorg/h2/util/ObjectArray; size ()I 1 -1
Lorg/h2/util/ObjectArray; toArray ([Ljava/lang/Object;)[Ljava/lang/Object; 1 -1
Lorg/h2/util/ObjectUtils; arrayCopy ([Ljava/lang/Object;[Ljava/lang/Object;I)V 1 -1
Lorg/h2/table/Table; setColumns ([Lorg/h2/table/Column;)V 1 -1
Lorg/h2/table/Column; getType ()I 1 -1
Lorg/h2/table/Column; setTable (Lorg/h2/table/Table;I)V 1 -1
Lorg/h2/table/Column; getName ()Ljava/lang/String; 1 -1
Lorg/h2/engine/DbObjectBase; setTemporary (Z)V 1 -1
Lorg/h2/engine/Database; isPageStoreEnabled ()Z 1 -1
Lorg/h2/table/IndexColumn; wrap ([Lorg/h2/table/Column;)[Lorg/h2/table/IndexColumn; 1 -1
Lorg/h2/table/IndexColumn; <init> ()V 1 -1
Lorg/h2/index/IndexType; createScan (Z)Lorg/h2/index/IndexType; 1 -1
Lorg/h2/index/IndexType; <init> ()V 1 -1
Lorg/h2/index/ScanIndex; <init> (Lorg/h2/table/TableData;I[Lorg/h2/table/IndexColumn;Lorg/h2/index/IndexType;)V 1 -1
Lorg/h2/index/BaseIndex; <init> ()V 1 -1
Lorg/h2/index/BaseIndex; initBaseIndex (Lorg/h2/table/Table;ILjava/lang/String;[Lorg/h2/table/IndexColumn;Lorg/h2/index/IndexType;)V 1 -1
Lorg/h2/schema/SchemaObjectBase; getSchema ()Lorg/h2/schema/Schema; 1 -1
Lorg/h2/table/Column; getColumnId ()I 1 -1
Lorg/h2/engine/Database; isMultiVersion ()Z 1 -1
Lorg/h2/engine/Database; isPersistent ()Z 1 -1
Lorg/h2/value/DataType; isLargeObject (I)Z 1 -1
Lorg/h2/index/IndexType; createPrimaryKey (ZZ)Lorg/h2/index/IndexType; 1 -1
Lorg/h2/table/TableData; addIndex (Lorg/h2/engine/Session;Ljava/lang/String;I[Lorg/h2/table/IndexColumn;Lorg/h2/index/IndexType;ILjava/lang/String;)Lorg/h2/index/Index; 1 -1
Lorg/h2/index/IndexType; isPrimaryKey ()Z 1 -1
Lorg/h2/table/Column; isNullable ()Z 1 -1
Lorg/h2/table/Column; setPrimaryKey (Z)V 1 -1
Lorg/h2/table/Table; isPersistIndexes ()Z 1 -1
Lorg/h2/index/IndexType; isHash ()Z 1 -1
Lorg/h2/index/TreeIndex; <init> (Lorg/h2/table/TableData;ILjava/lang/String;[Lorg/h2/table/IndexColumn;Lorg/h2/index/IndexType;)V 1 -1
Lorg/h2/index/MultiVersionIndex; <init> (Lorg/h2/index/Index;Lorg/h2/table/TableData;)V 1 -1
Lorg/h2/index/IndexType; createNonUnique (Z)Lorg/h2/index/IndexType; 1 -1
Lorg/h2/index/IndexType; createNonUnique (ZZ)Lorg/h2/index/IndexType; 1 -1
Lorg/h2/index/BaseIndex; getIndexColumns ()[Lorg/h2/table/IndexColumn; 1 -1
Lorg/h2/index/BaseIndex; setMultiVersion (Z)V 1 -1
Lorg/h2/index/BaseIndex; getColumns ()[Lorg/h2/table/Column; 1 -1
Lorg/h2/index/MultiVersionIndex; needRebuild ()Z 1 -1
Lorg/h2/index/TreeIndex; needRebuild ()Z 1 -1
Lorg/h2/engine/DbObjectBase; isTemporary ()Z 1 -1
Lorg/h2/index/MultiVersionIndex; setTemporary (Z)V 1 -1
Lorg/h2/index/MultiVersionIndex; getCreateSQL ()Ljava/lang/String; 1 -1
Lorg/h2/index/BaseIndex; getCreateSQL ()Ljava/lang/String; 1 -1
Lorg/h2/schema/SchemaObjectBase; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/engine/DbObjectBase; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/command/Parser; quoteIdentifier (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/command/Parser; isKeyword (Ljava/lang/String;Z)Z 1 -1
Lorg/h2/command/Parser; getSaveTokenType (Ljava/lang/String;Z)I 1 -1
Lorg/h2/command/Parser; getKeywordOrIdentifier (Ljava/lang/String;Ljava/lang/String;I)I 1 -1
Lorg/h2/index/BaseIndex; getCreateSQLForCopy (Lorg/h2/table/Table;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/index/IndexType; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/index/BaseIndex; getColumnListSQL ()Ljava/lang/String; 1 -1
Lorg/h2/util/StatementBuilder; <init> ()V 1 -1
Lorg/h2/util/StatementBuilder; appendExceptFirst (Ljava/lang/String;)V 1 -1
Lorg/h2/table/IndexColumn; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/table/Column; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/util/StatementBuilder; append (Ljava/lang/String;)Lorg/h2/util/StatementBuilder; 1 -1
Lorg/h2/util/StatementBuilder; toString ()Ljava/lang/String; 1 -1
Lorg/h2/index/MultiVersionIndex; setComment (Ljava/lang/String;)V 1 -1
Lorg/h2/engine/DbObjectBase; setComment (Ljava/lang/String;)V 1 -1
Lorg/h2/engine/Database; addSchemaObject (Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V 1 -1
Lorg/h2/index/MultiVersionIndex; getId ()I 1 -1
Lorg/h2/engine/DbObjectBase; getId ()I 1 -1
Lorg/h2/index/MultiVersionIndex; getSchema ()Lorg/h2/schema/Schema; 1 -1
Lorg/h2/schema/Schema; add (Lorg/h2/schema/SchemaObject;)V 1 -1
Lorg/h2/index/MultiVersionIndex; getName ()Ljava/lang/String; 1 -1
Lorg/h2/index/MultiVersionIndex; getType ()I 1 -1
Lorg/h2/index/BaseIndex; getType ()I 1 -1
Lorg/h2/schema/Schema; getMap (I)Ljava/util/HashMap; 1 -1
Lorg/h2/schema/Schema; freeUniqueName (Ljava/lang/String;)V 1 -1
Lorg/h2/engine/Database; addMeta (Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V 1 -1
Lorg/h2/engine/DbObjectBase; setModified ()V 1 -1
Lorg/h2/engine/Database; getNextModificationMetaId ()J 1 -1
Lorg/h2/util/BitField; set (I)V 1 -1
Lorg/h2/util/BitField; getAddress (I)I 1 -1
Lorg/h2/util/BitField; checkCapacity (I)V 1 -1
Lorg/h2/util/BitField; getBitMask (I)J 1 -1
Lorg/h2/table/MetaTable; getMetaTableTypeCount ()I 1 -1
Lorg/h2/engine/Database; addMetaData (I)V 1 -1
Lorg/h2/table/MetaTable; <init> (Lorg/h2/schema/Schema;II)V 1 -1
Lorg/h2/engine/DbObjectBase; setObjectName (Ljava/lang/String;)V 1 -1
Lorg/h2/table/MetaTable; createColumns ([Ljava/lang/String;)[Lorg/h2/table/Column; 1 -1
Lorg/h2/value/DataType; getTypeByName (Ljava/lang/String;)Lorg/h2/value/DataType; 1 -1
Lorg/h2/table/Table; getColumn (Ljava/lang/String;)Lorg/h2/table/Column; 1 -1
Lorg/h2/index/MetaIndex; <init> (Lorg/h2/table/MetaTable;[Lorg/h2/table/IndexColumn;Z)V 1 -1
Lorg/h2/table/Table; getType ()I 1 -1
Lorg/h2/index/MultiVersionIndex; find (Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor; 1 -1
Lorg/h2/index/TreeIndex; find (Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor; 1 -1
Lorg/h2/index/TreeCursor; <init> (Lorg/h2/index/TreeIndex;Lorg/h2/index/TreeNode;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)V 1 -1
Lorg/h2/index/MultiVersionCursor; <init> (Lorg/h2/engine/Session;Lorg/h2/index/MultiVersionIndex;Lorg/h2/index/Cursor;Lorg/h2/index/Cursor;Ljava/lang/Object;)V 1 -1
Lorg/h2/index/MultiVersionCursor; next ()Z 1 -1
Lorg/h2/index/MultiVersionCursor; loadNext (Z)V 1 -1
Lorg/h2/index/MultiVersionCursor; step (Lorg/h2/index/Cursor;)Z 1 -1
Lorg/h2/index/TreeCursor; next ()Z 1 -1
Lorg/h2/engine/MetaRecord; sort (Lorg/h2/util/ObjectArray;)V 1 -1
Lorg/h2/engine/MetaRecord$1; <init> ()V 1 -1
Lorg/h2/util/ObjectArray; sort (Ljava/util/Comparator;)V 1 -1
Lorg/h2/util/ObjectArray; sort (Ljava/util/Comparator;II)V 1 -1
Lorg/h2/util/ObjectArray; iterator ()Ljava/util/Iterator; 1 -1
Lorg/h2/util/ObjectArray$ObjectArrayIterator; <init> (Lorg/h2/util/ObjectArray;)V 1 -1
Lorg/h2/util/ObjectArray$ObjectArrayIterator; hasNext ()Z 1 -1
Lorg/h2/engine/Database; recompileInvalidViews (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/engine/Database; getAllTablesAndViews ()Lorg/h2/util/ObjectArray; 1 -1
Lorg/h2/schema/Schema; getAllTablesAndViews ()Lorg/h2/util/ObjectArray; 1 -1
Lorg/h2/util/ObjectArray; newInstance (Ljava/util/Collection;)Lorg/h2/util/ObjectArray; 1 -1
Lorg/h2/util/ObjectArray; <init> (Ljava/util/Collection;)V 1 -1
Lorg/h2/util/ObjectArray; addAll (Lorg/h2/util/ObjectArray;)V 1 -1
Lorg/h2/util/ObjectArray; ensureCapacity (I)V 1 -1
Lorg/h2/util/ObjectArray$ObjectArrayIterator; next ()Ljava/lang/Object; 1 -1
Lorg/h2/util/ObjectArray; get (I)Ljava/lang/Object; 1 -1
Lorg/h2/engine/Database; addDefaultSetting (Lorg/h2/engine/Session;ILjava/lang/String;I)V 1 -1
Lorg/h2/engine/Database; allocateObjectId (ZZ)I 1 -1
Lorg/h2/util/BitField; getLastSetBit ()I 1 -1
Lorg/h2/util/BitField; get (I)Z 1 -1
Lorg/h2/engine/Setting; <init> (Lorg/h2/engine/Database;ILjava/lang/String;)V 1 -1
Lorg/h2/engine/Setting; setIntValue (I)V 1 -1
Lorg/h2/engine/Database; addDatabaseObject (Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V 1 -1
Lorg/h2/engine/Database; checkWritingAllowed ()V 1 -1
Lorg/h2/engine/Setting; getType ()I 1 -1
Lorg/h2/engine/Database; getMap (I)Ljava/util/HashMap; 1 -1
Lorg/h2/table/Table; getTemplateRow ()Lorg/h2/result/Row; 1 -1
Lorg/h2/util/CacheObject; <clinit> ()V 1 -1
Lorg/h2/util/CacheObject$CacheComparator; <init> ()V 1 -1
Lorg/h2/result/Row; <init> ([Lorg/h2/value/Value;I)V 1 -1
Lorg/h2/store/Record; <init> ()V 1 -1
Lorg/h2/util/CacheObject; <init> ()V 1 -1
Lorg/h2/engine/MetaRecord; <init> (Lorg/h2/engine/DbObject;)V 1 -1
Lorg/h2/engine/DbObjectBase; getHeadPos ()I 1 -1
Lorg/h2/engine/Setting; getCreateSQL ()Ljava/lang/String; 1 -1
Lorg/h2/engine/MetaRecord; setRecord (Lorg/h2/result/SearchRow;)V 1 -1
Lorg/h2/value/ValueInt; <clinit> ()V 1 -1
Lorg/h2/value/ValueInt; <init> (I)V 1 -1
Lorg/h2/value/ValueInt; get (I)Lorg/h2/value/ValueInt; 1 -1
Lorg/h2/result/Row; setValue (ILorg/h2/value/Value;)V 1 -1
Lorg/h2/value/ValueString; <clinit> ()V 1 -1
Lorg/h2/value/ValueString; <init> (Ljava/lang/String;)V 1 -1
Lorg/h2/value/ValueStringBase; <init> (Ljava/lang/String;)V 1 -1
Lorg/h2/value/ValueString; get (Ljava/lang/String;)Lorg/h2/value/ValueString; 1 -1
Lorg/h2/util/StringCache; <clinit> ()V 1 -1
Lorg/h2/util/StringCache; get (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/util/StringCache; getCache ()[Ljava/lang/String; 1 -1
Lorg/h2/value/Value; cache (Lorg/h2/value/Value;)Lorg/h2/value/Value; 1 -1
Lorg/h2/value/ValueString; hashCode ()I 1 -1
Lorg/h2/table/TableData; lock (Lorg/h2/engine/Session;ZZ)V 1 -1
Lorg/h2/engine/Database; getLockMode ()I 1 -1
Lorg/h2/table/TableData; doLock (Lorg/h2/engine/Session;IZ)V 1 -1
Lorg/h2/table/TableData; traceLock (Lorg/h2/engine/Session;ZLjava/lang/String;)V 1 -1
Lorg/h2/message/Trace; isDebugEnabled ()Z 1 -1
Lorg/h2/message/Trace; isEnabled (I)Z 1 -1
Lorg/h2/message/TraceSystem; isEnabled (I)Z 1 -1
Lorg/h2/engine/Session; getLockTimeout ()I 1 -1
Lorg/h2/engine/Session; addLock (Lorg/h2/table/Table;)V 1 -1
Lorg/h2/util/ObjectArray; indexOf (Ljava/lang/Object;)I 1 -1
Lorg/h2/engine/Session; setWaitForLock (Lorg/h2/table/Table;)V 1 -1
Lorg/h2/table/TableData; addRow (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 1 -1
Lorg/h2/engine/Database; getNextModificationDataId ()J 1 -1
Lorg/h2/engine/Session; getId ()I 1 -1
Lorg/h2/store/Record; setSessionId (I)V 1 -1
Lorg/h2/index/ScanIndex; add (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 1 -1
Lorg/h2/result/Row; setKey (J)V 1 -1
Lorg/h2/result/Row; setPos (I)V 1 -1
Lorg/h2/util/CacheObject; setPos (I)V 1 -1
Lorg/h2/store/Record; setDeleted (Z)V 1 -1
Lorg/h2/index/ScanIndex; incrementRowCount (II)V 1 -1
Lorg/h2/table/TableData; checkRowCount (Lorg/h2/engine/Session;Lorg/h2/index/Index;I)V 1 -1
Lorg/h2/index/MultiVersionIndex; add (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 1 -1
Lorg/h2/index/TreeIndex; add (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 1 -1
Lorg/h2/index/TreeNode; <init> (Lorg/h2/result/Row;)V 1 -1
Lorg/h2/index/MultiVersionIndex; removeIfExists (Lorg/h2/engine/Session;Lorg/h2/result/Row;)Z 1 -1
Lorg/h2/index/TreeIndex; findFirstNode (Lorg/h2/result/SearchRow;Z)Lorg/h2/index/TreeNode; 1 -1
Lorg/h2/store/Record; getSessionId ()I 1 -1
Lorg/h2/engine/Session; log (Lorg/h2/table/Table;SLorg/h2/result/Row;)V 1 -1
Lorg/h2/log/UndoLogRecord; <init> (Lorg/h2/table/Table;SLorg/h2/result/Row;)V 1 -1
Lorg/h2/engine/Session; log (Lorg/h2/log/UndoLogRecord;)V 1 -1
Lorg/h2/log/UndoLog; add (Lorg/h2/log/UndoLogRecord;)V 1 -1
Lorg/h2/log/UndoLogRecord; isStored ()Z 1 -1
Lorg/h2/engine/Database; getMaxMemoryUndo ()I 1 -1
Lorg/h2/index/BaseIndex; compareRows (Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)I 1 -1
Lorg/h2/result/Row; getValue (I)Lorg/h2/value/Value; 1 -1
Lorg/h2/index/BaseIndex; compareValues (Lorg/h2/value/Value;Lorg/h2/value/Value;I)I 1 -1
Lorg/h2/table/Table; compareTypeSave (Lorg/h2/value/Value;Lorg/h2/value/Value;)I 1 -1
Lorg/h2/value/Value; compareTypeSave (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 1 -1
Lorg/h2/value/ValueNull; <clinit> ()V 1 -1
Lorg/h2/value/ValueNull; <init> ()V 1 -1
Lorg/h2/value/ValueInt; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 1 -1
Lorg/h2/util/MathUtils; compare (II)I 1 -1
Lorg/h2/index/TreeIndex; child (Lorg/h2/index/TreeNode;Z)Lorg/h2/index/TreeNode; 1 -1
Lorg/h2/index/TreeIndex; set (Lorg/h2/index/TreeNode;ZLorg/h2/index/TreeNode;)V 1 -1
Lorg/h2/index/TreeIndex; balance (Lorg/h2/index/TreeNode;Z)V 1 -1
Lorg/h2/index/TreeIndex; next (Lorg/h2/index/TreeNode;)Lorg/h2/index/TreeNode; 1 -1
Lorg/h2/index/TreeNode; isFromLeft ()Z 1 -1
Lorg/h2/index/TreeIndex; replace (Lorg/h2/index/TreeNode;Lorg/h2/index/TreeNode;)V 1 -1
Lorg/h2/engine/Setting; setStringValue (Ljava/lang/String;)V 1 -1
Lorg/h2/engine/Database; removeUnusedStorages (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/engine/Session; commit (Z)V 1 -1
Lorg/h2/engine/Session; checkCommitRollback ()V 1 -1
Lorg/h2/engine/Session; containsUncommitted ()Z 1 -1
Lorg/h2/log/UndoLog; size ()I 1 -1
Lorg/h2/log/UndoLog; getLast ()Lorg/h2/log/UndoLogRecord; 1 -1
Lorg/h2/log/UndoLogRecord; commit ()V 1 -1
Lorg/h2/table/TableData; getIndexes ()Lorg/h2/util/ObjectArray; 1 -1
Lorg/h2/index/ScanIndex; commit (ILorg/h2/result/Row;)V 1 -1
Lorg/h2/index/MultiVersionIndex; commit (ILorg/h2/result/Row;)V 1 -1
Lorg/h2/index/TreeCursor; get ()Lorg/h2/result/Row; 1 -1
Lorg/h2/result/Row; getKey ()J 1 -1
Lorg/h2/result/Row; getVersion ()I 1 -1
Lorg/h2/index/TreeIndex; remove (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 1 -1
Lorg/h2/index/BaseIndex; compareKeys (Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)I 1 -1
Lorg/h2/log/UndoLogRecord; getRow ()Lorg/h2/result/Row; 1 -1
Lorg/h2/log/UndoLog; removeLast (Z)V 1 -1
Lorg/h2/util/ObjectArray; remove (I)Ljava/lang/Object; 1 -1
Lorg/h2/store/Record; commit ()V 1 -1
Lorg/h2/log/UndoLog; clear ()V 1 -1
Lorg/h2/util/ObjectArray; clear ()V 1 -1
Lorg/h2/engine/Session; unlockAll ()V 1 -1
Lorg/h2/table/TableData; unlock (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/engine/Database; getSessionCount ()I 1 -1
Lorg/h2/message/Trace; info (Ljava/lang/String;)V 1 -1
Lorg/h2/engine/DatabaseCloser; <init> (Lorg/h2/engine/Database;IZ)V 1 -1
Lorg/h2/engine/Database; getAllUsers ()Lorg/h2/util/ObjectArray; 1 -1
Lorg/h2/engine/ConnectionInfo; getUserName ()Ljava/lang/String; 1 -1
Lorg/h2/engine/ConnectionInfo; getUserPasswordHash ()[B 1 -1
Lorg/h2/engine/User; setUserPasswordHash ([B)V 1 -1
Lorg/h2/util/RandomUtils; <clinit> ()V 1 -1
Ljava/util/Random; <init> ()V 1 -1
Ljava/util/Random; <init> (J)V 1 -1
Ljava/util/Random; setSeed (J)V 1 -1
Lorg/h2/util/RandomUtils; getSecureBytes (I)[B 1 -1
Lorg/h2/util/RandomUtils; getSecureRandom ()Ljava/security/SecureRandom; 1 -1
Ljava/security/SecureRandom; getInstance (Ljava/lang/String;)Ljava/security/SecureRandom; 1 -1
Ljava/security/Security; <clinit> ()V 1 -1
Ljava/security/Security; loadProviders (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lgnu/javax/crypto/jce/GnuCrypto; <init> ()V 1 -1
Lgnu/javax/crypto/jce/GnuCrypto$1; <init> (Lgnu/javax/crypto/jce/GnuCrypto;)V 1 -1
Lgnu/javax/crypto/jce/GnuCrypto$1; run ()Ljava/lang/Object; 1 -1
Lgnu/javax/crypto/jce/GnuSasl; <init> ()V 1 -1
Lgnu/javax/crypto/jce/GnuSasl$1; <init> (Lgnu/javax/crypto/jce/GnuSasl;)V 1 -1
Lgnu/javax/crypto/jce/GnuSasl$1; run ()Ljava/lang/Object; 1 -1
Lgnu/javax/net/ssl/provider/Jessie; <init> ()V 1 -1
Lgnu/javax/net/ssl/provider/Jessie$1; <init> (Lgnu/javax/net/ssl/provider/Jessie;)V 1 -1
Lgnu/javax/net/ssl/provider/Jessie$1; run ()Ljava/lang/Object; 1 -1
Lgnu/javax/security/auth/callback/GnuCallbacks; <init> ()V 1 -1
Lgnu/javax/security/auth/callback/GnuCallbacks$1; <init> (Lgnu/javax/security/auth/callback/GnuCallbacks;)V 1 -1
Lgnu/javax/security/auth/callback/GnuCallbacks$1; run ()Ljava/lang/Object; 1 -1
Ljava/security/Security; getProviders ()[Ljava/security/Provider; 1 -1
Ljava/security/SecureRandom; getInstance (Ljava/lang/String;Ljava/security/Provider;)Ljava/security/SecureRandom; 1 -1
Lgnu/java/security/Engine; <clinit> ()V 1 -1
Lgnu/java/security/Engine; getInstance (Ljava/lang/String;Ljava/lang/String;Ljava/security/Provider;)Ljava/lang/Object; 1 -1
Lgnu/java/security/Engine; getInstance (Ljava/lang/String;Ljava/lang/String;Ljava/security/Provider;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lgnu/java/security/jce/prng/SecureRandomAdapter; <clinit> ()V 1 -1
Lgnu/java/security/Engine; getCompatibleConstructor (Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/reflect/Constructor; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect39562; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect39562; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lgnu/java/security/jce/prng/Sha160RandomSpi; <init> ()V 1 -1
Lgnu/java/security/jce/prng/SecureRandomAdapter; <init> (Ljava/lang/String;)V 1 -1
Ljava/security/SecureRandomSpi; <init> ()V 1 -1
Lgnu/java/security/prng/MDGenerator; <init> ()V 1 -1
Lgnu/java/security/prng/BasePRNG; <init> (Ljava/lang/String;)V 1 -1
Lgnu/java/security/prng/BasePRNG; init (Ljava/util/Map;)V 1 -1
Lgnu/java/security/prng/MDGenerator; setup (Ljava/util/Map;)V 1 -1
Lgnu/java/security/hash/HashFactory; getInstance (Ljava/lang/String;)Lgnu/java/security/hash/IMessageDigest; 1 -1
Lgnu/java/security/hash/Sha160; <clinit> ()V 1 -1
Lgnu/java/security/hash/Sha160; <init> ()V 1 -1
Lgnu/java/security/hash/BaseHash; <init> (Ljava/lang/String;II)V 1 -1
Lgnu/java/security/hash/Sha160; resetContext ()V 1 -1
Lgnu/java/security/hash/Sha160; selfTest ()Z 1 -1
Lgnu/java/security/hash/BaseHash; update (B)V 1 -1
Lgnu/java/security/hash/BaseHash; digest ()[B 1 -1
Lgnu/java/security/hash/Sha160; padBuffer ()[B 1 -1
Lgnu/java/security/hash/BaseHash; update ([BII)V 1 -1
Lgnu/java/security/hash/Sha160; transform ([BI)V 1 -1
Lgnu/java/security/hash/Sha160; sha (IIIII[BI)[I 1 -1
Lgnu/java/security/hash/Sha160; getResult ()[B 1 -1
Lgnu/java/security/hash/BaseHash; reset ()V 1 -1
Lgnu/java/security/util/Util; <clinit> ()V 1 -1
Lgnu/java/security/util/Util; toString ([B)Ljava/lang/String; 1 -1
Lgnu/java/security/util/Util; toString ([BII)Ljava/lang/String; 1 -1
Ljava/security/SecureRandom; <init> (Ljava/security/SecureRandomSpi;Ljava/security/Provider;Ljava/lang/String;)V 1 -1
Ljava/security/SecureRandom; setSeed (J)V 1 -1
Lorg/h2/util/RandomUtils$1; <init> ()V 1 -1
Lorg/h2/util/RandomUtils$1; run ()V 1 -1
Ljava/security/SecureRandom; generateSeed (I)[B 1 -1
Lgnu/java/security/jce/prng/SecureRandomAdapter; engineGenerateSeed (I)[B 1 -1
Lgnu/java/security/jce/prng/SecureRandomAdapter; getSeed (I)[B 1 -1
Lgnu/java/security/action/GetSecurityPropertyAction; <init> (Ljava/lang/String;)V 1 -1
Lgnu/java/security/action/GetSecurityPropertyAction; setParameters (Ljava/lang/String;)Lgnu/java/security/action/GetSecurityPropertyAction; 1 -1
Lgnu/java/security/action/GetSecurityPropertyAction; run ()Ljava/lang/Object; 1 -1
Lgnu/java/security/action/GetSecurityPropertyAction; run ()Ljava/lang/String; 1 -1
Ljava/security/Security; getProperty (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lgnu/java/security/jce/prng/VMSecureRandom; generateSeed ([BII)I 1 -1
Lgnu/java/security/jce/prng/VMSecureRandom$Spinner; <init> (B)V 1 -1
Lgnu/java/security/jce/prng/VMSecureRandom$Spinner; run ()V 1 -1
Lgnu/java/security/jce/prng/VMSecureRandom$Spinner; stop ()V 1 -1
Ljava/security/SecureRandom; setSeed ([B)V 1 -1
Lgnu/java/security/jce/prng/SecureRandomAdapter; engineSetSeed ([B)V 1 -1
Lgnu/java/security/prng/BasePRNG; addRandomBytes ([B)V 1 -1
Lgnu/java/security/prng/MDGenerator; addRandomBytes ([BII)V 1 -1
Ljava/security/SecureRandom; nextBytes ([B)V 1 -1
Lgnu/java/security/jce/prng/SecureRandomAdapter; engineNextBytes ([B)V 1 -1
Lgnu/java/security/prng/BasePRNG; nextBytes ([BII)V 1 -1
Lgnu/java/security/prng/MDGenerator; fillBlock ()V 1 -1
Lgnu/java/security/hash/Sha160; clone ()Ljava/lang/Object; 1 -1
Lgnu/java/security/hash/Sha160; <init> (Lgnu/java/security/hash/Sha160;)V 1 -1
Lorg/h2/security/SHA256; getHashWithSalt ([B[B)[B 1 -1
Lorg/h2/engine/Database; setMasterUser (Lorg/h2/engine/User;)V 1 -1
Lorg/h2/engine/User; getType ()I 1 -1
Lorg/h2/engine/User; isAdmin ()Z 1 -1
Lorg/h2/engine/DbObjectBase; rename (Ljava/lang/String;)V 1 -1
Lorg/h2/engine/User; checkRename ()V 1 -1
Lorg/h2/engine/User; getCreateSQL ()Ljava/lang/String; 1 -1
Lorg/h2/engine/User; getCreateSQL (ZZ)Ljava/lang/String; 1 -1
Lorg/h2/util/ByteUtils; <clinit> ()V 1 -1
Lorg/h2/util/ByteUtils; convertBytesToString ([B)Ljava/lang/String; 1 -1
Lorg/h2/util/ByteUtils; convertBytesToString ([BI)Ljava/lang/String; 1 -1
Lorg/h2/engine/Database; opened ()V 1 -1
Lorg/h2/engine/Database; isClosing ()Z 1 -1
Lorg/h2/engine/Engine; checkClustering (Lorg/h2/engine/ConnectionInfo;Lorg/h2/engine/Database;)V 1 -1
Lorg/h2/engine/Database; getCluster ()Ljava/lang/String; 1 -1
Lorg/h2/engine/Database; createSession (Lorg/h2/engine/User;)Lorg/h2/engine/Session; 1 -1
Lorg/h2/engine/Setting; getIntValue ()I 1 -1
Lorg/h2/engine/Session; hashCode ()I 1 -1
Lorg/h2/engine/Session; setAllowLiterals (Z)V 1 -1
Lorg/h2/engine/ConnectionInfo; getKeys ()[Ljava/lang/String; 1 -1
Lorg/h2/engine/Session; prepareCommand (Ljava/lang/String;I)Lorg/h2/command/CommandInterface; 1 -1
Lorg/h2/engine/Session; prepareLocal (Ljava/lang/String;)Lorg/h2/command/Command; 1 -1
Lorg/h2/command/Parser; <init> (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/command/Parser; prepareCommand (Ljava/lang/String;)Lorg/h2/command/Command; 1 -1
Lorg/h2/command/Parser; parse (Ljava/lang/String;)Lorg/h2/command/Prepared; 1 -1
Lorg/h2/command/Parser; parse (Ljava/lang/String;Z)Lorg/h2/command/Prepared; 1 -1
Lorg/h2/command/Parser; initialize (Ljava/lang/String;)V 1 -1
Lorg/h2/command/Parser; read ()V 1 -1
Lorg/h2/util/StringCache; getNew (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/command/Parser; getTokenType (Ljava/lang/String;)I 1 -1
Lorg/h2/engine/Database; getMode ()Lorg/h2/engine/Mode; 1 -1
Lorg/h2/command/Parser; parsePrepared ()Lorg/h2/command/Prepared; 1 -1
Lorg/h2/command/Parser; isToken (Ljava/lang/String;)Z 1 -1
Lorg/h2/command/Parser; addExpected (Ljava/lang/String;)V 1 -1
Lorg/h2/command/Parser; readIf (Ljava/lang/String;)Z 1 -1
Lorg/h2/command/Parser; parseSet ()Lorg/h2/command/Prepared; 1 -1
Lorg/h2/command/Parser; readIfEqualOrTo ()V 1 -1
Lorg/h2/command/dml/NoOperation; <init> (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/command/Prepared; <init> (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/command/Parser; setSQL (Lorg/h2/command/Prepared;Ljava/lang/String;I)V 1 -1
Lorg/h2/command/Prepared; setSQL (Ljava/lang/String;)V 1 -1
Lorg/h2/command/Prepared; setPrepareAlways (Z)V 1 -1
Lorg/h2/command/Prepared; setParameterList (Lorg/h2/util/ObjectArray;)V 1 -1
Lorg/h2/command/Prepared; prepare ()V 1 -1
Lorg/h2/command/CommandContainer; <init> (Lorg/h2/command/Parser;Ljava/lang/String;Lorg/h2/command/Prepared;)V 1 -1
Lorg/h2/command/Command; <init> (Lorg/h2/command/Parser;Ljava/lang/String;)V 1 -1
Lorg/h2/command/Parser; getSession ()Lorg/h2/engine/Session; 1 -1
Lorg/h2/command/Prepared; setCommand (Lorg/h2/command/Command;)V 1 -1
Lorg/h2/command/Command; executeUpdate ()I 1 -1
Lorg/h2/engine/Database; isMultiThreaded ()Z 1 -1
Lorg/h2/engine/Session; waitIfExclusiveModeEnabled ()V 1 -1
Lorg/h2/engine/Database; getExclusiveSession ()Lorg/h2/engine/Session; 1 -1
Lorg/h2/engine/Session; getLogId ()I 1 -1
Lorg/h2/engine/Session; setCurrentCommand (Lorg/h2/command/Command;J)V 1 -1
Lorg/h2/engine/Database; checkPowerOff ()V 1 -1
Lorg/h2/command/CommandContainer; update ()I 1 -1
Lorg/h2/command/CommandContainer; recompileIfRequired ()V 1 -1
Lorg/h2/command/dml/NoOperation; needRecompile ()Z 1 -1
Lorg/h2/command/Command; start ()V 1 -1
Lorg/h2/command/Prepared; checkParameters ()V 1 -1
Lorg/h2/command/dml/NoOperation; update ()I 1 -1
Lorg/h2/command/Prepared; trace (JI)V 1 -1
Lorg/h2/engine/Session; getTrace ()Lorg/h2/message/Trace; 1 -1
Lorg/h2/message/Trace; isInfoEnabled ()Z 1 -1
Lorg/h2/command/Command; stop ()V 1 -1
Lorg/h2/engine/Session; closeTemporaryResults ()V 1 -1
Lorg/h2/command/CommandContainer; isTransactional ()Z 1 -1
Lorg/h2/command/dml/NoOperation; isTransactional ()Z 1 -1
Lorg/h2/engine/Session; getAutoCommit ()Z 1 -1
Lorg/h2/engine/Session; cleanTempTables (Z)V 1 -1
Lorg/h2/engine/Database; afterWriting ()V 1 -1
Lorg/h2/command/Parser; readBooleanSetting ()Z 1 -1
Lorg/h2/command/dml/Set; <init> (Lorg/h2/engine/Session;I)V 1 -1
Lorg/h2/command/dml/Set; setInt (I)V 1 -1
Lorg/h2/expression/ValueExpression; <clinit> ()V 1 -1
Lorg/h2/expression/ValueExpression; <init> (Lorg/h2/value/Value;)V 1 -1
Lorg/h2/expression/Expression; <init> ()V 1 -1
Lorg/h2/expression/ValueExpression; get (Lorg/h2/value/Value;)Lorg/h2/expression/ValueExpression; 1 -1
Lorg/h2/command/dml/Set; needRecompile ()Z 1 -1
Lorg/h2/command/dml/Set; update ()I 1 -1
Lorg/h2/command/dml/Set; getIntValue ()I 1 -1
Lorg/h2/expression/ValueExpression; optimize (Lorg/h2/engine/Session;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/expression/ValueExpression; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 1 -1
Lorg/h2/value/ValueInt; getInt ()I 1 -1
Lorg/h2/command/dml/Set; isTransactional ()Z 1 -1
Lorg/h2/engine/Engine; validateUserAndPassword (Z)V 1 -1
Lorg/h2/message/TraceObject; getNextId (I)I 1 -1
Lorg/h2/message/TraceObject; setTrace (Lorg/h2/message/Trace;II)V 1 -1
Lorg/h2/message/TraceObject; isInfoEnabled ()Z 1 -1
Lorg/dacapo/h2/TPCC; runScript (Ljava/io/InputStream;Ljava/lang/String;)I 1 -1
Lorg/h2/jdbc/JdbcConnection; isClosed ()Z 1 -1
Lorg/h2/message/TraceObject; debugCodeCall (Ljava/lang/String;)V 1 -1
Lorg/h2/engine/Session; isClosed ()Z 1 -1
Lorg/h2/tools/RunScript; execute (Ljava/sql/Connection;Ljava/io/Reader;)Ljava/sql/ResultSet; 1 -1
Lorg/h2/tools/RunScript; <init> ()V 1 -1
Lorg/h2/util/Tool; <init> ()V 1 -1
Lorg/h2/tools/RunScript; process (Ljava/sql/Connection;Ljava/io/Reader;)Ljava/sql/ResultSet; 1 -1
Lorg/h2/jdbc/JdbcConnection; createStatement ()Ljava/sql/Statement; 1 -1
Lorg/h2/message/TraceObject; isDebugEnabled ()Z 1 -1
Lorg/h2/jdbc/JdbcConnection; checkClosed ()V 1 -1
Lorg/h2/jdbc/JdbcConnection; checkClosed (Z)V 1 -1
Lorg/h2/engine/Session; isReconnectNeeded (Z)Z 1 -1
Lorg/h2/engine/Database; isReconnectNeeded ()Z 1 -1
Lorg/h2/jdbc/JdbcStatement; <init> (Lorg/h2/jdbc/JdbcConnection;IIIZ)V 1 -1
Lorg/h2/jdbc/JdbcConnection; getSession ()Lorg/h2/engine/SessionInterface; 1 -1
Lorg/h2/util/ScriptReader; <init> (Ljava/io/Reader;)V 1 -1
Lorg/h2/util/ScriptReader; readStatement ()Ljava/lang/String; 1 -1
Lorg/h2/util/ScriptReader; readStatementLoop ()Ljava/lang/String; 1 -1
Lorg/h2/util/ScriptReader; read ()I 1 -1
Lorg/h2/util/ScriptReader; readBuffer ()I 1 -1
Lorg/h2/util/ScriptReader; startRemark (Z)V 1 -1
Lorg/h2/util/ScriptReader; endRemark ()V 1 -1
Lorg/h2/util/ScriptReader; clearRemark ()V 1 -1
Lorg/h2/jdbc/JdbcStatement; execute (Ljava/lang/String;)Z 1 -1
Lorg/h2/jdbc/JdbcStatement; checkClosedForWrite ()Z 1 -1
Lorg/h2/jdbc/JdbcStatement; checkClosed (Z)Z 1 -1
Lorg/h2/engine/Database; beforeWriting ()Z 1 -1
Lorg/h2/jdbc/JdbcStatement; closeOldResultSet ()V 1 -1
Lorg/h2/jdbc/JdbcConnection; translateSQL (Ljava/lang/String;Z)Ljava/lang/String; 1 -1
Lorg/h2/jdbc/JdbcConnection; prepareCommand (Ljava/lang/String;I)Lorg/h2/command/CommandInterface; 1 -1
Lorg/h2/command/Parser; checkRunOver (III)V 1 -1
Lorg/h2/jdbc/JdbcStatement; setExecutingStatement (Lorg/h2/command/CommandInterface;)V 1 -1
Lorg/h2/jdbc/JdbcConnection; setExecutingStatement (Ljava/sql/Statement;)V 1 -1
Lorg/h2/command/CommandContainer; isQuery ()Z 1 -1
Lorg/h2/command/dml/NoOperation; isQuery ()Z 1 -1
Lorg/h2/command/Command; close ()V 1 -1
Lorg/h2/command/Parser; parseCreate ()Lorg/h2/command/Prepared; 1 -1
Lorg/h2/command/Parser; parseCreateTable (ZZZ)Lorg/h2/command/ddl/CreateTable; 1 -1
Lorg/h2/command/Parser; readIfNoExists ()Z 1 -1
Lorg/h2/command/Parser; readIdentifierWithSchema ()Ljava/lang/String; 1 -1
Lorg/h2/engine/Session; getCurrentSchemaName ()Ljava/lang/String; 1 -1
Lorg/h2/command/Parser; readIdentifierWithSchema (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/command/Parser; getSpecialType (Ljava/lang/String;)I 1 -1
Lorg/h2/command/Parser; getSchema ()Lorg/h2/schema/Schema; 1 -1
Lorg/h2/engine/Database; findSchema (Ljava/lang/String;)Lorg/h2/schema/Schema; 1 -1
Lorg/h2/command/ddl/CreateTable; <init> (Lorg/h2/engine/Session;Lorg/h2/schema/Schema;)V 1 -1
Lorg/h2/command/ddl/SchemaCommand; <init> (Lorg/h2/engine/Session;Lorg/h2/schema/Schema;)V 1 -1
Lorg/h2/command/ddl/DefineCommand; <init> (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/command/ddl/CreateTable; setPersistIndexes (Z)V 1 -1
Lorg/h2/command/ddl/CreateTable; setTemporary (Z)V 1 -1
Lorg/h2/command/ddl/CreateTable; setGlobalTemporary (Z)V 1 -1
Lorg/h2/command/ddl/CreateTable; setIfNotExists (Z)V 1 -1
Lorg/h2/command/ddl/CreateTable; setTableName (Ljava/lang/String;)V 1 -1
Lorg/h2/command/Parser; readCommentIf ()Ljava/lang/String; 1 -1
Lorg/h2/command/ddl/CreateTable; setComment (Ljava/lang/String;)V 1 -1
Lorg/h2/command/Parser; read (Ljava/lang/String;)V 1 -1
Lorg/h2/command/Parser; parseAlterTableAddConstraintIf (Ljava/lang/String;Lorg/h2/schema/Schema;)Lorg/h2/command/Prepared; 1 -1
Lorg/h2/command/Parser; readColumnIdentifier ()Ljava/lang/String; 1 -1
Lorg/h2/command/Parser; parseColumnForTable (Ljava/lang/String;)Lorg/h2/table/Column; 1 -1
Lorg/h2/command/Parser; parseColumn (Ljava/lang/String;)Lorg/h2/table/Column; 1 -1
Lorg/h2/engine/Database; findUserDataType (Ljava/lang/String;)Lorg/h2/engine/UserDataType; 1 -1
Lorg/h2/engine/Database; getIgnoreCase ()Z 1 -1
Lorg/h2/table/Column; setComment (Ljava/lang/String;)V 1 -1
Lorg/h2/table/Column; setOriginalSQL (Ljava/lang/String;)V 1 -1
Lorg/h2/table/Column; isAutoIncrement ()Z 1 -1
Lorg/h2/command/ddl/CreateTable; addColumn (Lorg/h2/table/Column;)V 1 -1
Lorg/h2/command/Parser; readIfMore ()Z 1 -1
Lorg/h2/command/Parser; checkLiterals (Z)V 1 -1
Lorg/h2/engine/Session; getAllowLiterals ()Z 1 -1
Lorg/h2/engine/Database; getAllowLiterals ()I 1 -1
Lorg/h2/command/Parser; readLong ()J 1 -1
Lorg/h2/value/ValueInt; getType ()I 1 -1
Lorg/h2/value/ValueInt; getLong ()J 1 -1
Lorg/h2/util/MathUtils; convertLongToInt (J)I 1 -1
Lorg/h2/command/Parser; getInt ()I 1 -1
Lorg/h2/command/Prepared; isQuery ()Z 1 -1
Lorg/h2/command/Prepared; needRecompile ()Z 1 -1
Lorg/h2/command/ddl/CreateTable; update ()I 1 -1
Lorg/h2/command/ddl/SchemaCommand; getSchema ()Lorg/h2/schema/Schema; 1 -1
Lorg/h2/schema/Schema; findTableOrView (Lorg/h2/engine/Session;Ljava/lang/String;)Lorg/h2/table/Table; 1 -1
Lorg/h2/engine/Session; findLocalTempTable (Ljava/lang/String;)Lorg/h2/table/Table; 1 -1
Lorg/h2/table/Column; getSequence ()Lorg/h2/schema/Sequence; 1 -1
Lorg/h2/command/Prepared; getObjectId (ZZ)I 1 -1
Lorg/h2/table/TableData; setGlobalTemporary (Z)V 1 -1
Lorg/h2/table/TableData; getHeadPos ()I 1 -1
Lorg/h2/table/TableData; getCreateSQL ()Ljava/lang/String; 1 -1
Lorg/h2/util/StatementBuilder; <init> (Ljava/lang/String;)V 1 -1
Lorg/h2/table/Column; getCreateSQL ()Ljava/lang/String; 1 -1
Lorg/h2/table/Table; isPersistData ()Z 1 -1
Lorg/h2/table/Column; prepareExpression (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/command/ddl/DefineCommand; isTransactional ()Z 1 -1
Lorg/h2/jdbc/JdbcConnection; getAutoCommit ()Z 1 -1
Lorg/h2/jdbc/JdbcConnection; getInternalAutoCommit ()Z 1 -1
Lorg/h2/jdbc/JdbcConnection; prepareCommand (Ljava/lang/String;Lorg/h2/command/CommandInterface;)Lorg/h2/command/CommandInterface; 1 -1
Lorg/h2/command/Parser; parserCall ()Lorg/h2/command/dml/Call; 1 -1
Lorg/h2/command/dml/Call; <init> (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/command/Parser; readExpression ()Lorg/h2/expression/Expression; 1 -1
Lorg/h2/command/Parser; readAnd ()Lorg/h2/expression/Expression; 1 -1
Lorg/h2/command/Parser; readCondition ()Lorg/h2/expression/Expression; 1 -1
Lorg/h2/command/Parser; readConcat ()Lorg/h2/expression/Expression; 1 -1
Lorg/h2/command/Parser; readSum ()Lorg/h2/expression/Expression; 1 -1
Lorg/h2/command/Parser; readFactor ()Lorg/h2/expression/Expression; 1 -1
Lorg/h2/command/Parser; readTerm ()Lorg/h2/expression/Expression; 1 -1
Lorg/h2/command/Parser; readFunction (Ljava/lang/String;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/expression/Aggregate; <clinit> ()V 1 -1
Lorg/h2/expression/Aggregate; addAggregate (Ljava/lang/String;I)V 1 -1
Lorg/h2/expression/Aggregate; getAggregateType (Ljava/lang/String;)I 1 -1
Lorg/h2/expression/Function; <clinit> ()V 1 -1
Ljava/util/concurrent/ConcurrentHashMap$Segment; getFirst (I)Ljava/util/concurrent/ConcurrentHashMap$HashEntry; 1 -1
Lorg/h2/expression/Function; addFunction (Ljava/lang/String;III)V 1 -1
Lorg/h2/expression/Function; addFunction (Ljava/lang/String;IIIZZ)V 1 -1
Lorg/h2/expression/FunctionInfo; <init> ()V 1 -1
Lorg/h2/expression/Function; addFunctionNotDeterministic (Ljava/lang/String;III)V 1 -1
Lorg/h2/expression/Function; addFunctionWithNull (Ljava/lang/String;III)V 1 -1
Lorg/h2/expression/Function; getFunction (Lorg/h2/engine/Database;Ljava/lang/String;)Lorg/h2/expression/Function; 1 -1
Lorg/h2/expression/Function; getFunctionInfo (Ljava/lang/String;)Lorg/h2/expression/FunctionInfo; 1 -1
Lorg/h2/expression/Function; <init> (Lorg/h2/engine/Database;Lorg/h2/expression/FunctionInfo;)V 1 -1
Lorg/h2/expression/Function; getFunctionType ()I 1 -1
Lorg/h2/expression/Function; doneWithParameters ()V 1 -1
Lorg/h2/command/Parser; getCompareType (I)I 1 -1
Lorg/h2/command/dml/Call; setValue (Lorg/h2/expression/Expression;)V 1 -1
Lorg/h2/command/dml/Call; prepare ()V 1 -1
Lorg/h2/expression/Function; optimize (Lorg/h2/engine/Session;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/command/Command; executeQuery (IZ)Lorg/h2/result/ResultInterface; 1 -1
Lorg/h2/command/Command; executeQueryLocal (I)Lorg/h2/result/LocalResult; 1 -1
Lorg/h2/command/CommandContainer; query (I)Lorg/h2/result/LocalResult; 1 -1
Lorg/h2/command/dml/Call; query (I)Lorg/h2/result/LocalResult; 1 -1
Lorg/h2/command/Prepared; setCurrentRowNumber (I)V 1 -1
Lorg/h2/expression/Function; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 1 -1
Lorg/h2/expression/Function; getValueWithArgs (Lorg/h2/engine/Session;[Lorg/h2/expression/Expression;)Lorg/h2/value/Value; 1 -1
Lorg/h2/expression/Function; getNullOrValue (Lorg/h2/engine/Session;[Lorg/h2/expression/Expression;I)Lorg/h2/value/Value; 1 -1
Lorg/h2/expression/Function; getSimpleValue (Lorg/h2/engine/Session;Lorg/h2/value/Value;[Lorg/h2/expression/Expression;)Lorg/h2/value/Value; 1 -1
Lorg/h2/value/ValueBoolean; <clinit> ()V 1 -1
Lorg/h2/value/ValueBoolean; <init> (Z)V 1 -1
Lorg/h2/value/ValueBoolean; get (Z)Lorg/h2/value/ValueBoolean; 1 -1
Lorg/h2/value/ValueBoolean; getType ()I 1 -1
Lorg/h2/result/LocalResult; <init> (Lorg/h2/engine/Session;Lorg/h2/util/ObjectArray;I)V 1 -1
Lorg/h2/result/LocalResult; getList (Lorg/h2/util/ObjectArray;)[Lorg/h2/expression/Expression; 1 -1
Lorg/h2/result/LocalResult; <init> (Lorg/h2/engine/Session;[Lorg/h2/expression/Expression;I)V 1 -1
Lorg/h2/engine/Database; getMaxMemoryRows ()I 1 -1
Lorg/h2/result/LocalResult; addRow ([Lorg/h2/value/Value;)V 1 -1
Lorg/h2/result/LocalResult; done ()V 1 -1
Lorg/h2/result/LocalResult; applyOffset ()V 1 -1
Lorg/h2/result/LocalResult; applyLimit ()V 1 -1
Lorg/h2/result/LocalResult; reset ()V 1 -1
Lorg/h2/result/LocalResult; getRowCount ()I 1 -1
Lorg/h2/command/dml/Call; isTransactional ()Z 1 -1
Lorg/h2/result/LocalResult; next ()Z 1 -1
Lorg/h2/result/LocalResult; currentRow ()[Lorg/h2/value/Value; 1 -1
Lorg/h2/value/ValueBoolean; getBoolean ()Ljava/lang/Boolean; 1 -1
Lorg/h2/result/LocalResult; close ()V 1 -1
Lorg/h2/table/Column; setAutoIncrement (ZJJ)V 1 -1
Lorg/h2/table/Column; isPrimaryKey ()Z 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; <init> (Lorg/h2/engine/Session;Lorg/h2/schema/Schema;Z)V 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; setType (I)V 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; setTableName (Ljava/lang/String;)V 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; setIndexColumns ([Lorg/h2/table/IndexColumn;)V 1 -1
Lorg/h2/command/ddl/CreateTable; addConstraintCommand (Lorg/h2/command/Prepared;)V 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; getType ()I 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; getIndexColumns ()[Lorg/h2/table/IndexColumn; 1 -1
Lorg/h2/command/ddl/CreateTable; setPrimaryKeyColumns ([Lorg/h2/table/IndexColumn;)Z 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; setPrimaryKeyHash (Z)V 1 -1
Lorg/h2/expression/Function; checkParameterCount (I)V 1 -1
Lorg/h2/table/Column; setDefaultExpression (Lorg/h2/engine/Session;Lorg/h2/expression/Expression;)V 1 -1
Lorg/h2/expression/Expression; isConstant ()Z 1 -1
Lorg/h2/expression/ExpressionColumn; <init> (Lorg/h2/engine/Database;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/h2/expression/ConditionIn; <init> (Lorg/h2/engine/Database;Lorg/h2/expression/Expression;Lorg/h2/util/ObjectArray;)V 1 -1
Lorg/h2/expression/Condition; <init> ()V 1 -1
Lorg/h2/table/Column; addCheckConstraint (Lorg/h2/engine/Session;Lorg/h2/expression/Expression;)V 1 -1
Lorg/h2/table/SingleColumnResolver; <init> (Lorg/h2/table/Column;)V 1 -1
Lorg/h2/expression/ConditionIn; mapColumns (Lorg/h2/table/ColumnResolver;I)V 1 -1
Lorg/h2/expression/ExpressionColumn; mapColumns (Lorg/h2/table/ColumnResolver;I)V 1 -1
Lorg/h2/table/SingleColumnResolver; getColumns ()[Lorg/h2/table/Column; 1 -1
Lorg/h2/expression/ExpressionColumn; mapColumn (Lorg/h2/table/ColumnResolver;Lorg/h2/table/Column;I)V 1 -1
Lorg/h2/expression/ValueExpression; mapColumns (Lorg/h2/table/ColumnResolver;I)V 1 -1
Lorg/h2/expression/ConditionIn; optimize (Lorg/h2/engine/Session;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/expression/ExpressionColumn; optimize (Lorg/h2/engine/Session;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/table/SingleColumnResolver; optimize (Lorg/h2/expression/ExpressionColumn;Lorg/h2/table/Column;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/expression/ValueExpression; isConstant ()Z 1 -1
Lorg/h2/util/ObjectArray; set (ILjava/lang/Object;)V 1 -1
Lorg/h2/table/SingleColumnResolver; setValue (Lorg/h2/value/Value;)V 1 -1
Lorg/h2/expression/ConditionIn; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 1 -1
Lorg/h2/expression/ExpressionColumn; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 1 -1
Lorg/h2/table/SingleColumnResolver; getSelect ()Lorg/h2/command/dml/Select; 1 -1
Lorg/h2/table/SingleColumnResolver; getValue (Lorg/h2/table/Column;)Lorg/h2/value/Value; 1 -1
Lorg/h2/table/Column; getCheckConstraintSQL (Lorg/h2/engine/Session;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/table/Column; getCheckConstraint (Lorg/h2/engine/Session;Ljava/lang/String;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/expression/ConditionIn; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/expression/ExpressionColumn; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/expression/ValueExpression; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/value/ValueStringBase; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/util/StringUtils; quoteStringSQL (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/command/Parser; parseExpression (Ljava/lang/String;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/value/ValueString; getType ()I 1 -1
Lorg/h2/value/ValueString; equals (Ljava/lang/Object;)Z 1 -1
Lorg/h2/table/Column; convertAutoIncrementToSequence (Lorg/h2/engine/Session;Lorg/h2/schema/Schema;IZ)V 1 -1
Lorg/h2/value/ValueUuid; getNewRandom ()Lorg/h2/value/ValueUuid; 1 -1
Lorg/h2/util/RandomUtils; getSecureLong ()J 1 -1
Ljava/util/Random; nextLong ()J 1 -1
Ljava/security/SecureRandom; next (I)I 1 -1
Lorg/h2/value/ValueUuid; <init> (JJ)V 1 -1
Lorg/h2/value/ValueUuid; getString ()Ljava/lang/String; 1 -1
Lorg/h2/value/ValueUuid; appendHex (Ljava/lang/StringBuilder;JI)V 1 -1
Lorg/h2/schema/Schema; findSequence (Ljava/lang/String;)Lorg/h2/schema/Sequence; 1 -1
Lorg/h2/schema/Sequence; <init> (Lorg/h2/schema/Schema;ILjava/lang/String;Z)V 1 -1
Lorg/h2/schema/Sequence; setStartValue (J)V 1 -1
Lorg/h2/schema/Sequence; setIncrement (J)V 1 -1
Lorg/h2/schema/Sequence; getType ()I 1 -1
Lorg/h2/schema/Sequence; getCreateSQL ()Ljava/lang/String; 1 -1
Lorg/h2/expression/SequenceValue; <init> (Lorg/h2/schema/Sequence;)V 1 -1
Lorg/h2/expression/SequenceValue; optimize (Lorg/h2/engine/Session;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/table/Column; setSequence (Lorg/h2/schema/Sequence;)V 1 -1
Lorg/h2/expression/SequenceValue; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/expression/Function; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/util/StatementBuilder; append (C)Lorg/h2/util/StatementBuilder; 1 -1
Lorg/h2/table/TableFilter; <init> (Lorg/h2/engine/Session;Lorg/h2/table/Table;Ljava/lang/String;ZLorg/h2/command/dml/Select;)V 1 -1
Lorg/h2/index/IndexCursor; <init> ()V 1 -1
Lorg/h2/engine/Session; getUser ()Lorg/h2/engine/User; 1 -1
Lorg/h2/engine/User; checkRight (Lorg/h2/table/Table;I)V 1 -1
Lorg/h2/engine/Session; nextObjectId ()I 1 -1
Lorg/h2/expression/SequenceValue; mapColumns (Lorg/h2/table/ColumnResolver;I)V 1 -1
Lorg/h2/expression/Function; mapColumns (Lorg/h2/table/ColumnResolver;I)V 1 -1
Lorg/h2/table/Table; addSequence (Lorg/h2/schema/Sequence;)V 1 -1
Lorg/h2/table/Table; add (Lorg/h2/util/ObjectArray;Ljava/lang/Object;)Lorg/h2/util/ObjectArray; 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; update ()I 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; tryUpdate ()I 1 -1
Lorg/h2/schema/Schema; getTableOrView (Lorg/h2/engine/Session;Ljava/lang/String;)Lorg/h2/table/Table; 1 -1
Lorg/h2/schema/Schema; findConstraint (Lorg/h2/engine/Session;Ljava/lang/String;)Lorg/h2/constraint/Constraint; 1 -1
Lorg/h2/engine/Session; findLocalTempTableConstraint (Ljava/lang/String;)Lorg/h2/constraint/Constraint; 1 -1
Lorg/h2/table/Table; checkWritingAllowed ()V 1 -1
Lorg/h2/table/IndexColumn; mapColumns ([Lorg/h2/table/IndexColumn;Lorg/h2/table/Table;)V 1 -1
Lorg/h2/table/Table; findPrimaryKey ()Lorg/h2/index/Index; 1 -1
Lorg/h2/index/BaseIndex; getIndexType ()Lorg/h2/index/IndexType; 1 -1
Lorg/h2/table/Table; getConstraints ()Lorg/h2/util/ObjectArray; 1 -1
Lorg/h2/schema/Schema; getUniqueIndexName (Lorg/h2/engine/Session;Lorg/h2/table/Table;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/schema/Schema; getUniqueName (Lorg/h2/engine/DbObject;Ljava/util/HashMap;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/index/MultiVersionIndex; isTemporary ()Z 1 -1
Lorg/h2/index/MultiVersionIndex; getHeadPos ()I 1 -1
Lorg/h2/index/MultiVersionIndex; getIndexType ()Lorg/h2/index/IndexType; 1 -1
Lorg/h2/index/IndexType; setBelongsToConstraint (Z)V 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; generateConstraintName (Lorg/h2/table/Table;)Ljava/lang/String; 1 -1
Lorg/h2/schema/Schema; getUniqueConstraintName (Lorg/h2/engine/Session;Lorg/h2/table/Table;)Ljava/lang/String; 1 -1
Lorg/h2/constraint/ConstraintUnique; <init> (Lorg/h2/schema/Schema;ILjava/lang/String;Lorg/h2/table/Table;Z)V 1 -1
Lorg/h2/constraint/Constraint; <init> (Lorg/h2/schema/Schema;ILjava/lang/String;Lorg/h2/table/Table;)V 1 -1
Lorg/h2/constraint/ConstraintUnique; setColumns ([Lorg/h2/table/IndexColumn;)V 1 -1
Lorg/h2/constraint/ConstraintUnique; setIndex (Lorg/h2/index/Index;Z)V 1 -1
Lorg/h2/constraint/Constraint; getType ()I 1 -1
Lorg/h2/constraint/ConstraintUnique; getCreateSQL ()Ljava/lang/String; 1 -1
Lorg/h2/constraint/ConstraintUnique; getCreateSQLForCopy (Lorg/h2/table/Table;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/constraint/ConstraintUnique; getCreateSQLForCopy (Lorg/h2/table/Table;Ljava/lang/String;Z)Ljava/lang/String; 1 -1
Lorg/h2/constraint/ConstraintUnique; getTypeName ()Ljava/lang/String; 1 -1
Lorg/h2/index/MultiVersionIndex; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/table/Table; addConstraint (Lorg/h2/constraint/Constraint;)V 1 -1
Lorg/h2/command/Parser; checkSchema (Lorg/h2/schema/Schema;)V 1 -1
Lorg/h2/command/ddl/CreateIndex; <init> (Lorg/h2/engine/Session;Lorg/h2/schema/Schema;)V 1 -1
Lorg/h2/command/ddl/CreateIndex; setIfNotExists (Z)V 1 -1
Lorg/h2/command/ddl/CreateIndex; setHash (Z)V 1 -1
Lorg/h2/command/ddl/CreateIndex; setPrimaryKey (Z)V 1 -1
Lorg/h2/command/ddl/CreateIndex; setTableName (Ljava/lang/String;)V 1 -1
Lorg/h2/command/ddl/CreateIndex; setUnique (Z)V 1 -1
Lorg/h2/command/ddl/CreateIndex; setIndexName (Ljava/lang/String;)V 1 -1
Lorg/h2/command/ddl/CreateIndex; setComment (Ljava/lang/String;)V 1 -1
Lorg/h2/command/Parser; parseIndexColumnList ()[Lorg/h2/table/IndexColumn; 1 -1
Lorg/h2/command/ddl/CreateIndex; setIndexColumns ([Lorg/h2/table/IndexColumn;)V 1 -1
Lorg/h2/command/ddl/CreateIndex; update ()I 1 -1
Lorg/h2/schema/Schema; findIndex (Lorg/h2/engine/Session;Ljava/lang/String;)Lorg/h2/index/Index; 1 -1
Lorg/h2/engine/Session; findLocalTempTableIndex (Ljava/lang/String;)Lorg/h2/index/Index; 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; setConstraintName (Ljava/lang/String;)V 1 -1
Lorg/h2/command/Parser; parseReferences (Lorg/h2/command/ddl/AlterTableAddConstraint;Lorg/h2/schema/Schema;Ljava/lang/String;)V 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; setRefTableName (Lorg/h2/schema/Schema;Ljava/lang/String;)V 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; setRefIndexColumns ([Lorg/h2/table/IndexColumn;)V 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; getIndex (Lorg/h2/table/Table;[Lorg/h2/table/IndexColumn;)Lorg/h2/index/Index; 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; canUseIndex (Lorg/h2/index/Index;Lorg/h2/table/Table;[Lorg/h2/table/IndexColumn;)Z 1 -1
Lorg/h2/index/BaseIndex; getTable ()Lorg/h2/table/Table; 1 -1
Lorg/h2/index/ScanIndex; getCreateSQL ()Ljava/lang/String; 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; createIndex (Lorg/h2/table/Table;[Lorg/h2/table/IndexColumn;Z)Lorg/h2/index/Index; 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; getUniqueIndex (Lorg/h2/table/Table;[Lorg/h2/table/IndexColumn;)Lorg/h2/index/Index; 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; canUseUniqueIndex (Lorg/h2/index/Index;Lorg/h2/table/Table;[Lorg/h2/table/IndexColumn;)Z 1 -1
Lorg/h2/index/IndexType; isUnique ()Z 1 -1
Lorg/h2/index/MultiVersionIndex; getTable ()Lorg/h2/table/Table; 1 -1
Lorg/h2/index/MultiVersionIndex; getColumns ()[Lorg/h2/table/Column; 1 -1
Lorg/h2/table/Column; hashCode ()I 1 -1
Lorg/h2/constraint/ConstraintReferential; <init> (Lorg/h2/schema/Schema;ILjava/lang/String;Lorg/h2/table/Table;)V 1 -1
Lorg/h2/constraint/ConstraintReferential; setColumns ([Lorg/h2/table/IndexColumn;)V 1 -1
Lorg/h2/constraint/ConstraintReferential; setIndex (Lorg/h2/index/Index;Z)V 1 -1
Lorg/h2/constraint/ConstraintReferential; setRefTable (Lorg/h2/table/Table;)V 1 -1
Lorg/h2/constraint/ConstraintReferential; setRefColumns ([Lorg/h2/table/IndexColumn;)V 1 -1
Lorg/h2/constraint/ConstraintReferential; setRefIndex (Lorg/h2/index/Index;Z)V 1 -1
Lorg/h2/constraint/ConstraintReferential; setDeleteAction (I)V 1 -1
Lorg/h2/constraint/ConstraintReferential; setUpdateAction (I)V 1 -1
Lorg/h2/constraint/ConstraintReferential; getCreateSQL ()Ljava/lang/String; 1 -1
Lorg/h2/constraint/ConstraintReferential; getCreateSQLForCopy (Lorg/h2/table/Table;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/constraint/ConstraintReferential; getCreateSQLForCopy (Lorg/h2/table/Table;Lorg/h2/table/Table;Ljava/lang/String;Z)Ljava/lang/String; 1 -1
Lorg/h2/util/StatementBuilder; resetCount ()Lorg/h2/util/StatementBuilder; 1 -1
Lorg/h2/command/Prepared; setModificationMetaId (J)V 1 -1
Lorg/h2/command/Prepared; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/command/Prepared; getParameters ()Lorg/h2/util/ObjectArray; 1 -1
Lorg/h2/command/Parser; parseOnly (Ljava/lang/String;)Lorg/h2/command/Prepared; 1 -1
Lorg/h2/command/Prepared; getModificationMetaId ()J 1 -1
Lorg/dacapo/h2/TPCC; loadData ()V 1 -1
Lorg/dacapo/h2/TPCCDataSource; <init> (Ljava/sql/Driver;Ljava/lang/String;Ljava/util/Properties;)V 1 -1
Lorg/dacapo/h2/TPCCDataSource$NullWriter; <init> (Lorg/dacapo/h2/TPCCDataSource;Lorg/dacapo/h2/TPCCDataSource$1;)V 1 -1
Lorg/dacapo/h2/TPCCDataSource$NullWriter; <init> (Lorg/dacapo/h2/TPCCDataSource;)V 1 -1
Lorg/apache/derbyTesting/system/oe/load/ThreadInsert; <init> (Ljavax/sql/DataSource;)V 1 -1
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; <init> ()V 1 -1
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; setSeed (J)V 1 -1
Lorg/apache/derbyTesting/system/oe/load/ThreadInsert; setupLoad (Ljava/sql/Connection;S)V 1 -1
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; setupLoad (Ljava/sql/Connection;S)V 1 -1
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; setupConnection (Ljava/sql/Connection;S)V 1 -1
Lorg/h2/jdbc/JdbcConnection; setAutoCommit (Z)V 1 -1
Lorg/h2/command/dml/TransactionCommand; <init> (Lorg/h2/engine/Session;I)V 1 -1
Lorg/h2/command/dml/TransactionCommand; needRecompile ()Z 1 -1
Lorg/h2/command/dml/TransactionCommand; update ()I 1 -1
Lorg/h2/engine/Session; setAutoCommit (Z)V 1 -1
Lorg/h2/command/dml/TransactionCommand; isTransactional ()Z 1 -1
Lorg/h2/jdbc/JdbcConnection; setTransactionIsolation (I)V 1 -1
Lorg/h2/message/TraceObject; debugCodeCall (Ljava/lang/String;J)V 1 -1
Lorg/h2/jdbc/JdbcConnection; commit ()V 1 -1
Lorg/h2/jdbc/JdbcConnection; checkClosedForWrite ()V 1 -1
Lorg/h2/command/Parser; parseCommit ()Lorg/h2/command/dml/TransactionCommand; 1 -1
Lorg/h2/command/dml/SetTypes; getType (Ljava/lang/String;)I 1 -1
Lorg/h2/expression/Parameter; <init> (I)V 1 -1
Lorg/h2/command/dml/Set; setExpression (Lorg/h2/expression/Expression;)V 1 -1
Lorg/h2/command/CommandContainer; getParameters ()Lorg/h2/util/ObjectArray; 1 -1
Lorg/h2/expression/Parameter; setValue (Lorg/h2/value/Value;Z)V 1 -1
Lorg/h2/expression/Parameter; checkSet ()V 1 -1
Lorg/h2/engine/User; checkAdmin ()V 1 -1
Lorg/h2/expression/Parameter; optimize (Lorg/h2/engine/Session;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/expression/Parameter; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 1 -1
Lorg/h2/expression/Parameter; getParamValue ()Lorg/h2/value/Value; 1 -1
Lorg/h2/engine/Database; setLockMode (I)V 1 -1
Lorg/h2/command/dml/Set; addOrUpdateSetting (Ljava/lang/String;Ljava/lang/String;I)V 1 -1
Lorg/h2/engine/Database; isReadOnly ()Z 1 -1
Lorg/h2/command/Parser; parseDrop ()Lorg/h2/command/Prepared; 1 -1
Lorg/h2/command/Parser; readIfExists (Z)Z 1 -1
Lorg/h2/command/ddl/DropTable; <init> (Lorg/h2/engine/Session;Lorg/h2/schema/Schema;)V 1 -1
Lorg/h2/command/ddl/DropTable; setTableName (Ljava/lang/String;)V 1 -1
Lorg/h2/command/ddl/DropTable; setIfExists (Z)V 1 -1
Lorg/h2/command/ddl/DropTable; update ()I 1 -1
Lorg/h2/command/ddl/DropTable; prepareDrop ()V 1 -1
Lorg/h2/message/Message; <clinit> ()V 1 -1
Lorg/h2/util/Resources; <clinit> ()V 1 -1
Lorg/h2/util/Resources; loadFromZip ()V 1 -1
Lorg/h2/util/IOUtils; copy (Ljava/io/InputStream;Ljava/io/OutputStream;)J 1 -1
Lorg/h2/util/Resources; get (Ljava/lang/String;)[B 1 -1
Lorg/h2/message/Message; getSQLException (ILjava/lang/String;)Lorg/h2/jdbc/JdbcSQLException; 1 -1
Lorg/h2/message/Message; getSQLException (I[Ljava/lang/String;)Lorg/h2/jdbc/JdbcSQLException; 1 -1
Lorg/h2/message/Message; getSQLException (ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/jdbc/JdbcSQLException; 1 -1
Lorg/h2/constant/ErrorCode; getState (I)Ljava/lang/String; 1 -1
Lorg/h2/message/Message; translate (Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/util/StringUtils; quoteIdentifier (Ljava/lang/String;)Ljava/lang/String; 1 -1
Ljava/text/MessageFormat; format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; 1 -1
Ljava/text/MessageFormat; <init> (Ljava/lang/String;)V 1 -1
Ljava/text/MessageFormat; <init> (Ljava/lang/String;Ljava/util/Locale;)V 1 -1
Ljava/text/MessageFormat; applyPattern (Ljava/lang/String;)V 1 -1
Ljava/text/MessageFormat; scanString (Ljava/lang/String;ILgnu/java/lang/CPStringBuilder;)I 1 -1
Ljava/text/MessageFormat; scanFormat (Ljava/lang/String;ILgnu/java/lang/CPStringBuilder;Ljava/util/List;Ljava/util/Locale;)I 1 -1
Ljava/text/MessageFormat$MessageFormatElement; <init> (Ljava/text/MessageFormat$1;)V 1 -1
Ljava/text/MessageFormat$MessageFormatElement; <init> ()V 1 -1
Ljava/text/MessageFormat; scanFormatElement (Ljava/lang/String;ILgnu/java/lang/CPStringBuilder;C)I 1 -1
Ljava/text/MessageFormat$MessageFormatElement; setLocale (Ljava/util/Locale;)V 1 -1
Ljava/text/FieldPosition; <init> (I)V 1 -1
Ljava/text/MessageFormat; formatInternal ([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Lgnu/java/text/FormatCharacterIterator;)Ljava/lang/StringBuffer; 1 -1
Ljava/text/FieldPosition; getField ()I 1 -1
Ljava/text/FieldPosition; getFieldAttribute ()Ljava/text/Format$Field; 1 -1
Ljava/text/AttributedCharacterIterator$Attribute; <clinit> ()V 1 -1
Ljava/text/AttributedCharacterIterator$Attribute; <init> (Ljava/lang/String;)V 1 -1
Ljava/text/MessageFormat$Field; <clinit> ()V 1 -1
Ljava/text/MessageFormat$Field; <init> (Ljava/lang/String;)V 1 -1
Ljava/text/Format$Field; <init> (Ljava/lang/String;)V 1 -1
Lorg/h2/jdbc/JdbcSQLException; <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;Ljava/lang/String;)V 1 -1
Ljava/sql/SQLException; <init> (Ljava/lang/String;Ljava/lang/String;I)V 1 -1
Lorg/h2/jdbc/JdbcSQLException; setSQL (Ljava/lang/String;)V 1 -1
Lorg/h2/jdbc/JdbcSQLException; buildMessage ()V 1 -1
Ljava/sql/SQLException; getErrorCode ()I 1 -1
Lorg/h2/message/Message; addSQL (Ljava/sql/SQLException;Ljava/lang/String;)Ljava/sql/SQLException; 1 -1
Lorg/h2/jdbc/JdbcSQLException; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/engine/Database; exceptionThrown (Ljava/sql/SQLException;Ljava/lang/String;)V 1 -1
Lorg/h2/engine/Session; rollbackTo (IZ)V 1 -1
Lorg/h2/message/TraceObject; logAndConvert (Ljava/lang/Exception;)Ljava/sql/SQLException; 1 -1
Lorg/h2/message/Trace; error (Ljava/lang/String;Ljava/lang/Throwable;)V 1 -1
Lorg/h2/message/TraceSystem; write (ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; <clinit> ()V 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; <init> (IJ)V 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomInt (II)I 1 -1
Ljava/util/Random; nextDouble ()D 1 -1
Ljava/util/Random; next (I)I 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; initAStrings ()V 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomAString (II)Ljava/lang/String; 1 -1
Lorg/h2/command/Parser; parseInsert ()Lorg/h2/command/dml/Insert; 1 -1
Lorg/h2/command/dml/Insert; <init> (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/command/Parser; readTableOrView ()Lorg/h2/table/Table; 1 -1
Lorg/h2/command/Parser; readTableOrView (Ljava/lang/String;)Lorg/h2/table/Table; 1 -1
Lorg/h2/engine/Database; getSchema (Ljava/lang/String;)Lorg/h2/schema/Schema; 1 -1
Lorg/h2/command/dml/Insert; setTable (Lorg/h2/table/Table;)V 1 -1
Lorg/h2/command/dml/Insert; addRow ([Lorg/h2/expression/Expression;)V 1 -1
Lorg/h2/command/dml/Insert; prepare ()V 1 -1
Lorg/h2/table/Table; getColumns ()[Lorg/h2/table/Column; 1 -1
Lorg/h2/command/dml/Insert; setCommand (Lorg/h2/command/Command;)V 1 -1
Lorg/h2/command/dml/Insert; update ()I 1 -1
Lorg/h2/command/dml/Insert; insertRows ()I 1 -1
Lorg/h2/table/Column; convert (Lorg/h2/value/Value;)Lorg/h2/value/Value; 1 -1
Lorg/h2/value/Value; convertTo (I)Lorg/h2/value/Value; 1 -1
Lorg/h2/table/Table; fireBefore (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/table/Table; fire (Lorg/h2/engine/Session;Z)V 1 -1
Lorg/h2/table/Table; validateConvertUpdateSequence (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 1 -1
Lorg/h2/table/Column; getComputed ()Z 1 -1
Lorg/h2/table/Column; validateConvertUpdateSequence (Lorg/h2/engine/Session;Lorg/h2/value/Value;)Lorg/h2/value/Value; 1 -1
Lorg/h2/value/Value; convertScale (ZI)Lorg/h2/value/Value; 1 -1
Lorg/h2/value/Value; checkPrecision (J)Z 1 -1
Lorg/h2/value/ValueInt; getPrecision ()J 1 -1
Lorg/h2/table/Column; updateSequenceIfRequired (Lorg/h2/engine/Session;Lorg/h2/value/Value;)V 1 -1
Lorg/h2/table/Table; fireBeforeRow (Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;)V 1 -1
Lorg/h2/table/Table; fireRow (Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;Z)V 1 -1
Lorg/h2/table/Table; fireConstraints (Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;Z)V 1 -1
Lorg/h2/table/Table; fireAfter (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/table/Table; fireAfterRow (Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;)V 1 -1
Lorg/h2/command/dml/Insert; isTransactional ()Z 1 -1
Lorg/h2/jdbc/JdbcStatement; close ()V 1 -1
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; setRandomGenerator ()V 1 -1
Lorg/h2/jdbc/JdbcStatement; executeQuery (Ljava/lang/String;)Ljava/sql/ResultSet; 1 -1
Lorg/h2/jdbc/JdbcStatement; checkClosed ()Z 1 -1
Lorg/h2/command/Parser; parseSelect ()Lorg/h2/command/dml/Query; 1 -1
Lorg/h2/command/Parser; parseSelectUnion ()Lorg/h2/command/dml/Query; 1 -1
Lorg/h2/command/Parser; parseSelectSub ()Lorg/h2/command/dml/Query; 1 -1
Lorg/h2/command/Parser; parseSelectSimple ()Lorg/h2/command/dml/Select; 1 -1
Lorg/h2/command/dml/Select; <init> (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/command/dml/Query; <init> (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/command/Parser; parseSelectSimpleSelectPart (Lorg/h2/command/dml/Select;)V 1 -1
Lorg/h2/command/dml/Select; setExpressions (Lorg/h2/util/ObjectArray;)V 1 -1
Lorg/h2/command/Parser; parseSelectSimpleFromPart (Lorg/h2/command/dml/Select;)V 1 -1
Lorg/h2/command/Parser; readTableFilter (Z)Lorg/h2/table/TableFilter; 1 -1
Lorg/h2/command/Parser; readFromAlias (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/command/Parser; parseJoinTableFilter (Lorg/h2/table/TableFilter;Lorg/h2/command/dml/Select;)V 1 -1
Lorg/h2/table/TableFilter; isJoinOuter ()Z 1 -1
Lorg/h2/command/Parser; readJoin (Lorg/h2/table/TableFilter;Lorg/h2/command/dml/Select;Z)Lorg/h2/table/TableFilter; 1 -1
Lorg/h2/command/dml/Select; addTableFilter (Lorg/h2/table/TableFilter;Z)V 1 -1
Lorg/h2/table/TableFilter; getJoin ()Lorg/h2/table/TableFilter; 1 -1
Lorg/h2/command/Parser; parseSelectUnionExtension (Lorg/h2/command/dml/Query;IZ)Lorg/h2/command/dml/Query; 1 -1
Lorg/h2/command/Parser; parseEndOfQuery (Lorg/h2/command/dml/Query;)V 1 -1
Lorg/h2/command/dml/Select; init ()V 1 -1
Lorg/h2/command/dml/Select; expandColumnList ()V 1 -1
Lorg/h2/expression/Expression; isWildcard ()Z 1 -1
Lorg/h2/table/TableFilter; getColumns ()[Lorg/h2/table/Column; 1 -1
Lorg/h2/command/dml/Select; prepare ()V 1 -1
Lorg/h2/table/TableFilter; optimize (Lorg/h2/expression/ExpressionColumn;Lorg/h2/table/Column;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/command/dml/Select; preparePlan ()D 1 -1
Lorg/h2/table/TableFilter; setFullCondition (Lorg/h2/expression/Expression;)V 1 -1
Lorg/h2/command/dml/Optimizer; <init> ([Lorg/h2/table/TableFilter;Lorg/h2/expression/Expression;Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/command/dml/Optimizer; optimize ()V 1 -1
Lorg/h2/command/dml/Optimizer; calculateBestPlan ()V 1 -1
Lorg/h2/command/dml/Optimizer; testPlan ([Lorg/h2/table/TableFilter;)Z 1 -1
Lorg/h2/table/Plan; <init> ([Lorg/h2/table/TableFilter;ILorg/h2/expression/Expression;)V 1 -1
Lorg/h2/table/TableFilter; getJoinCondition ()Lorg/h2/expression/Expression; 1 -1
Lorg/h2/table/Plan; calculateCost (Lorg/h2/engine/Session;)D 1 -1
Lorg/h2/table/TableFilter; getBestPlanItem (Lorg/h2/engine/Session;I)Lorg/h2/table/PlanItem; 1 -1
Lorg/h2/table/PlanItem; <init> ()V 1 -1
Lorg/h2/table/TableData; getScanIndex (Lorg/h2/engine/Session;)Lorg/h2/index/Index; 1 -1
Lorg/h2/table/PlanItem; setIndex (Lorg/h2/index/Index;)V 1 -1
Lorg/h2/table/PlanItem; getIndex ()Lorg/h2/index/Index; 1 -1
Lorg/h2/index/ScanIndex; getCost (Lorg/h2/engine/Session;[I)D 1 -1
Lorg/h2/table/TableData; getRowCountApproximation ()J 1 -1
Lorg/h2/index/ScanIndex; getRowCountApproximation ()J 1 -1
Lorg/h2/table/TableFilter; hashCode ()I 1 -1
Lorg/h2/table/Plan; setEvaluatable (Lorg/h2/table/TableFilter;Z)V 1 -1
Lorg/h2/table/Plan; removeUnusableIndexConditions ()V 1 -1
Lorg/h2/table/TableFilter; removeUnusableIndexConditions ()V 1 -1
Lorg/h2/table/Plan; getFilters ()[Lorg/h2/table/TableFilter; 1 -1
Lorg/h2/table/Plan; getItem (Lorg/h2/table/TableFilter;)Lorg/h2/table/PlanItem; 1 -1
Lorg/h2/table/TableFilter; setPlanItem (Lorg/h2/table/PlanItem;)V 1 -1
Lorg/h2/table/TableFilter; setIndex (Lorg/h2/index/Index;)V 1 -1
Lorg/h2/index/IndexCursor; setIndex (Lorg/h2/index/Index;)V 1 -1
Lorg/h2/index/ScanIndex; getColumnIndex (Lorg/h2/table/Column;)I 1 -1
Lorg/h2/command/dml/Optimizer; getTopFilter ()Lorg/h2/table/TableFilter; 1 -1
Lorg/h2/command/dml/Optimizer; getCost ()D 1 -1
Lorg/h2/table/TableFilter; setEvaluatable (Lorg/h2/table/TableFilter;Z)V 1 -1
Lorg/h2/table/TableFilter; getFilterCondition ()Lorg/h2/expression/Expression; 1 -1
Lorg/h2/expression/ExpressionColumn; setEvaluatable (Lorg/h2/table/TableFilter;Z)V 1 -1
Lorg/h2/table/TableFilter; getTableFilter ()Lorg/h2/table/TableFilter; 1 -1
Lorg/h2/table/TableFilter; prepare ()V 1 -1
Lorg/h2/command/dml/Query; query (I)Lorg/h2/result/LocalResult; 1 -1
Lorg/h2/engine/Database; getOptimizeReuseResults ()Z 1 -1
Lorg/h2/command/dml/Query; getParameterValues ()[Lorg/h2/value/Value; 1 -1
Lorg/h2/engine/Database; getModificationDataId ()J 1 -1
Lorg/h2/command/dml/Query; isEverything (I)Z 1 -1
Lorg/h2/expression/ExpressionVisitor; get (I)Lorg/h2/expression/ExpressionVisitor; 1 -1
Lorg/h2/expression/ExpressionVisitor; <init> (I)V 1 -1
Lorg/h2/command/dml/Select; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 1 -1
Lorg/h2/expression/ExpressionVisitor; getType ()I 1 -1
Lorg/h2/table/TableFilter; getTable ()Lorg/h2/table/Table; 1 -1
Lorg/h2/table/TableData; isDeterministic ()Z 1 -1
Lorg/h2/expression/ExpressionVisitor; incrementQueryLevel (I)V 1 -1
Lorg/h2/expression/ExpressionColumn; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 1 -1
Lorg/h2/command/dml/Query; closeLastResult ()V 1 -1
Lorg/h2/command/dml/Select; queryWithoutCache (I)Lorg/h2/result/LocalResult; 1 -1
Lorg/h2/result/LocalResult; setSortOrder (Lorg/h2/result/SortOrder;)V 1 -1
Lorg/h2/table/TableFilter; startQuery (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/table/TableFilter; reset ()V 1 -1
Lorg/h2/table/TableFilter; lock (Lorg/h2/engine/Session;ZZ)V 1 -1
Lorg/h2/command/dml/Select; queryFlat (ILorg/h2/result/LocalResult;J)V 1 -1
Lorg/h2/table/TableFilter; next ()Z 1 -1
Lorg/h2/index/IndexCursor; find (Lorg/h2/engine/Session;Lorg/h2/util/ObjectArray;)V 1 -1
Lorg/h2/index/ScanIndex; find (Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor; 1 -1
Lorg/h2/index/ScanCursor; <init> (Lorg/h2/engine/Session;Lorg/h2/index/ScanIndex;Z)V 1 -1
Lorg/h2/index/ScanIndex; getDelta ()Ljava/util/Iterator; 1 -1
Lorg/h2/index/IndexCursor; isAlwaysFalse ()Z 1 -1
Lorg/h2/index/IndexCursor; next ()Z 1 -1
Lorg/h2/index/ScanCursor; next ()Z 1 -1
Lorg/h2/index/ScanIndex; getNextRow (Lorg/h2/engine/Session;Lorg/h2/result/Row;)Lorg/h2/result/Row; 1 -1
Lorg/h2/result/Row; isEmpty ()Z 1 -1
Lorg/h2/index/IndexCursor; getSearchRow ()Lorg/h2/result/SearchRow; 1 -1
Lorg/h2/index/ScanCursor; getSearchRow ()Lorg/h2/result/SearchRow; 1 -1
Lorg/h2/table/TableFilter; isOk (Lorg/h2/expression/Expression;)Z 1 -1
Lorg/h2/table/TableFilter; getSelect ()Lorg/h2/command/dml/Select; 1 -1
Lorg/h2/command/dml/Select; getCurrentGroup ()Ljava/util/HashMap; 1 -1
Lorg/h2/table/TableFilter; getValue (Lorg/h2/table/Column;)Lorg/h2/value/Value; 1 -1
Lorg/h2/index/IndexCursor; nextCursor ()V 1 -1
Lorg/h2/command/dml/Query; isTransactional ()Z 1 -1
Lorg/h2/jdbc/JdbcResultSet; <init> (Lorg/h2/jdbc/JdbcConnection;Lorg/h2/jdbc/JdbcStatement;Lorg/h2/result/ResultInterface;IZZZ)V 1 -1
Lorg/h2/result/LocalResult; getVisibleColumnCount ()I 1 -1
Lorg/h2/jdbc/JdbcResultSet; next ()Z 1 -1
Lorg/h2/jdbc/JdbcResultSet; checkClosed ()V 1 -1
Lorg/h2/jdbc/JdbcResultSet; nextRow ()Z 1 -1
Lorg/h2/jdbc/JdbcResultSet; getInt (I)I 1 -1
Lorg/h2/jdbc/JdbcResultSet; get (I)Lorg/h2/value/Value; 1 -1
Lorg/h2/jdbc/JdbcResultSet; checkColumnIndex (I)V 1 -1
Lorg/h2/jdbc/JdbcResultSet; checkOnValidRow ()V 1 -1
Lorg/h2/result/LocalResult; getRowId ()I 1 -1
Lorg/h2/jdbc/JdbcResultSet; close ()V 1 -1
Lorg/h2/jdbc/JdbcResultSet; closeInternal ()V 1 -1
Lorg/apache/derbyTesting/system/oe/load/ThreadInsert; setThreadCount (I)V 1 -1
Lorg/apache/derbyTesting/system/oe/load/ThreadInsert; populateAllTables ()V 1 -1
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; populateAllTables ()V 1 -1
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; itemTable (II)V 1 -1
Lorg/h2/jdbc/JdbcConnection; prepareStatement (Ljava/lang/String;)Ljava/sql/PreparedStatement; 1 -1
Lorg/h2/jdbc/JdbcConnection; translateSQL (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/jdbc/JdbcPreparedStatement; <init> (Lorg/h2/jdbc/JdbcConnection;Ljava/lang/String;IIIZ)V 1 -1
Lorg/h2/command/Parser; parseColumnList (Lorg/h2/table/Table;)[Lorg/h2/table/Column; 1 -1
Lorg/h2/command/dml/Insert; setColumns ([Lorg/h2/table/Column;)V 1 -1
Lorg/h2/expression/Parameter; setColumn (Lorg/h2/table/Column;)V 1 -1
Lorg/h2/jdbc/JdbcPreparedStatement; setInt (II)V 1 -1
Lorg/h2/jdbc/JdbcPreparedStatement; setParameter (ILorg/h2/value/Value;)V 1 -1
Lorg/h2/jdbc/JdbcPreparedStatement; checkClosed (Z)Z 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomAString14_24 ()Ljava/lang/String; 1 -1
Lorg/h2/jdbc/JdbcPreparedStatement; setString (ILjava/lang/String;)V 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomDecimalString (III)Ljava/lang/String; 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomData ()Ljava/lang/String; 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomAString26_50 ()Ljava/lang/String; 1 -1
Lorg/h2/jdbc/JdbcPreparedStatement; executeUpdate ()I 1 -1
Lorg/h2/jdbc/JdbcPreparedStatement; executeUpdateInternal ()I 1 -1
Lorg/h2/value/ValueStringBase; getString ()Ljava/lang/String; 1 -1
Ljava/math/BigInteger; valueOf (J)Ljava/math/BigInteger; 1 -1
Lorg/h2/value/ValueDecimal; <clinit> ()V 1 -1
Lorg/h2/value/ValueDecimal; <init> (Ljava/math/BigDecimal;)V 1 -1
Lorg/h2/value/ValueDecimal; get (Ljava/math/BigDecimal;)Lorg/h2/value/ValueDecimal; 1 -1
Ljava/math/BigDecimal; equals (Ljava/lang/Object;)Z 1 -1
Lorg/h2/value/ValueDecimal; hashCode ()I 1 -1
Ljava/math/BigDecimal; hashCode ()I 1 -1
Ljava/math/BigDecimal; intValue ()I 1 -1
Ljava/math/BigDecimal; toBigInteger ()Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; pow (I)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; isZero ()Z 1 -1
Ljava/math/BigInteger; bitLength ()I 1 -1
Lgnu/java/math/MPN; intLength (I)I 1 -1
Lgnu/java/math/MPN; count_leading_zeros (I)I 1 -1
Ljava/math/BigInteger; isNegative ()Z 1 -1
Ljava/math/BigInteger; getAbsolute ([I)V 1 -1
Lgnu/java/math/MPN; mul ([I[II[II)V 1 -1
Ljava/math/BigInteger; divide (Ljava/math/BigInteger;)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; divide (Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;I)V 1 -1
Ljava/math/BigInteger; longValue ()J 1 -1
Ljava/math/BigInteger; divide (JJLjava/math/BigInteger;Ljava/math/BigInteger;I)V 1 -1
Ljava/math/BigInteger; set (J)V 1 -1
Ljava/math/BigInteger; canonicalize ()Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; intValue ()I 1 -1
Lorg/h2/value/ValueStringBase; getPrecision ()J 1 -1
Lorg/h2/value/ValueDecimal; convertScale (ZI)Lorg/h2/value/Value; 1 -1
Ljava/math/BigDecimal; scale ()I 1 -1
Lorg/h2/value/ValueDecimal; checkPrecision (J)Z 1 -1
Lorg/h2/value/ValueDecimal; getPrecision ()J 1 -1
Ljava/math/BigDecimal; unscaledValue ()Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; abs ()Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; abs (Ljava/math/BigInteger;)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; toString ()Ljava/lang/String; 1 -1
Ljava/math/BigInteger; toString (I)Ljava/lang/String; 1 -1
Lorg/h2/value/ValueDecimal; getType ()I 1 -1
Lorg/h2/value/ValueDecimal; equals (Ljava/lang/Object;)Z 1 -1
Ljava/math/BigDecimal; compareTo (Ljava/math/BigDecimal;)I 1 -1
Ljava/math/BigInteger; compareTo (Ljava/math/BigInteger;)I 1 -1
Ljava/math/BigInteger; compareTo (Ljava/math/BigInteger;Ljava/math/BigInteger;)I 1 -1
Lorg/h2/command/Prepared; checkCanceled ()V 1 -1
Lorg/h2/engine/Session; checkCanceled ()V 1 -1
Lorg/h2/engine/Session; throttle ()V 1 -1
Lorg/h2/command/Command; checkCanceled ()V 1 -1
Lgnu/java/security/jce/prng/VMSecureRandom$Spinner; run ()V 3 0
Ljava/lang/reflect/VMProxy; <clinit> ()V 1 -1
Ljava/lang/reflect/Modifier; isPublic (I)Z 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect536; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect537; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect1294; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect2250; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect2251; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect2252; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect4619; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect4619; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49811; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49811; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy0; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49821; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49821; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy1; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect1186; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49831; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49831; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy2; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect2253; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49842; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49842; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy3; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect3762; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49853; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49853; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy4; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49862; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49862; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy5; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Ljava/util/Random; next (I)I 3 0
Lorg/h2/command/dml/Insert; insertRows ()I 3 0
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49870; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49870; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy6; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
L$Proxy0; value ()Lorg/vmmagic/pragma/Inline$When; 1 -1
Ljava/math/BigInteger; make ([II)Ljava/math/BigInteger; 3 0
Lgnu/java/math/MPN; mul_1 ([I[III)I 3 0
Lorg/h2/command/dml/Insert; update ()I 3 0
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49878; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49878; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy7; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/h2/command/Command; stop ()V 3 0
Lorg/h2/table/TableData; addRow (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 0
Ljava/math/BigInteger; <init> (Ljava/lang/String;I)V 3 0
Lorg/h2/jdbc/JdbcPreparedStatement; close ()V 1 -1
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; populateForOneWarehouse (S)V 1 -1
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; warehouseTable (S)V 1 -1
Lorg/h2/command/Parser; readDecimal (II)V 1 -1
Lorg/h2/jdbc/JdbcPreparedStatement; setShort (IS)V 1 -1
Lorg/h2/value/ValueShort; get (S)Lorg/h2/value/ValueShort; 1 -1
Lorg/h2/value/ValueShort; <init> (S)V 1 -1
Lorg/h2/value/ValueShort; hashCode ()I 1 -1
Lorg/h2/value/ValueShort; getType ()I 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomAString10_20 ()Ljava/lang/String; 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomState ()Ljava/lang/String; 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomZIP ()Ljava/lang/String; 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomNString (II)Ljava/lang/String; 1 -1
Lorg/h2/value/ValueStringFixed; <clinit> ()V 1 -1
Lorg/h2/value/ValueStringFixed; <init> (Ljava/lang/String;)V 1 -1
Lorg/h2/value/ValueStringFixed; get (Ljava/lang/String;)Lorg/h2/value/ValueStringFixed; 1 -1
Lorg/h2/value/ValueStringFixed; trimRight (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/value/ValueStringFixed; hashCode ()I 1 -1
Lorg/h2/value/ValueStringFixed; getType ()I 1 -1
Lorg/h2/value/ValueShort; getPrecision ()J 1 -1
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; stockTable (IIS)V 1 -1
Lorg/h2/value/ValueShort; equals (Ljava/lang/Object;)Z 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomAString24 ()Ljava/lang/String; 1 -1
Lorg/h2/value/ValueStringFixed; equals (Ljava/lang/Object;)Z 1 -1
Ljava/util/Random; nextDouble ()D 3 0
Lorg/h2/jdbc/JdbcPreparedStatement; executeUpdate ()I 3 0
Lorg/h2/value/ValueDecimal; getPrecision ()J 3 0
Lorg/h2/command/CommandContainer; update ()I 3 0
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect3146; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49919; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49919; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy8; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/h2/util/StringCache; getCache ()[Ljava/lang/String; 3 0
Ljava/math/BigInteger; pow (I)Ljava/math/BigInteger; 3 0
Lorg/h2/table/Column; validateConvertUpdateSequence (Lorg/h2/engine/Session;Lorg/h2/value/Value;)Lorg/h2/value/Value; 3 0
Lorg/h2/result/Row; setPos (I)V 3 0
Lorg/h2/message/Trace; isEnabled (I)Z 3 0
Lorg/h2/value/ValueStringFixed; get (Ljava/lang/String;)Lorg/h2/value/ValueStringFixed; 3 0
Lorg/h2/table/Column; convert (Lorg/h2/value/Value;)Lorg/h2/value/Value; 3 0
Lorg/h2/jdbc/JdbcPreparedStatement; setParameter (ILorg/h2/value/Value;)V 3 0
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; districtTable (SS)V 1 -1
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; customerTable (SS)V 1 -1
Lorg/h2/command/Parser; readFunctionWithoutParameters (Ljava/lang/String;)Lorg/h2/expression/Function; 1 -1
Lorg/h2/value/ValueDecimal; negate ()Lorg/h2/value/Value; 1 -1
Ljava/math/BigDecimal; negate ()Ljava/math/BigDecimal; 1 -1
Ljava/math/BigInteger; negate ()Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; neg (Ljava/math/BigInteger;)Ljava/math/BigInteger; 1 -1
Lorg/h2/expression/ValueExpression; getType ()I 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomAString8_16 ()Ljava/lang/String; 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomCLastPopulate (I)Ljava/lang/String; 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomCLast (I)Ljava/lang/String; 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomAString300_500 ()Ljava/lang/String; 1 -1
Ljava/sql/Timestamp; <clinit> ()V 1 -1
Ljava/sql/Timestamp; <init> (J)V 1 -1
Lorg/h2/value/ValueTimestamp; <clinit> ()V 1 -1
Ljava/sql/Date; <clinit> ()V 1 -1
Ljava/sql/Date; valueOf (Ljava/lang/String;)Ljava/sql/Date; 1 -1
Ljava/text/Format; parseObject (Ljava/lang/String;)Ljava/lang/Object; 1 -1
Ljava/text/ParsePosition; <init> (I)V 1 -1
Ljava/text/DateFormat; parseObject (Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object; 1 -1
Ljava/text/SimpleDateFormat; parse (Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date; 1 -1
Ljava/text/DecimalFormat; setMinimumIntegerDigits (I)V 1 -1
Ljava/text/NumberFormat; setMinimumIntegerDigits (I)V 1 -1
Ljava/text/NumberFormat; getMaximumIntegerDigits ()I 1 -1
Ljava/text/DecimalFormat; parse (Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number; 1 -1
Ljava/text/DecimalFormatSymbols; getNaN ()Ljava/lang/String; 1 -1
Ljava/text/ParsePosition; getIndex ()I 1 -1
Ljava/text/DecimalFormatSymbols; getInfinity ()Ljava/lang/String; 1 -1
Ljava/text/ParsePosition; setIndex (I)V 1 -1
Ljava/math/BigDecimal; longValue ()J 1 -1
Ljava/text/SimpleDateFormat; expect (Ljava/lang/String;Ljava/text/ParsePosition;C)Z 1 -1
Ljava/util/Calendar; clear (I)V 1 -1
Ljava/util/GregorianCalendar; getFirstDayOfMonth (II)I 1 -1
Ljava/sql/Date; <init> (J)V 1 -1
Lorg/h2/value/ValueTimestamp; getNoCopy (Ljava/sql/Timestamp;)Lorg/h2/value/ValueTimestamp; 1 -1
Lorg/h2/value/ValueTimestamp; <init> (Ljava/sql/Timestamp;)V 1 -1
Lorg/h2/value/ValueTimestamp; hashCode ()I 1 -1
Ljava/util/Date; hashCode ()I 1 -1
Lorg/h2/value/ValueTimestamp; getType ()I 1 -1
Lorg/h2/value/ValueTimestamp; convertScale (ZI)Lorg/h2/value/Value; 1 -1
Ljava/sql/Timestamp; getNanos ()I 1 -1
Ljava/math/BigDecimal; movePointLeft (I)Ljava/math/BigDecimal; 1 -1
Lorg/h2/util/MathUtils; setScale (Ljava/math/BigDecimal;I)Ljava/math/BigDecimal; 1 -1
Ljava/math/BigDecimal; setScale (II)Ljava/math/BigDecimal; 1 -1
Ljava/math/BigDecimal; divide (Ljava/math/BigDecimal;II)Ljava/math/BigDecimal; 1 -1
Ljava/math/BigInteger; signum ()I 1 -1
Ljava/math/BigInteger; multiply (Ljava/math/BigInteger;)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; times (Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; times (Ljava/math/BigInteger;I)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; alloc (I)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; divideAndRemainder (Ljava/math/BigInteger;)[Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; realloc (I)V 1 -1
Ljava/math/BigDecimal; movePointRight (I)Ljava/math/BigDecimal; 1 -1
Lorg/h2/value/ValueTimestamp; getPrecision ()J 1 -1
Lorg/h2/value/ValueTimestamp; equals (Ljava/lang/Object;)Z 1 -1
Ljava/sql/Timestamp; equals (Ljava/sql/Timestamp;)Z 1 -1
Ljava/sql/Timestamp; getTime ()J 1 -1
Lorg/h2/value/ValueBoolean; getPrecision ()J 1 -1
Lorg/h2/util/StringCache; get (Ljava/lang/String;)Ljava/lang/String; 3 0
Lorg/h2/value/Value; cache (Lorg/h2/value/Value;)Lorg/h2/value/Value; 3 0
Lorg/h2/engine/Database; isReconnectNeeded ()Z 3 0
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; stockTable (IIS)V 3 0
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; orderTable (SS)V 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomIntPerm (I)[I 1 -1
Lorg/h2/jdbc/JdbcPreparedStatement; setTimestamp (ILjava/sql/Timestamp;)V 1 -1
Lorg/h2/value/ValueTimestamp; get (Ljava/sql/Timestamp;)Lorg/h2/value/ValueTimestamp; 1 -1
Ljava/util/Date; clone ()Ljava/lang/Object; 1 -1
Lorg/h2/value/Value; convertToShort (J)S 1 -1
Ljava/math/BigInteger; divide (JJLjava/math/BigInteger;Ljava/math/BigInteger;I)V 3 0
Lorg/h2/engine/Session; getLogId ()I 3 0
Lorg/h2/command/CommandContainer; getParameters ()Lorg/h2/util/ObjectArray; 3 0
Lorg/h2/message/TraceSystem; isEnabled (I)Z 3 0
Lorg/h2/value/Value; checkPrecision (J)Z 3 0
Lorg/h2/engine/User; checkRight (Lorg/h2/table/Table;I)V 3 0
Lorg/h2/jdbc/JdbcPreparedStatement; setNull (II)V 1 -1
Lorg/h2/value/ValueNull; convertTo (I)Lorg/h2/value/Value; 1 -1
Lorg/h2/value/ValueNull; getPrecision ()J 1 -1
Ljava/math/BigDecimal; <init> (Ljava/lang/String;)V 3 0
Lorg/h2/jdbc/JdbcStatement; checkClosed ()Z 3 0
Lorg/h2/jdbc/JdbcPreparedStatement; setInt (II)V 3 0
Ljava/math/BigInteger; divide (Ljava/math/BigInteger;)Ljava/math/BigInteger; 3 0
Lorg/h2/value/ValueTimestamp; convertScale (ZI)Lorg/h2/value/Value; 3 0
Lorg/h2/jdbc/JdbcPreparedStatement; setString (ILjava/lang/String;)V 3 0
Lorg/h2/value/ValueDecimal; hashCode ()I 3 0
Ljava/math/BigInteger; isZero ()Z 3 0
Lorg/h2/index/ScanIndex; commit (ILorg/h2/result/Row;)V 3 0
Ljava/lang/reflect/Array; getLength (Ljava/lang/Object;)I 1 -1
Lorg/h2/value/ValueInt; get (I)Lorg/h2/value/ValueInt; 3 0
Ljava/util/Random; next (I)I 3 2
Ljava/math/BigInteger; <init> ()V 3 1
Lorg/h2/util/ObjectArray; remove (I)Ljava/lang/Object; 3 0
Lorg/h2/table/Table; validateConvertUpdateSequence (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 0
Lorg/h2/jdbc/JdbcConnection; checkClosed (Z)V 3 0
Ljava/math/BigInteger; valueOf (J)Ljava/math/BigInteger; 3 0
Lorg/h2/value/ValueStringFixed; get (Ljava/lang/String;)Lorg/h2/value/ValueStringFixed; 3 1
Lorg/h2/table/TableData; doLock (Lorg/h2/engine/Session;IZ)V 3 0
Lorg/h2/result/Row; setValue (ILorg/h2/value/Value;)V 3 1
Lorg/h2/engine/Session; log (Lorg/h2/table/Table;SLorg/h2/result/Row;)V 3 1
Lorg/h2/table/Table; fireBeforeRow (Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;)V 3 1
Lorg/h2/command/Prepared; checkParameters ()V 3 0
L$Proxy0; arguments ()[I 1 -1
Lorg/h2/table/Column; convert (Lorg/h2/value/Value;)Lorg/h2/value/Value; 3 1
Lorg/h2/jdbc/JdbcPreparedStatement; setInt (II)V 3 1
Lorg/h2/engine/Session; setWaitForLock (Lorg/h2/table/Table;)V 3 1
Ljava/math/BigDecimal; setScale (II)Ljava/math/BigDecimal; 3 1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomInt (II)I 3 1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomDecimalString (III)Ljava/lang/String; 3 0
Ljava/math/BigInteger; divideAndRemainder (Ljava/math/BigInteger;)[Ljava/math/BigInteger; 3 0
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; orderTable (SS)V 3 0
Lorg/h2/engine/Database; getNextModificationDataId ()J 3 1
Lorg/h2/value/ValueStringFixed; trimRight (Ljava/lang/String;)Ljava/lang/String; 3 0
Lorg/h2/jdbc/JdbcPreparedStatement; executeUpdateInternal ()I 3 0
Lorg/h2/table/Table; validateConvertUpdateSequence (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 1
Lorg/h2/command/Command; start ()V 3 2
Lgnu/java/math/MPN; intLength (I)I 3 1
Lorg/h2/table/Table; fireBefore (Lorg/h2/engine/Session;)V 3 1
Lgnu/java/math/MPN; count_leading_zeros (I)I 3 0
Lorg/h2/jdbc/JdbcPreparedStatement; executeUpdateInternal ()I 3 1
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; customerTable (SS)V 3 0
Lorg/h2/command/dml/Insert; insertRows ()I 3 1
Lorg/h2/util/CacheObject; setPos (I)V 3 0
Lorg/h2/log/UndoLog; removeLast (Z)V 3 0
Lorg/h2/value/Value; cache (Lorg/h2/value/Value;)Lorg/h2/value/Value; 3 1
Ljava/math/BigDecimal; divide (Ljava/math/BigDecimal;II)Ljava/math/BigDecimal; 3 0
Lorg/h2/engine/Session; log (Lorg/h2/log/UndoLogRecord;)V 3 0
Ljava/math/BigInteger; times (Ljava/math/BigInteger;I)Ljava/math/BigInteger; 3 0
Lorg/h2/command/CommandContainer; update ()I 3 1
Ljava/math/BigInteger; divide (Ljava/math/BigInteger;)Ljava/math/BigInteger; 3 1
Lorg/h2/jdbc/JdbcPreparedStatement; setParameter (ILorg/h2/value/Value;)V 3 1
Lorg/h2/value/ValueShort; get (S)Lorg/h2/value/ValueShort; 3 1
Lorg/h2/util/ObjectArray; get (I)Ljava/lang/Object; 3 1
Lorg/h2/index/ScanIndex; incrementRowCount (II)V 3 0
Lorg/h2/jdbc/JdbcPreparedStatement; checkClosed (Z)Z 3 0
Lorg/h2/message/Trace; isEnabled (I)Z 3 1
Ljava/math/BigInteger; divide (Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;I)V 3 0
Lorg/h2/util/StringCache; get (Ljava/lang/String;)Ljava/lang/String; 3 1
Lorg/h2/table/TableData; lock (Lorg/h2/engine/Session;ZZ)V 3 0
Lorg/h2/command/Prepared; checkParameters ()V 3 2
Lorg/h2/jdbc/JdbcPreparedStatement; setString (ILjava/lang/String;)V 3 1
Lorg/h2/value/ValueStringFixed; trimRight (Ljava/lang/String;)Ljava/lang/String; 3 1
Lorg/h2/util/ObjectArray; add (Ljava/lang/Object;)V 3 1
Lorg/h2/jdbc/JdbcStatement; checkClosed (Z)Z 3 0
Lorg/h2/value/Value; checkPrecision (J)Z 3 2
Lorg/h2/table/Column; validateConvertUpdateSequence (Lorg/h2/engine/Session;Lorg/h2/value/Value;)Lorg/h2/value/Value; 3 1
Ljava/math/BigDecimal; intValue ()I 3 1
Lorg/h2/engine/Session; isReconnectNeeded (Z)Z 3 1
Lorg/h2/log/UndoLogRecord; commit ()V 3 0
Ljava/math/BigInteger; set (J)V 3 0
Ljava/math/BigDecimal; movePointRight (I)Ljava/math/BigDecimal; 3 0
Ljava/math/BigInteger; wordsNeeded ([II)I 3 0
Lorg/h2/jdbc/JdbcPreparedStatement; executeUpdate ()I 3 2
Ljava/math/BigInteger; <init> (Ljava/lang/String;I)V 3 1
Ljava/math/BigInteger; valueOf (J)Ljava/math/BigInteger; 3 1
Ljava/math/BigInteger; divideAndRemainder (Ljava/math/BigInteger;)[Ljava/math/BigInteger; 3 1
Lorg/h2/table/Table; getTemplateRow ()Lorg/h2/result/Row; 3 1
Lorg/h2/log/UndoLog; size ()I 3 1
Ljava/math/BigInteger; toString (I)Ljava/lang/String; 3 0
Lgnu/java/math/MPN; mul ([I[II[II)V 3 0
Lorg/h2/index/ScanIndex; incrementRowCount (II)V 3 1
Lorg/h2/jdbc/JdbcPreparedStatement; setTimestamp (ILjava/sql/Timestamp;)V 3 0
Lorg/h2/value/Value; convertTo (I)Lorg/h2/value/Value; 3 0
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect1060; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49986; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect49986; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy9; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
Lorg/h2/engine/Session; getTrace ()Lorg/h2/message/Trace; 3 0
Lorg/h2/log/UndoLog; add (Lorg/h2/log/UndoLogRecord;)V 3 0
Ljava/math/BigInteger; abs ()Ljava/math/BigInteger; 3 1
Ljava/math/BigInteger; pow (I)Ljava/math/BigInteger; 3 1
Lorg/h2/command/Command; executeUpdate ()I 3 0
Lorg/h2/value/ValueString; get (Ljava/lang/String;)Lorg/h2/value/ValueString; 3 1
Lorg/h2/value/ValueStringFixed; hashCode ()I 3 1
Lorg/h2/log/UndoLogRecord; isStored ()Z 3 1
Lorg/h2/value/ValueStringFixed; equals (Ljava/lang/Object;)Z 3 1
Lorg/h2/log/UndoLogRecord; commit ()V 3 1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomState ()Ljava/lang/String; 3 0
Lorg/h2/engine/Session; commit (Z)V 3 0
Lorg/h2/table/TableData; lock (Lorg/h2/engine/Session;ZZ)V 3 1
Lorg/h2/value/ValueTimestamp; getNoCopy (Ljava/sql/Timestamp;)Lorg/h2/value/ValueTimestamp; 3 1
Ljava/math/BigDecimal; equals (Ljava/lang/Object;)Z 3 1
Lorg/h2/index/ScanIndex; add (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 0
Ljava/math/BigDecimal; <init> (Ljava/lang/String;)V 3 1
Lorg/h2/engine/Session; setCurrentCommand (Lorg/h2/command/Command;J)V 3 1
Ljava/util/Date; hashCode ()I 3 1
Lorg/h2/command/Command; stop ()V 3 1
Lorg/h2/engine/Database; checkPowerOff ()V 3 0
Lorg/h2/value/ValueTimestamp; get (Ljava/sql/Timestamp;)Lorg/h2/value/ValueTimestamp; 3 1
Ljava/sql/Timestamp; <init> (J)V 3 1
Ljava/math/BigInteger; multiply (Ljava/math/BigInteger;)Ljava/math/BigInteger; 3 0
Lorg/h2/jdbc/JdbcPreparedStatement; setShort (IS)V 3 0
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomData ()Ljava/lang/String; 3 0
Lorg/h2/log/UndoLog; getLast ()Lorg/h2/log/UndoLogRecord; 3 0
Lorg/h2/engine/Session; getLogId ()I 3 2
Lorg/h2/engine/Database; beforeWriting ()Z 3 0
Ljava/math/BigInteger; longValue ()J 3 0
Lorg/h2/jdbc/JdbcStatement; checkClosed (Z)Z 3 1
Lorg/h2/command/Command; executeUpdate ()I 3 1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomAString (II)Ljava/lang/String; 3 0
Lorg/h2/jdbc/JdbcConnection; checkClosed (Z)V 3 1
Lorg/h2/engine/Database; getModificationMetaId ()J 3 2
Ljava/math/BigDecimal; movePointLeft (I)Ljava/math/BigDecimal; 3 1
Ljava/util/Random; nextDouble ()D 3 2
Ljava/math/BigInteger; multiply (Ljava/math/BigInteger;)Ljava/math/BigInteger; 3 1
Lorg/h2/command/dml/Insert; update ()I 3 1
Lorg/h2/engine/Session; log (Lorg/h2/log/UndoLogRecord;)V 3 1
Lorg/h2/value/ValueTimestamp; convertScale (ZI)Lorg/h2/value/Value; 3 1
Lorg/h2/result/Row; setKey (J)V 3 1
Lorg/h2/message/TraceObject; isDebugEnabled ()Z 3 1
Lorg/h2/engine/Database; getTrace (Ljava/lang/String;)Lorg/h2/message/Trace; 3 1
Lorg/h2/index/ScanIndex; commit (ILorg/h2/result/Row;)V 3 1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomCLast (I)Ljava/lang/String; 3 0
Ljava/math/BigInteger; signum ()I 3 0
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomInt (II)I 3 2
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomAString8_16 ()Ljava/lang/String; 3 1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomAString26_50 ()Ljava/lang/String; 3 1
Ljava/math/BigInteger; canonicalize ()Ljava/math/BigInteger; 3 0
Ljava/math/BigDecimal; movePointRight (I)Ljava/math/BigDecimal; 3 1
Lorg/h2/value/Value; convertToShort (J)S 3 1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomIntPerm (I)[I 3 0
Lorg/h2/engine/Session; waitIfExclusiveModeEnabled ()V 3 1
Lorg/h2/message/TraceObject; debugCodeCall (Ljava/lang/String;)V 3 0
Ljava/sql/Timestamp; equals (Ljava/sql/Timestamp;)Z 3 1
Lorg/h2/table/Table; checkWritingAllowed ()V 3 1
Lorg/h2/command/Prepared; needRecompile ()Z 3 0
Lorg/h2/command/CommandContainer; recompileIfRequired ()V 3 0
Ljava/math/BigInteger; divide (JJLjava/math/BigInteger;Ljava/math/BigInteger;I)V 3 1
Lorg/h2/engine/Session; getLockTimeout ()I 3 2
Lorg/h2/table/TableData; checkRowCount (Lorg/h2/engine/Session;Lorg/h2/index/Index;I)V 3 0
Lorg/h2/value/ValueString; hashCode ()I 3 1
Ljava/math/BigDecimal; toBigInteger ()Ljava/math/BigInteger; 3 0
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomCLast (I)Ljava/lang/String; 3 1
Lorg/h2/message/Trace; isDebugEnabled ()Z 3 1
Lorg/h2/message/TraceSystem; getTrace (Ljava/lang/String;)Lorg/h2/message/Trace; 3 0
Lorg/h2/value/ValueDecimal; <init> (Ljava/math/BigDecimal;)V 3 0
Lorg/apache/derbyTesting/system/oe/load/SimpleInsert; orderTable (SS)V 3 1
Lorg/h2/engine/Database; isReconnectNeeded ()Z 3 1
Lorg/h2/engine/Session; commit (Z)V 3 1
Lorg/h2/value/ValueDecimal; convertScale (ZI)Lorg/h2/value/Value; 3 0
Lorg/h2/command/Prepared; needRecompile ()Z 3 1
Lorg/h2/table/TableData; addRow (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 1
Lorg/h2/jdbc/JdbcPreparedStatement; setNull (II)V 3 0
Lorg/h2/expression/Function; optimize (Lorg/h2/engine/Session;)Lorg/h2/expression/Expression; 3 0
Lorg/dacapo/h2/TPCC; createIndexes ()V 1 -1
Lorg/h2/command/Parser; parseAlter ()Lorg/h2/command/Prepared; 1 -1
Lorg/h2/command/Parser; parseAlterTable ()Lorg/h2/command/Prepared; 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; setComment (Ljava/lang/String;)V 1 -1
Lorg/h2/index/ScanIndex; getRowCount (Lorg/h2/engine/Session;)J 1 -1
Lorg/h2/util/ObjectArray; newInstance (I)Lorg/h2/util/ObjectArray; 1 -1
Lorg/h2/engine/Database; setProgress (ILjava/lang/String;II)V 1 -1
Lorg/h2/index/ScanCursor; get ()Lorg/h2/result/Row; 1 -1
Lorg/h2/table/TableData; addRowsToIndex (Lorg/h2/engine/Session;Lorg/h2/util/ObjectArray;Lorg/h2/index/Index;)V 1 -1
Lorg/h2/table/TableData$1; <init> (Lorg/h2/table/TableData;Lorg/h2/index/Index;)V 1 -1
Lorg/h2/table/TableData$1; compare (Ljava/lang/Object;Ljava/lang/Object;)I 1 -1
Lorg/h2/table/TableData$1; compare (Lorg/h2/result/Row;Lorg/h2/result/Row;)I 1 -1
Lorg/h2/index/MultiVersionIndex; compareRows (Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)I 1 -1
Lorg/h2/value/ValueShort; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 1 -1
Lorg/h2/util/RandomUtils; nextInt (I)I 1 -1
Ljava/util/Random; nextInt (I)I 1 -1
Lorg/h2/util/ObjectArray; swap (II)V 1 -1
Lorg/h2/table/TableData; traceLock (Lorg/h2/engine/Session;ZLjava/lang/String;)V 3 0
Lorg/h2/index/ScanCursor; next ()Z 3 0
Lorg/h2/index/BaseIndex; compareValues (Lorg/h2/value/Value;Lorg/h2/value/Value;I)I 3 1
Lorg/h2/index/BaseIndex; compareRows (Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)I 3 1
Lorg/h2/result/Row; getValue (I)Lorg/h2/value/Value; 3 2
Lorg/h2/table/Table; compareTypeSave (Lorg/h2/value/Value;Lorg/h2/value/Value;)I 3 1
Lorg/h2/table/TableData$1; compare (Lorg/h2/result/Row;Lorg/h2/result/Row;)I 3 1
Lorg/h2/index/TreeIndex; set (Lorg/h2/index/TreeNode;ZLorg/h2/index/TreeNode;)V 3 1
Lorg/h2/index/TreeIndex; balance (Lorg/h2/index/TreeNode;Z)V 3 0
Lorg/h2/value/ValueInt; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 3 1
Lorg/h2/index/MultiVersionIndex; compareRows (Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)I 3 1
Lorg/h2/index/TreeIndex; child (Lorg/h2/index/TreeNode;Z)Lorg/h2/index/TreeNode; 3 1
Lorg/h2/value/ValueShort; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 3 1
Lorg/h2/index/TreeCursor; <init> (Lorg/h2/index/TreeIndex;Lorg/h2/index/TreeNode;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)V 3 1
Lorg/h2/index/TreeIndex; findFirstNode (Lorg/h2/result/SearchRow;Z)Lorg/h2/index/TreeNode; 3 0
Lorg/h2/util/ObjectArray; sort (Ljava/util/Comparator;II)V 3 0
Lorg/h2/table/TableData; addRowsToIndex (Lorg/h2/engine/Session;Lorg/h2/util/ObjectArray;Lorg/h2/index/Index;)V 3 0
Lorg/h2/index/MultiVersionIndex; removeIfExists (Lorg/h2/engine/Session;Lorg/h2/result/Row;)Z 3 0
Lorg/h2/index/TreeIndex; add (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 0
Lorg/h2/table/TableData; addIndex (Lorg/h2/engine/Session;Ljava/lang/String;I[Lorg/h2/table/IndexColumn;Lorg/h2/index/IndexType;ILjava/lang/String;)Lorg/h2/index/Index; 3 0
Lorg/h2/index/TreeIndex; find (Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor; 3 0
Lorg/h2/index/TreeIndex; add (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 1
Ljava/util/Random; nextInt (I)I 3 0
Lorg/h2/index/ScanIndex; getNextRow (Lorg/h2/engine/Session;Lorg/h2/result/Row;)Lorg/h2/result/Row; 3 0
Lorg/h2/index/MultiVersionIndex; add (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 1
Lorg/h2/index/ScanIndex; getNextRow (Lorg/h2/engine/Session;Lorg/h2/result/Row;)Lorg/h2/result/Row; 3 1
Lorg/h2/util/ObjectArray; sort (Ljava/util/Comparator;II)V 3 1
Lorg/h2/util/ObjectArray$ObjectArrayIterator; next ()Ljava/lang/Object; 3 1
Lorg/h2/value/Value; compareTypeSave (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 3 1
Lorg/h2/index/TreeIndex; find (Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor; 3 1
Lorg/h2/index/MultiVersionIndex; removeIfExists (Lorg/h2/engine/Session;Lorg/h2/result/Row;)Z 3 1
Lorg/h2/index/TreeIndex; balance (Lorg/h2/index/TreeNode;Z)V 3 1
Lorg/h2/table/TableData; addRowsToIndex (Lorg/h2/engine/Session;Lorg/h2/util/ObjectArray;Lorg/h2/index/Index;)V 3 1
Lorg/h2/value/ValueString; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 1 -1
Lorg/h2/value/CompareMode; compareString (Ljava/lang/String;Ljava/lang/String;Z)I 1 -1
Lorg/h2/value/CompareMode; compareString (Ljava/lang/String;Ljava/lang/String;Z)I 3 0
Lorg/h2/index/TreeCursor; next ()Z 3 0
Lorg/dacapo/h2/TPCC; createConstraints ()V 1 -1
Lorg/h2/command/ddl/AlterTableAddConstraint; setCheckExisting (Z)V 1 -1
Lorg/h2/index/MultiVersionIndex; getColumnIndex (Lorg/h2/table/Column;)I 1 -1
Lorg/h2/index/BaseIndex; getColumnIndex (Lorg/h2/table/Column;)I 1 -1
Lorg/h2/table/Table; getPrimaryKey ()Lorg/h2/index/Index; 1 -1
Lorg/h2/index/MultiVersionIndex; getIndexColumns ()[Lorg/h2/table/IndexColumn; 1 -1
Lorg/h2/constraint/ConstraintReferential; checkExistingData (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/engine/Database; isStarting ()Z 1 -1
Lorg/h2/engine/Session; prepare (Ljava/lang/String;)Lorg/h2/command/Prepared; 1 -1
Lorg/h2/engine/Session; prepare (Ljava/lang/String;Z)Lorg/h2/command/Prepared; 1 -1
Lorg/h2/command/Parser; setRightsChecked (Z)V 1 -1
Lorg/h2/command/Parser; prepare (Ljava/lang/String;)Lorg/h2/command/Prepared; 1 -1
Lorg/h2/expression/Comparison; <init> (Lorg/h2/engine/Session;ILorg/h2/expression/Expression;Lorg/h2/expression/Expression;)V 1 -1
Lorg/h2/command/dml/Select; addCondition (Lorg/h2/expression/Expression;)V 1 -1
Lorg/h2/command/dml/SelectOrderBy; <init> ()V 1 -1
Lorg/h2/command/dml/Select; setOrder (Lorg/h2/util/ObjectArray;)V 1 -1
Lorg/h2/expression/Expression; getNonAliasExpression ()Lorg/h2/expression/Expression; 1 -1
Lorg/h2/command/dml/Query; initOrder (Lorg/h2/util/ObjectArray;Lorg/h2/util/ObjectArray;Lorg/h2/util/ObjectArray;IZ)V 1 -1
Lorg/h2/expression/ExpressionColumn; getOriginalTableAliasName ()Ljava/lang/String; 1 -1
Lorg/h2/expression/ExpressionColumn; getOriginalColumnName ()Ljava/lang/String; 1 -1
Lorg/h2/expression/ExpressionColumn; getColumnName ()Ljava/lang/String; 1 -1
Lorg/h2/expression/Comparison; mapColumns (Lorg/h2/table/ColumnResolver;I)V 1 -1
Lorg/h2/engine/Session; getNextSystemIdentifier (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/table/TableView; createTempView (Lorg/h2/engine/Session;Lorg/h2/engine/User;Ljava/lang/String;Lorg/h2/command/dml/Query;Lorg/h2/command/dml/Query;)Lorg/h2/table/TableView; 1 -1
Lorg/h2/command/dml/Select; getPlanSQL ()Ljava/lang/String; 1 -1
Lorg/h2/table/TableFilter; getPlanSQL (Z)Ljava/lang/String; 1 -1
Lorg/h2/expression/Comparison; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/util/StringUtils; unEnclose (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/command/dml/SelectOrderBy; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/table/TableView; <init> (Lorg/h2/schema/Schema;ILjava/lang/String;Ljava/lang/String;Lorg/h2/util/ObjectArray;[Ljava/lang/String;Lorg/h2/engine/Session;Z)V 1 -1
Lorg/h2/index/ViewIndex; <init> (Lorg/h2/table/TableView;Ljava/lang/String;Lorg/h2/util/ObjectArray;Z)V 1 -1
Lorg/h2/table/TableView; initColumnsAndTables (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/table/TableView; removeViewFromTables ()V 1 -1
Lorg/h2/table/TableView; recompileQuery (Lorg/h2/engine/Session;)Lorg/h2/command/dml/Query; 1 -1
Lorg/h2/command/dml/Query; prepareOrder (Lorg/h2/util/ObjectArray;I)Lorg/h2/result/SortOrder; 1 -1
Lorg/h2/result/SortOrder; <clinit> ()V 1 -1
Lorg/h2/result/SortOrder; <init> (Lorg/h2/engine/Database;[I[I)V 1 -1
Lorg/h2/expression/Comparison; optimize (Lorg/h2/engine/Session;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/expression/ExpressionColumn; getType ()I 1 -1
Lorg/h2/expression/Expression; optimizeInJoin (Lorg/h2/engine/Session;Lorg/h2/command/dml/Select;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/expression/Comparison; createIndexConditions (Lorg/h2/engine/Session;Lorg/h2/table/TableFilter;)V 1 -1
Lorg/h2/expression/Comparison; setEvaluatable (Lorg/h2/table/TableFilter;Z)V 1 -1
Lorg/h2/command/dml/Select; getSortIndex ()Lorg/h2/index/Index; 1 -1
Lorg/h2/result/SortOrder; getIndexes ()[I 1 -1
Lorg/h2/expression/ExpressionColumn; getTableFilter ()Lorg/h2/table/TableFilter; 1 -1
Lorg/h2/expression/ExpressionColumn; getColumn ()Lorg/h2/table/Column; 1 -1
Lorg/h2/result/SortOrder; getSortTypes ()[I 1 -1
Lorg/h2/table/TableFilter; getIndex ()Lorg/h2/index/Index; 1 -1
Lorg/h2/index/IndexType; isScan ()Z 1 -1
Lorg/h2/table/TableFilter; hasInComparisons ()Z 1 -1
Lorg/h2/index/MultiVersionIndex; getPlanSQL ()Ljava/lang/String; 1 -1
Lorg/h2/index/BaseIndex; getPlanSQL ()Ljava/lang/String; 1 -1
Lorg/h2/util/StringUtils; quoteRemarkSQL (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/result/SortOrder; getSQL ([Lorg/h2/expression/Expression;I)Ljava/lang/String; 1 -1
Lorg/h2/util/StatementBuilder; append (J)Lorg/h2/util/StatementBuilder; 1 -1
Lorg/h2/command/dml/Select; getTables ()Ljava/util/HashSet; 1 -1
Lorg/h2/command/dml/Select; getExpressions ()Lorg/h2/util/ObjectArray; 1 -1
Lorg/h2/command/dml/Select; getColumnCount ()I 1 -1
Lorg/h2/expression/ExpressionColumn; getAlias ()Ljava/lang/String; 1 -1
Lorg/h2/expression/ExpressionColumn; getPrecision ()J 1 -1
Lorg/h2/table/Column; getPrecision ()J 1 -1
Lorg/h2/expression/ExpressionColumn; getScale ()I 1 -1
Lorg/h2/table/Column; getScale ()I 1 -1
Lorg/h2/expression/ExpressionColumn; getDisplaySize ()I 1 -1
Lorg/h2/table/Column; getDisplaySize ()I 1 -1
Lorg/h2/table/TableView; setTopQuery (Lorg/h2/command/dml/Query;)V 1 -1
Lorg/h2/table/TableView; setOwner (Lorg/h2/engine/User;)V 1 -1
Lorg/h2/command/Parser; readAliasIdentifier ()Ljava/lang/String; 1 -1
Lorg/h2/command/Parser; readTermObjectDot (Ljava/lang/String;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/command/Parser; readWildcardOrSequenceValue (Ljava/lang/String;Ljava/lang/String;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/table/TableFilter; getTableAlias ()Ljava/lang/String; 1 -1
Lorg/h2/expression/ConditionExists; <init> (Lorg/h2/command/dml/Query;)V 1 -1
Lorg/h2/expression/ConditionNot; <init> (Lorg/h2/expression/Expression;)V 1 -1
Lorg/h2/expression/ConditionNot; mapColumns (Lorg/h2/table/ColumnResolver;I)V 1 -1
Lorg/h2/expression/ConditionExists; mapColumns (Lorg/h2/table/ColumnResolver;I)V 1 -1
Lorg/h2/command/dml/Select; mapColumns (Lorg/h2/table/ColumnResolver;I)V 1 -1
Lorg/h2/expression/ConditionNot; optimize (Lorg/h2/engine/Session;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/expression/Expression; getNotIfPossible (Lorg/h2/engine/Session;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/expression/ConditionExists; optimize (Lorg/h2/engine/Session;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/expression/ValueExpression; getNull ()Lorg/h2/expression/ValueExpression; 1 -1
Lorg/h2/expression/ExpressionVisitor; setResolver (Lorg/h2/table/ColumnResolver;)V 1 -1
Lorg/h2/expression/ExpressionVisitor; getResolver ()Lorg/h2/table/ColumnResolver; 1 -1
Lorg/h2/expression/Comparison; getReversedCompareType (I)I 1 -1
Lorg/h2/index/IndexCondition; get (ILorg/h2/expression/ExpressionColumn;Lorg/h2/expression/Expression;)Lorg/h2/index/IndexCondition; 1 -1
Lorg/h2/index/IndexCondition; <init> (ILorg/h2/expression/ExpressionColumn;Lorg/h2/expression/Expression;)V 1 -1
Lorg/h2/table/TableFilter; addIndexCondition (Lorg/h2/index/IndexCondition;)V 1 -1
Lorg/h2/index/IndexCondition; isEvaluatable ()Z 1 -1
Lorg/h2/expression/Expression; isEverything (I)Z 1 -1
Lorg/h2/expression/ExpressionVisitor; getQueryLevel ()I 1 -1
Lorg/h2/index/IndexCondition; isAlwaysFalse ()Z 1 -1
Lorg/h2/index/IndexCondition; getColumn ()Lorg/h2/table/Column; 1 -1
Lorg/h2/index/IndexCondition; getMask ()I 1 -1
Lorg/h2/table/Table; getBestPlanItem (Lorg/h2/engine/Session;[I)Lorg/h2/table/PlanItem; 1 -1
Lorg/h2/index/MultiVersionIndex; getCost (Lorg/h2/engine/Session;[I)D 1 -1
Lorg/h2/index/TreeIndex; getCost (Lorg/h2/engine/Session;[I)D 1 -1
Lorg/h2/index/BaseIndex; getCostRangeIndex ([IJ)J 1 -1
Lorg/h2/index/BaseIndex; getLookupCost (J)I 1 -1
Lorg/h2/expression/ValueExpression; setEvaluatable (Lorg/h2/table/TableFilter;Z)V 1 -1
Lorg/h2/expression/Expression; createIndexConditions (Lorg/h2/engine/Session;Lorg/h2/table/TableFilter;)V 1 -1
Lorg/h2/table/TableView; getScanIndex (Lorg/h2/engine/Session;)Lorg/h2/index/Index; 1 -1
Lorg/h2/table/TableView; getBestPlanItem (Lorg/h2/engine/Session;[I)Lorg/h2/table/PlanItem; 1 -1
Lorg/h2/index/ViewIndex; getCost (Lorg/h2/engine/Session;[I)D 1 -1
Lorg/h2/util/IntArray; <init> ([I)V 1 -1
Lorg/h2/util/IntArray; hashCode ()I 1 -1
Lorg/h2/command/dml/Select; getCost ()D 1 -1
Lorg/h2/index/ViewIndex$CostElement; <init> ()V 1 -1
Lorg/h2/index/ViewIndex; <init> (Lorg/h2/table/TableView;Lorg/h2/index/ViewIndex;Lorg/h2/engine/Session;[I)V 1 -1
Lorg/h2/index/ViewIndex; getQuery (Lorg/h2/engine/Session;[I)Lorg/h2/command/dml/Query; 1 -1
Lorg/h2/expression/ConditionNot; setEvaluatable (Lorg/h2/table/TableFilter;Z)V 1 -1
Lorg/h2/expression/ConditionExists; setEvaluatable (Lorg/h2/table/TableFilter;Z)V 1 -1
Lorg/h2/command/dml/Select; setEvaluatable (Lorg/h2/table/TableFilter;Z)V 1 -1
Lorg/h2/table/TableView; isDeterministic ()Z 1 -1
Lorg/h2/expression/Comparison; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 1 -1
Lorg/h2/expression/ValueExpression; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 1 -1
Lorg/h2/expression/ConditionNot; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 1 -1
Lorg/h2/expression/ConditionExists; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 1 -1
Lorg/h2/table/TableView; lock (Lorg/h2/engine/Session;ZZ)V 1 -1
Lorg/h2/index/ViewIndex; find (Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor; 1 -1
Lorg/h2/table/TableView; getParameterOffset ()I 1 -1
Lorg/h2/index/TreeCursor; getSearchRow ()Lorg/h2/result/SearchRow; 1 -1
Lorg/h2/index/MultiVersionCursor; getSearchRow ()Lorg/h2/result/SearchRow; 1 -1
Lorg/h2/expression/Expression; getBooleanValue (Lorg/h2/engine/Session;)Ljava/lang/Boolean; 1 -1
Lorg/h2/expression/Comparison; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 1 -1
Lorg/h2/index/ViewCursor; <init> (Lorg/h2/table/Table;Lorg/h2/result/LocalResult;)V 1 -1
Lorg/h2/index/ViewCursor; next ()Z 1 -1
Lorg/h2/result/Row; getColumnCount ()I 1 -1
Lorg/h2/index/ViewCursor; getSearchRow ()Lorg/h2/result/SearchRow; 1 -1
Lorg/h2/expression/ConditionNot; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 1 -1
Lorg/h2/expression/ConditionExists; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 1 -1
Lorg/h2/command/Prepared; setSession (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/index/IndexCondition; getCompareType ()I 1 -1
Lorg/h2/index/IndexCondition; getCurrentValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 1 -1
Lorg/h2/index/IndexCondition; isStart ()Z 1 -1
Lorg/h2/index/IndexCondition; isEnd ()Z 1 -1
Lorg/h2/index/IndexCursor; getSearchRow (Lorg/h2/result/SearchRow;ILorg/h2/value/Value;Z)Lorg/h2/result/SearchRow; 1 -1
Lorg/h2/expression/Comparison; compareNotNull (Lorg/h2/engine/Database;Lorg/h2/value/Value;Lorg/h2/value/Value;I)Z 1 -1
Lorg/h2/engine/Database; areEqual (Lorg/h2/value/Value;Lorg/h2/value/Value;)Z 1 -1
Lorg/h2/value/Value; compareTo (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 1 -1
Lorg/h2/result/LocalResult; setLimit (I)V 1 -1
Lorg/h2/engine/Session; addTemporaryResult (Lorg/h2/result/LocalResult;)V 1 -1
Lorg/h2/result/LocalResult; needToClose ()Z 1 -1
Lorg/h2/value/ValueBoolean; negate ()Lorg/h2/value/Value; 1 -1
Lorg/h2/result/LocalResult; isClosed ()Z 1 -1
Lorg/h2/command/dml/Query; sameResultAsLast (Lorg/h2/engine/Session;[Lorg/h2/value/Value;[Lorg/h2/value/Value;J)Z 1 -1
Lorg/h2/expression/ConditionAndOr; <init> (ILorg/h2/expression/Expression;Lorg/h2/expression/Expression;)V 1 -1
Lorg/h2/expression/ConditionAndOr; mapColumns (Lorg/h2/table/ColumnResolver;I)V 1 -1
Lorg/h2/expression/ConditionAndOr; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/expression/ConditionAndOr; optimize (Lorg/h2/engine/Session;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/expression/Comparison; getCost ()I 1 -1
Lorg/h2/expression/ExpressionColumn; getCost ()I 1 -1
Lorg/h2/expression/Comparison; getAdditional (Lorg/h2/engine/Session;Lorg/h2/expression/Comparison;Z)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/expression/ConditionAndOr; optimizeInJoin (Lorg/h2/engine/Session;Lorg/h2/command/dml/Select;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/expression/ConditionAndOr; createIndexConditions (Lorg/h2/engine/Session;Lorg/h2/table/TableFilter;)V 1 -1
Lorg/h2/expression/ConditionAndOr; setEvaluatable (Lorg/h2/table/TableFilter;Z)V 1 -1
Lorg/h2/table/Column; getSelectivity ()I 1 -1
Lorg/h2/expression/ConditionAndOr; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 1 -1
Lorg/h2/expression/ConditionAndOr; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 1 -1
Lorg/h2/engine/Session; getCurrentCommand ()Lorg/h2/command/Command; 1 -1
Lorg/h2/table/TableFilter; checkTimeout ()V 1 -1
Lorg/h2/expression/ExpressionColumn; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 3 1
Lorg/h2/table/TableFilter; getSelect ()Lorg/h2/command/dml/Select; 3 2
Lorg/h2/index/IndexCursor; getMax (Lorg/h2/value/Value;Lorg/h2/value/Value;Z)Lorg/h2/value/Value; 1 -1
Lorg/h2/value/ValueString; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 3 1
Lorg/h2/index/TreeIndex; next (Lorg/h2/index/TreeNode;)Lorg/h2/index/TreeNode; 3 0
Lorg/h2/value/CompareMode; compareString (Ljava/lang/String;Ljava/lang/String;Z)I 3 1
Lorg/h2/result/Row; getColumnCount ()I 3 1
Lorg/h2/expression/ConditionExists; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 3 0
Lorg/h2/index/MultiVersionCursor; getSearchRow ()Lorg/h2/result/SearchRow; 3 0
Lorg/h2/result/LocalResult; <init> (Lorg/h2/engine/Session;[Lorg/h2/expression/Expression;I)V 3 0
Lorg/h2/table/TableFilter; getValue (Lorg/h2/table/Column;)Lorg/h2/value/Value; 3 0
Lorg/h2/index/MultiVersionCursor; loadNext (Z)V 3 0
Lorg/h2/command/dml/Query; query (I)Lorg/h2/result/LocalResult; 3 0
Lorg/h2/command/dml/Select; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 3 0
Lorg/h2/table/TableFilter; getValue (Lorg/h2/table/Column;)Lorg/h2/value/Value; 3 1
Lorg/h2/value/ValueBoolean; get (Z)Lorg/h2/value/ValueBoolean; 3 1
Lorg/h2/expression/Comparison; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 3 1
Lorg/h2/command/dml/Select; queryFlat (ILorg/h2/result/LocalResult;J)V 3 0
Lorg/h2/index/IndexCursor; find (Lorg/h2/engine/Session;Lorg/h2/util/ObjectArray;)V 3 0
Lorg/h2/table/TableFilter; next ()Z 3 0
Lorg/h2/index/MultiVersionCursor; loadNext (Z)V 3 1
Lorg/h2/index/IndexCondition; getCompareType ()I 3 2
Lorg/h2/util/ObjectArray; toArray ([Ljava/lang/Object;)[Ljava/lang/Object; 3 1
Lorg/h2/index/MultiVersionCursor; next ()Z 3 0
Lorg/h2/command/dml/Select; queryWithoutCache (I)Lorg/h2/result/LocalResult; 3 0
Lorg/h2/util/ObjectArray; iterator ()Ljava/util/Iterator; 3 1
Lorg/h2/expression/ExpressionVisitor; incrementQueryLevel (I)V 3 1
Lorg/h2/util/ObjectArray$ObjectArrayIterator; hasNext ()Z 3 1
Lorg/h2/index/IndexCursor; next ()Z 3 0
Lorg/h2/index/MultiVersionIndex; find (Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor; 3 0
Lorg/h2/util/ObjectArray; size ()I 3 2
Lorg/h2/expression/ExpressionVisitor; get (I)Lorg/h2/expression/ExpressionVisitor; 3 1
Lorg/h2/command/dml/Query; getParameterValues ()[Lorg/h2/value/Value; 3 0
Lorg/h2/index/ViewCursor; next ()Z 3 0
Lorg/h2/expression/Comparison; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 3 0
Ljava/util/Random; nextInt (I)I 3 1
Lorg/h2/result/Row; getKey ()J 3 2
Lorg/h2/command/dml/Query; query (I)Lorg/h2/result/LocalResult; 3 1
Lorg/h2/expression/Expression; getBooleanValue (Lorg/h2/engine/Session;)Ljava/lang/Boolean; 3 1
Lorg/h2/table/TableFilter; startQuery (Lorg/h2/engine/Session;)V 3 1
Lorg/h2/index/MultiVersionIndex; find (Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor; 3 1
Lorg/h2/index/IndexCursor; find (Lorg/h2/engine/Session;Lorg/h2/util/ObjectArray;)V 3 1
Lorg/h2/table/TableFilter; isOk (Lorg/h2/expression/Expression;)Z 3 1
Lorg/h2/table/TableFilter; lock (Lorg/h2/engine/Session;ZZ)V 3 1
Lorg/h2/index/IndexCondition; isStart ()Z 3 1
Lorg/h2/result/LocalResult; addRow ([Lorg/h2/value/Value;)V 3 0
Lorg/h2/result/LocalResult; done ()V 3 0
Lorg/h2/command/dml/Select; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 3 1
Lorg/h2/index/TreeCursor; getSearchRow ()Lorg/h2/result/SearchRow; 3 2
Lorg/h2/result/LocalResult; getList (Lorg/h2/util/ObjectArray;)[Lorg/h2/expression/Expression; 3 1
Lorg/h2/index/IndexCursor; next ()Z 3 1
Lorg/h2/expression/ConditionAndOr; getCost ()I 1 -1
Lorg/h2/expression/ConditionAndOr; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 3 0
Lorg/h2/table/TableFilter; next ()Z 3 1
Lorg/h2/expression/ConditionAndOr; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 3 1
Lorg/h2/index/IndexCursor; isAlwaysFalse ()Z 3 2
Lorg/h2/index/IndexCursor; getMax (Lorg/h2/value/Value;Lorg/h2/value/Value;Z)Lorg/h2/value/Value; 3 0
Lorg/h2/command/dml/Select; queryWithoutCache (I)Lorg/h2/result/LocalResult; 3 1
Lorg/h2/command/Prepared; getParameters ()Lorg/h2/util/ObjectArray; 3 2
Lorg/h2/expression/ConditionExists; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 3 1
Lorg/h2/command/dml/Select; queryFlat (ILorg/h2/result/LocalResult;J)V 3 1
Lorg/h2/expression/ExpressionColumn; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 3 0
Lorg/h2/expression/ConditionNot; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 3 1
Lorg/h2/value/Value; compareTo (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 3 0
Lorg/h2/command/Parser; quoteIdentifier (Ljava/lang/String;)Ljava/lang/String; 3 0
Lorg/h2/expression/ConditionAndOr; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 3 1
Lorg/h2/index/TreeIndex; next (Lorg/h2/index/TreeNode;)Lorg/h2/index/TreeNode; 3 1
Lorg/h2/expression/Comparison; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 3 1
Lorg/h2/index/MultiVersionCursor; getSearchRow ()Lorg/h2/result/SearchRow; 3 1
Lorg/h2/engine/Database; areEqual (Lorg/h2/value/Value;Lorg/h2/value/Value;)Z 3 1
Lorg/h2/index/IndexCursor; getSearchRow (Lorg/h2/result/SearchRow;ILorg/h2/value/Value;Z)Lorg/h2/result/SearchRow; 3 0
Lorg/h2/index/BaseIndex; compareRows (Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)I 3 2
Lorg/h2/index/ViewCursor; next ()Z 3 1
Lorg/h2/table/Table; getTemplateRow ()Lorg/h2/result/Row; 3 2
Lorg/h2/value/ValueInt; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 3 2
Lorg/h2/index/IndexCursor; getSearchRow (Lorg/h2/result/SearchRow;ILorg/h2/value/Value;Z)Lorg/h2/result/SearchRow; 3 2
Lorg/h2/result/LocalResult; applyOffset ()V 3 0
Lorg/h2/expression/ExpressionColumn; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 3 1
Lorg/h2/index/TreeCursor; next ()Z 3 1
Lorg/h2/value/Value; compareTo (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 3 1
Lorg/h2/command/dml/Query; sameResultAsLast (Lorg/h2/engine/Session;[Lorg/h2/value/Value;[Lorg/h2/value/Value;J)Z 3 0
Lorg/h2/expression/ValueExpression; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 3 0
Lorg/h2/engine/Session; addTemporaryResult (Lorg/h2/result/LocalResult;)V 3 0
Lorg/h2/command/dml/Query; sameResultAsLast (Lorg/h2/engine/Session;[Lorg/h2/value/Value;[Lorg/h2/value/Value;J)Z 3 1
Lorg/h2/result/LocalResult; reset ()V 3 0
Lorg/h2/result/LocalResult; next ()Z 3 0
Lorg/h2/result/LocalResult; <init> (Lorg/h2/engine/Session;[Lorg/h2/expression/Expression;I)V 3 1
Lorg/h2/index/MultiVersionIndex; compareRows (Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)I 3 2
Lorg/h2/index/BaseIndex; compareKeys (Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)I 3 0
Lorg/h2/index/BaseIndex; compareKeys (Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)I 3 1
Lorg/h2/expression/Comparison; compareNotNull (Lorg/h2/engine/Database;Lorg/h2/value/Value;Lorg/h2/value/Value;I)Z 3 0
Lorg/h2/expression/ValueExpression; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 3 1
Lorg/h2/index/MultiVersionCursor; next ()Z 3 1
Lorg/h2/result/LocalResult; next ()Z 3 1
Lorg/dacapo/h2/TPCC; calculateSumDB ()J 1 -1
Lorg/dacapo/h2/TPCC; calculateSumDB (Ljava/lang/String;I)J 1 -1
Lorg/dacapo/h2/TPCC; prepareStatement (Ljava/lang/String;)Ljava/sql/PreparedStatement; 1 -1
Lorg/h2/jdbc/JdbcConnection; prepareStatement (Ljava/lang/String;III)Ljava/sql/PreparedStatement; 1 -1
Lorg/h2/jdbc/JdbcConnection; checkTypeConcurrency (II)V 1 -1
Lorg/h2/jdbc/JdbcConnection; checkHoldability (I)V 1 -1
Lorg/h2/expression/Wildcard; <init> (Ljava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/h2/expression/Wildcard; isWildcard ()Z 1 -1
Lorg/h2/expression/Wildcard; getSchemaName ()Ljava/lang/String; 1 -1
Lorg/h2/expression/Wildcard; getTableAlias ()Ljava/lang/String; 1 -1
Lorg/h2/util/ObjectArray; add (ILjava/lang/Object;)V 1 -1
Lorg/h2/table/TableFilter; getSchemaName ()Ljava/lang/String; 1 -1
Lorg/h2/table/TableFilter; isNaturalJoinColumn (Lorg/h2/table/Column;)Z 1 -1
Lorg/h2/jdbc/JdbcPreparedStatement; execute ()Z 1 -1
Lorg/h2/command/dml/Query; isQuery ()Z 1 -1
Lorg/h2/jdbc/JdbcStatement; getResultSet ()Ljava/sql/ResultSet; 1 -1
Lorg/h2/message/TraceObject; getTraceId ()I 1 -1
Lorg/h2/message/TraceObject; debugCodeAssign (Ljava/lang/String;IILjava/lang/String;)V 1 -1
Lorg/h2/jdbc/JdbcResultSet; getString (I)Ljava/lang/String; 1 -1
Lorg/h2/value/ValueInt; getString ()Ljava/lang/String; 1 -1
Lorg/h2/value/ValueShort; getString ()Ljava/lang/String; 1 -1
Lorg/h2/value/ValueTimestamp; getString ()Ljava/lang/String; 1 -1
Ljava/sql/Timestamp; toString ()Ljava/lang/String; 1 -1
Ljava/text/SimpleDateFormat; format (Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; 1 -1
Lgnu/java/text/StringFormatBuffer; <init> (Ljava/lang/StringBuffer;)V 1 -1
Ljava/text/SimpleDateFormat; formatWithAttribute (Ljava/util/Date;Lgnu/java/text/FormatBuffer;Ljava/text/FieldPosition;)V 1 -1
Lgnu/java/text/StringFormatBuffer; length ()I 1 -1
Ljava/text/SimpleDateFormat$CompiledField; getField ()I 1 -1
Ljava/text/DateFormat$Field; <clinit> ()V 1 -1
Ljava/text/DateFormat$Field; <init> (Ljava/lang/String;I)V 1 -1
Lgnu/java/text/StringFormatBuffer; setDefaultAttribute (Ljava/text/AttributedCharacterIterator$Attribute;)V 1 -1
Ljava/text/SimpleDateFormat$CompiledField; getSize ()I 1 -1
Ljava/text/SimpleDateFormat; withLeadingZeros (IILgnu/java/text/FormatBuffer;)V 1 -1
Lgnu/java/text/StringFormatBuffer; append (Ljava/lang/String;)V 1 -1
Lgnu/java/text/StringFormatBuffer; append (Ljava/lang/String;Ljava/text/AttributedCharacterIterator$Attribute;)V 1 -1
Lgnu/java/text/StringFormatBuffer; append (C)V 1 -1
Ljava/text/DecimalFormat; format (JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; 1 -1
Ljava/text/DecimalFormat; formatInternal (Ljava/math/BigDecimal;ZLjava/lang/StringBuffer;Ljava/text/FieldPosition;)V 1 -1
Ljava/math/BigDecimal; signum ()I 1 -1
Ljava/math/BigDecimal; valueOf (J)Ljava/math/BigDecimal; 1 -1
Ljava/math/BigDecimal; valueOf (JI)Ljava/math/BigDecimal; 1 -1
Ljava/math/BigDecimal; multiply (Ljava/math/BigDecimal;)Ljava/math/BigDecimal; 1 -1
Ljava/math/BigDecimal; abs ()Ljava/math/BigDecimal; 1 -1
Ljava/math/BigDecimal; toPlainString ()Ljava/lang/String; 1 -1
Ljava/text/DecimalFormat; appendDigit (Ljava/lang/String;Ljava/lang/StringBuffer;Z)V 1 -1
Ljava/text/NumberFormat$Field; <clinit> ()V 1 -1
Ljava/text/NumberFormat$Field; <init> (Ljava/lang/String;)V 1 -1
Ljava/text/DecimalFormat; addAttribute (Ljava/text/NumberFormat$Field;II)V 1 -1
Ljava/text/FieldPosition; <init> (Ljava/text/Format$Field;)V 1 -1
Ljava/text/FieldPosition; <init> (Ljava/text/Format$Field;I)V 1 -1
Ljava/text/FieldPosition; setBeginIndex (I)V 1 -1
Ljava/text/FieldPosition; setEndIndex (I)V 1 -1
Ljava/text/DecimalFormat; handleFractionalPart (Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/text/FieldPosition;Z)V 1 -1
Lorg/h2/value/ValueDecimal; getString ()Ljava/lang/String; 1 -1
Ljava/math/BigDecimal; toString ()Ljava/lang/String; 1 -1
Lorg/h2/jdbc/JdbcResultSet; get (I)Lorg/h2/value/Value; 3 0
Ljava/text/DecimalFormat; appendZero (Ljava/lang/StringBuffer;II)V 1 -1
Lorg/dacapo/h2/TPCC; calculateSumDB (Ljava/lang/String;I)J 3 1
Ljava/math/BigDecimal; <init> (Ljava/math/BigInteger;I)V 3 1
Lorg/h2/jdbc/JdbcResultSet; checkClosed ()V 3 0
Lorg/h2/message/TraceObject; debugCodeCall (Ljava/lang/String;J)V 3 0
Ljava/text/DecimalFormat; appendDigit (Ljava/lang/String;Ljava/lang/StringBuffer;Z)V 3 0
Lorg/h2/jdbc/JdbcPreparedStatement; checkClosed (Z)Z 3 1
Ljava/util/GregorianCalendar; getLinearDay (IIZ)J 3 0
Lorg/h2/jdbc/JdbcResultSet; get (I)Lorg/h2/value/Value; 3 1
Lorg/h2/message/TraceObject; debugCodeCall (Ljava/lang/String;J)V 3 1
Lgnu/java/text/StringFormatBuffer; append (C)V 3 1
Ljava/util/Calendar; setTimeInMillis (J)V 3 1
Lorg/h2/jdbc/JdbcResultSet; getString (I)Ljava/lang/String; 3 1
Lorg/h2/jdbc/JdbcResultSet; checkOnValidRow ()V 3 0
Lorg/h2/jdbc/JdbcResultSet; nextRow ()Z 3 1
Lorg/h2/jdbc/JdbcConnection; checkClosed ()V 3 1
Ljava/math/BigDecimal; valueOf (JI)Ljava/math/BigDecimal; 3 0
Ljava/text/SimpleDateFormat; formatWithAttribute (Ljava/util/Date;Lgnu/java/text/FormatBuffer;Ljava/text/FieldPosition;)V 3 0
Lorg/h2/jdbc/JdbcResultSet; checkColumnIndex (I)V 3 0
Ljava/util/Calendar; clear ()V 3 0
Lorg/h2/jdbc/JdbcResultSet; checkOnValidRow ()V 3 1
Ljava/util/GregorianCalendar; getLinearDay (IIZ)J 3 1
Ljava/util/GregorianCalendar; computeFields ()V 3 0
Ljava/util/GregorianCalendar; calculateDay ([IJZ)V 3 0
Lorg/h2/jdbc/JdbcResultSet; checkClosed ()V 3 2
Lorg/h2/jdbc/JdbcResultSet; checkColumnIndex (I)V 3 1
Lorg/h2/value/ValueBoolean; getString ()Ljava/lang/String; 1 -1
Lorg/h2/value/ValueNull; getString ()Ljava/lang/String; 1 -1
Ljava/text/DecimalFormat; format (JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; 3 1
Lorg/h2/value/ValueInt; getString ()Ljava/lang/String; 3 1
Ljava/text/DecimalFormat; formatInternal (Ljava/math/BigDecimal;ZLjava/lang/StringBuffer;Ljava/text/FieldPosition;)V 3 0
Ljava/text/SimpleDateFormat$CompiledField; getSize ()I 3 2
Ljava/math/BigDecimal; multiply (Ljava/math/BigDecimal;)Ljava/math/BigDecimal; 3 1
Ljava/text/DecimalFormat; addAttribute (Ljava/text/NumberFormat$Field;II)V 3 1
Ljava/sql/Timestamp; toString ()Ljava/lang/String; 3 0
Lorg/h2/jdbc/JdbcResultSet; getString (I)Ljava/lang/String; 3 2
Lgnu/java/text/StringFormatBuffer; append (Ljava/lang/String;)V 3 1
Ljava/util/Calendar; complete ()V 3 1
Lorg/h2/result/LocalResult; addRow ([Lorg/h2/value/Value;)V 3 1
Lorg/h2/engine/Session; getDatabase ()Lorg/h2/engine/Database; 3 2
Ljava/sql/Timestamp; toString ()Ljava/lang/String; 3 1
Ljava/text/SimpleDateFormat; withLeadingZeros (IILgnu/java/text/FormatBuffer;)V 3 0
Lgnu/java/text/StringFormatBuffer; length ()I 3 1
Ljava/math/BigInteger; times (Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger; 3 0
Ljava/math/BigInteger; toString ()Ljava/lang/String; 3 1
Ljava/sql/Timestamp; getTime ()J 3 1
Ljava/util/GregorianCalendar; isGregorian (II)Z 3 0
Ljava/text/DecimalFormat; handleFractionalPart (Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/text/FieldPosition;Z)V 3 0
Lgnu/java/text/StringFormatBuffer; append (Ljava/lang/String;Ljava/text/AttributedCharacterIterator$Attribute;)V 3 1
Ljava/math/BigDecimal; toString ()Ljava/lang/String; 3 0
Lgnu/java/text/StringFormatBuffer; setDefaultAttribute (Ljava/text/AttributedCharacterIterator$Attribute;)V 3 1
Ljava/util/GregorianCalendar; isGregorian (II)Z 3 1
Ljava/util/Calendar; clear ()V 3 1
Lgnu/java/text/StringFormatBuffer; append (Ljava/lang/String;)V 3 2
Ljava/util/Calendar; get (I)I 3 1
Ljava/util/GregorianCalendar; getWeekDay (II)I 3 1
Ljava/util/GregorianCalendar; computeFields ()V 3 1
Ljava/text/DecimalFormat; appendDigit (Ljava/lang/String;Ljava/lang/StringBuffer;Z)V 3 1
Lorg/h2/value/ValueDecimal; getString ()Ljava/lang/String; 3 1
Ljava/math/BigDecimal; signum ()I 3 1
Ljava/text/DecimalFormat; formatInternal (Ljava/math/BigDecimal;ZLjava/lang/StringBuffer;Ljava/text/FieldPosition;)V 3 1
Ljava/util/SimpleTimeZone; getOffset (IIIIII)I 3 0
Lgnu/java/text/StringFormatBuffer; length ()I 3 2
Ljava/text/SimpleDateFormat; withLeadingZeros (IILgnu/java/text/FormatBuffer;)V 3 1
Lgnu/java/text/StringFormatBuffer; append (Ljava/lang/String;Ljava/text/AttributedCharacterIterator$Attribute;)V 3 2
Ljava/util/GregorianCalendar; getLinearDay (IIZ)J 3 2
Ljava/text/SimpleDateFormat; formatWithAttribute (Ljava/util/Date;Lgnu/java/text/FormatBuffer;Ljava/text/FieldPosition;)V 3 1
Ljava/math/BigDecimal; divide (Ljava/math/BigDecimal;II)Ljava/math/BigDecimal; 3 1
Ljava/math/BigDecimal; toString ()Ljava/lang/String; 3 1
Ljava/math/BigDecimal; toPlainString ()Ljava/lang/String; 3 0
Lorg/h2/engine/Database; validateFilePasswordHash (Ljava/lang/String;[B)Z 1 -1
Lorg/h2/util/StringUtils; equals (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/h2/util/ByteUtils; compareSecure ([B[B)Z 1 -1
Lorg/h2/engine/Database; findUser (Ljava/lang/String;)Lorg/h2/engine/User; 1 -1
Lorg/h2/engine/User; validateUserPasswordHash ([B)Z 1 -1
Lorg/apache/derbyTesting/system/oe/direct/Standard; <clinit> ()V 1 -1
Lorg/apache/derbyTesting/system/oe/direct/Standard; <init> (Ljava/sql/Connection;)V 1 -1
Lorg/apache/derbyTesting/system/oe/direct/StatementHelper; <init> (Ljava/sql/Connection;ZI)V 1 -1
Ljava/util/IdentityHashMap; <clinit> ()V 1 -1
Ljava/util/IdentityHashMap; <init> ()V 1 -1
Ljava/util/IdentityHashMap; <init> (I)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; <init> ()V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Warehouse; <init> ()V 1 -1
Lorg/apache/derbyTesting/system/oe/model/District; <init> ()V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Order; <init> ()V 1 -1
Lorg/dacapo/h2/TPCCSubmitter; <init> (Lorg/dacapo/h2/TPCCReporter;Lorg/apache/derbyTesting/system/oe/client/Operations;Lorg/apache/derbyTesting/system/oe/util/OERandom;S)V 1 -1
Lorg/apache/derbyTesting/system/oe/client/Submitter; <init> (Lorg/apache/derbyTesting/system/oe/client/Display;Lorg/apache/derbyTesting/system/oe/client/Operations;Lorg/apache/derbyTesting/system/oe/util/OERandom;S)V 1 -1
LMMTkCallback; start (Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/Callback; isWarmup ()Z 1 -1
Lorg/dacapo/harness/Callback; start (Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/Callback; start (Ljava/lang/String;Z)V 1 -1
Lorg/dacapo/harness/TestHarness; getBuildVersion ()Ljava/lang/String; 1 -1
Lorg/dacapo/harness/Benchmark; startIteration ()V 1 -1
Lorg/dacapo/harness/TeePrintStream; openLog ()V 1 -1
Lorg/dacapo/harness/TeeOutputStream; openLog ()V 1 -1
Lorg/dacapo/harness/H2; iterate (Ljava/lang/String;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect41111; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/dacapo/h2/TPCC; iteration (Ljava/lang/String;)V 1 -1
Lorg/apache/derbyTesting/system/oe/client/Submitter; clearTransactionCount ()V 1 -1
Lorg/dacapo/h2/TPCC; newThread (ILorg/apache/derbyTesting/system/oe/client/Submitter;I)Ljava/lang/Thread; 1 -1
Lorg/dacapo/h2/TPCC$3; <init> (Ljava/lang/String;Lorg/apache/derbyTesting/system/oe/client/Submitter;I)V 1 -1
Lorg/dacapo/h2/TPCC$3; run ()V 1 -1
Lorg/dacapo/h2/TPCCSubmitter; runTransactions (Ljava/lang/Object;I)J 1 -1
Lorg/dacapo/h2/TPCCSubmitter; getNextSeed ()J 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; setSeed (J)V 1 -1
Lorg/dacapo/h2/TPCCSubmitter; getTransactionType ()I 1 -1
Lorg/dacapo/h2/TPCCSubmitter; runTransaction (ILjava/lang/Object;)Z 1 -1
Lorg/apache/derbyTesting/system/oe/client/Submitter; runPayment (Ljava/lang/Object;Z)V 1 -1
Lorg/apache/derbyTesting/system/oe/client/Submitter; warehouse ()S 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; district ()S 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomCLast ()Ljava/lang/String; 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; payment ()Ljava/math/BigDecimal; 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; randomDecimal (III)Ljava/math/BigDecimal; 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; NURand255 ()I 1 -1
Lorg/apache/derbyTesting/system/oe/direct/Standard; payment (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSSSILjava/lang/String;)V 1 -1
Lorg/apache/derbyTesting/system/oe/direct/Standard; payment (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSSSLjava/lang/String;Ljava/lang/String;)V 1 -1
Lorg/apache/derbyTesting/system/oe/direct/Standard; newOrder (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSI[I[S[S)V 1 -1
Ljava/util/IdentityHashMap; get (Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Ljava/util/IdentityHashMap; xform (Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/apache/derbyTesting/system/oe/direct/Standard; sortOrderItems ([I[S[S)V 1 -1
Lorg/apache/derbyTesting/system/oe/direct/Standard; paymentById (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSSSILjava/lang/String;)V 1 -1
Lorg/h2/expression/Parameter; mapColumns (Lorg/h2/table/ColumnResolver;I)V 1 -1
Lorg/h2/expression/Parameter; isConstant ()Z 1 -1
Lorg/h2/expression/Parameter; getType ()I 1 -1
Lorg/h2/expression/Parameter; getCost ()I 1 -1
Lorg/h2/expression/Parameter; getSQL ()Ljava/lang/String; 1 -1
Lorg/h2/expression/Parameter; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 1 -1
Lorg/apache/derbyTesting/system/oe/direct/OrderItem4Sort; compareTo (Ljava/lang/Object;)I 1 -1
Lorg/h2/expression/Parameter; setEvaluatable (Lorg/h2/table/TableFilter;Z)V 1 -1
Ljava/util/IdentityHashMap; put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/h2/jdbc/JdbcPreparedStatement; executeQuery ()Ljava/sql/ResultSet; 1 -1
Lorg/h2/result/SortOrder; sort (Lorg/h2/util/ObjectArray;)V 1 -1
Lorg/h2/result/SortOrder; sort (Lorg/h2/util/ObjectArray;II)V 1 -1
Lorg/apache/derbyTesting/system/oe/direct/StatementHelper; reset (Ljava/sql/PreparedStatement;)V 1 -1
Lorg/h2/jdbc/JdbcResultSet; getObject (I)Ljava/lang/Object; 1 -1
Ljava/sql/SQLException; <init> (Ljava/lang/String;)V 1 -1
Lorg/h2/jdbc/JdbcConnection; convertToDefaultObject (Lorg/h2/value/Value;)Ljava/lang/Object; 1 -1
Lorg/h2/jdbc/JdbcConnection; rollbackInternal ()V 1 -1
Lorg/h2/value/ValueDecimal; getObject ()Ljava/lang/Object; 1 -1
Lorg/h2/command/Parser; parseRollback ()Lorg/h2/command/dml/TransactionCommand; 1 -1
Lorg/h2/command/dml/Update; <init> (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/command/Parser; readSimpleTableFilter ()Lorg/h2/table/TableFilter; 1 -1
Lorg/h2/command/dml/Update; setTableFilter (Lorg/h2/table/TableFilter;)V 1 -1
Lorg/h2/command/Parser; readTableColumn (Lorg/h2/table/TableFilter;)Lorg/h2/table/Column; 1 -1
Lorg/h2/jdbc/JdbcResultSet; getObject (Ljava/lang/String;)Ljava/lang/Object; 1 -1
Lorg/h2/engine/Session; rollback ()V 1 -1
Lorg/h2/jdbc/JdbcResultSet; get (Ljava/lang/String;)Lorg/h2/value/Value; 1 -1
Ljava/util/IdentityHashMap; unxform (Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/h2/jdbc/JdbcResultSet; getColumnIndex (Ljava/lang/String;)I 1 -1
Lorg/h2/result/LocalResult; getAlias (I)Ljava/lang/String; 1 -1
Lorg/h2/value/ValueInt; getObject ()Ljava/lang/Object; 1 -1
Lorg/h2/expression/Operation; <init> (ILorg/h2/expression/Expression;Lorg/h2/expression/Expression;)V 1 -1
Lorg/h2/command/dml/Update; setAssignment (Lorg/h2/table/Column;Lorg/h2/expression/Expression;)V 1 -1
Lorg/h2/command/dml/Update; setCondition (Lorg/h2/expression/Expression;)V 1 -1
Lorg/h2/command/dml/Update; prepare ()V 1 -1
Lorg/h2/expression/Operation; mapColumns (Lorg/h2/table/ColumnResolver;I)V 1 -1
Lorg/h2/expression/Operation; optimize (Lorg/h2/engine/Session;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/value/Value; getHigherOrder (II)I 1 -1
Lorg/h2/command/dml/Update; update ()I 1 -1
Lorg/h2/expression/Function; setParameter (ILorg/h2/expression/Expression;)V 1 -1
Lorg/h2/result/RowList; <init> (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/table/Table; updateRows (Lorg/h2/command/Prepared;Lorg/h2/engine/Session;Lorg/h2/result/RowList;)V 1 -1
Lorg/h2/result/RowList; reset ()V 1 -1
Lorg/h2/result/RowList; hasNext ()Z 1 -1
Lorg/h2/table/Table; fireRow ()Z 1 -1
Lorg/h2/result/RowList; invalidateCache ()V 1 -1
Lorg/h2/result/RowList; close ()V 1 -1
Lorg/h2/command/dml/Update; isTransactional ()Z 1 -1
Lorg/h2/expression/Operation; setEvaluatable (Lorg/h2/table/TableFilter;Z)V 1 -1
Lorg/h2/expression/Operation; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 1 -1
Lorg/h2/expression/Alias; <init> (Lorg/h2/expression/Expression;Ljava/lang/String;Z)V 1 -1
Lorg/h2/log/LogSystem; commit (Lorg/h2/engine/Session;)V 1 -1
Lorg/dacapo/h2/TPCCReporter; done ()V 1 -1
Lorg/h2/expression/Alias; mapColumns (Lorg/h2/table/ColumnResolver;I)V 1 -1
Lorg/apache/derbyTesting/system/oe/client/Submitter; runOrderStatus (Ljava/lang/Object;Z)V 1 -1
Lorg/h2/expression/Alias; optimize (Lorg/h2/engine/Session;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/result/LocalResult; createShallowCopy (Lorg/h2/engine/Session;)Lorg/h2/result/LocalResult; 1 -1
Lorg/h2/result/LocalResult; <init> ()V 1 -1
Lorg/h2/expression/Alias; setEvaluatable (Lorg/h2/table/TableFilter;Z)V 1 -1
Lorg/apache/derbyTesting/system/oe/direct/Standard; orderStatus (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSLjava/lang/String;)V 1 -1
Lorg/h2/table/TableFilter; get ()Lorg/h2/result/Row; 1 -1
Lorg/h2/index/IndexCursor; get ()Lorg/h2/result/Row; 1 -1
Lorg/h2/index/MultiVersionCursor; get ()Lorg/h2/result/Row; 1 -1
Lorg/h2/expression/ValueExpression; getDefault ()Lorg/h2/expression/ValueExpression; 1 -1
Lorg/h2/table/Table; getColumn (I)Lorg/h2/table/Column; 1 -1
Lorg/h2/expression/Operation; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; setWarehouse (S)V 1 -1
Lorg/h2/value/ValueInt; add (Lorg/h2/value/Value;)Lorg/h2/value/Value; 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; setDistrict (S)V 1 -1
Lorg/h2/constraint/ConstraintUnique; isBefore ()Z 1 -1
Lorg/h2/constraint/ConstraintUnique; checkRow (Lorg/h2/engine/Session;Lorg/h2/table/Table;Lorg/h2/result/Row;Lorg/h2/result/Row;)V 1 -1
Lorg/h2/constraint/ConstraintReferential; isBefore ()Z 1 -1
Lorg/h2/result/RowList; add (Lorg/h2/result/Row;)V 1 -1
Lorg/h2/result/Row; getMemorySize ()I 1 -1
Lorg/h2/jdbc/JdbcPreparedStatement; setDouble (ID)V 1 -1
Lorg/h2/result/RowList; next ()Lorg/h2/result/Row; 1 -1
Lorg/h2/table/TableData; removeRow (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 1 -1
Lorg/h2/store/Record; isDeleted ()Z 1 -1
Lorg/h2/index/MultiVersionIndex; remove (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 1 -1
Lorg/h2/index/ScanIndex; remove (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 1 -1
Lorg/h2/value/ValueStringFixed; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 1 -1
Lorg/h2/value/ValueDecimal; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 1 -1
Lorg/h2/constraint/ConstraintReferential; checkRow (Lorg/h2/engine/Session;Lorg/h2/table/Table;Lorg/h2/result/Row;Lorg/h2/result/Row;)V 1 -1
Lorg/h2/engine/Database; getReferentialIntegrity ()Z 1 -1
Lorg/h2/table/Table; getCheckForeignKeyConstraints ()Z 1 -1
Lorg/h2/constraint/ConstraintReferential; checkRowOwnTable (Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;)V 1 -1
Lorg/h2/value/Value; compareEqual (Lorg/h2/value/Value;)Z 1 -1
Lorg/h2/value/ValueDouble; <clinit> ()V 1 -1
Lorg/h2/value/ValueDouble; <init> (D)V 1 -1
Lorg/h2/constraint/ConstraintReferential; checkRowRefTable (Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;)V 1 -1
Lorg/h2/constraint/ConstraintReferential; isEqual (Lorg/h2/result/Row;Lorg/h2/result/Row;)Z 1 -1
Lorg/h2/value/ValueDouble; get (D)Lorg/h2/value/ValueDouble; 1 -1
Lorg/h2/value/ValueDouble; hashCode ()I 1 -1
Lorg/h2/value/ValueDouble; getType ()I 1 -1
Lorg/h2/value/ValueDouble; equals (Ljava/lang/Object;)Z 1 -1
Lorg/h2/value/ValueDouble; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; setLast (Ljava/lang/String;)V 1 -1
Lorg/h2/value/ValueInt; subtract (Lorg/h2/value/Value;)Lorg/h2/value/Value; 1 -1
Lorg/h2/jdbc/JdbcResultSet; getInt (Ljava/lang/String;)I 1 -1
Lorg/h2/util/New; hashMap (I)Ljava/util/HashMap; 1 -1
Lorg/h2/result/LocalResult; getColumnName (I)Ljava/lang/String; 1 -1
Lorg/h2/jdbc/JdbcResultSet; getString (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/h2/expression/ExpressionColumn; getTableName ()Ljava/lang/String; 1 -1
Lorg/h2/table/Column; getTable ()Lorg/h2/table/Table; 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; setBalance (Ljava/lang/String;)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; setFirst (Ljava/lang/String;)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; setMiddle (Ljava/lang/String;)V 1 -1
Lgnu/java/math/MPN; udiv_qrnnd (JI)J 1 -1
Lgnu/java/math/MPN; submul_1 ([II[III)I 1 -1
Lorg/apache/derbyTesting/system/oe/direct/Standard; getOrderStatusForCustomer (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;ZLorg/apache/derbyTesting/system/oe/model/Customer;)V 1 -1
Lgnu/java/math/MPN; rshift ([I[IIII)I 1 -1
Lorg/h2/value/ValueDecimal; subtract (Lorg/h2/value/Value;)Lorg/h2/value/Value; 1 -1
Ljava/math/BigDecimal; subtract (Ljava/math/BigDecimal;)Ljava/math/BigDecimal; 1 -1
Ljava/math/BigInteger; setNegative (Ljava/math/BigInteger;)V 1 -1
Lorg/h2/command/Parser; readAggregate (I)Lorg/h2/expression/Expression; 1 -1
Ljava/math/BigDecimal; add (Ljava/math/BigDecimal;)Ljava/math/BigDecimal; 1 -1
Lorg/h2/expression/Aggregate; <init> (ILorg/h2/expression/Expression;Lorg/h2/command/dml/Select;Z)V 1 -1
Ljava/math/BigInteger; add (Ljava/math/BigInteger;Ljava/math/BigInteger;I)Ljava/math/BigInteger; 1 -1
Lorg/h2/expression/Aggregate; mapColumns (Lorg/h2/table/ColumnResolver;I)V 1 -1
Lgnu/java/math/MPN; cmp ([I[II)I 1 -1
Lorg/h2/value/ValueDecimal; add (Lorg/h2/value/Value;)Lorg/h2/value/Value; 1 -1
Lorg/h2/expression/Aggregate; optimize (Lorg/h2/engine/Session;)Lorg/h2/expression/Expression; 1 -1
Ljava/math/BigInteger; shift (Ljava/math/BigInteger;I)Ljava/math/BigInteger; 1 -1
Ljava/math/BigInteger; setShift (Ljava/math/BigInteger;I)V 1 -1
Lorg/h2/command/dml/Select; getGroupByExpressionCount ()I 1 -1
Lorg/h2/value/ValueTimestamp; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 1 -1
Ljava/sql/Timestamp; compareTo (Ljava/sql/Timestamp;)I 1 -1
Ljava/util/Date; compareTo (Ljava/util/Date;)I 1 -1
Lorg/apache/derbyTesting/system/oe/model/Order; clear ()V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; getWarehouse ()S 1 -1
Lorg/apache/derbyTesting/system/oe/model/Order; setWarehouse (S)V 1 -1
Lorg/apache/derbyTesting/system/oe/direct/StatementHelper; getAddress (Ljava/sql/ResultSet;Ljava/lang/String;)Lorg/apache/derbyTesting/system/oe/model/Address; 1 -1
Lorg/apache/derbyTesting/system/oe/model/Order; setDistrict (S)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; getId ()I 1 -1
Lorg/h2/expression/Alias; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 1 -1
Lorg/h2/expression/Aggregate; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 1 -1
Lorg/apache/derbyTesting/system/oe/model/Address; <init> ()V 1 -1
Lorg/apache/derbyTesting/system/oe/direct/StatementHelper; getAddress (Lorg/apache/derbyTesting/system/oe/model/Address;Ljava/sql/ResultSet;Ljava/lang/String;)Lorg/apache/derbyTesting/system/oe/model/Address; 1 -1
Lorg/apache/derbyTesting/system/oe/model/Address; clear ()V 1 -1
Lorg/h2/jdbc/JdbcResultSet; findColumn (Ljava/lang/String;)I 1 -1
Lorg/apache/derbyTesting/system/oe/model/Address; setStreet1 (Ljava/lang/String;)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Address; setStreet2 (Ljava/lang/String;)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Address; setCity (Ljava/lang/String;)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Address; setState (Ljava/lang/String;)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Address; setZip (Ljava/lang/String;)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; setAddress (Lorg/apache/derbyTesting/system/oe/model/Address;)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; setPhone (Ljava/lang/String;)V 1 -1
Lorg/h2/jdbc/JdbcResultSet; getTimestamp (Ljava/lang/String;)Ljava/sql/Timestamp; 1 -1
Lorg/h2/value/ValueTimestamp; getTimestamp ()Ljava/sql/Timestamp; 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; setSince (Ljava/sql/Timestamp;)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; setCredit (Ljava/lang/String;)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; setCredit_lim (Ljava/lang/String;)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; setDiscount (Ljava/lang/String;)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; setData (Ljava/lang/String;)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; getCredit ()Ljava/lang/String; 1 -1
Lorg/apache/derbyTesting/system/oe/model/District; clear ()V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Warehouse; clear ()V 1 -1
Lorg/apache/derbyTesting/system/oe/model/District; setWarehouse (S)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Warehouse; setId (S)V 1 -1
Lorg/h2/util/ValueHashMap; newInstance (Lorg/h2/store/DataHandler;)Lorg/h2/util/ValueHashMap; 1 -1
Lorg/h2/util/ValueHashMap; <init> (Lorg/h2/store/DataHandler;)V 1 -1
Lorg/h2/util/HashBase; <init> ()V 1 -1
Lorg/h2/util/ValueHashMap; reset (I)V 1 -1
Lorg/h2/util/HashBase; reset (I)V 1 -1
Lorg/h2/value/ValueArray; get ([Lorg/h2/value/Value;)Lorg/h2/value/ValueArray; 1 -1
Lorg/h2/value/ValueArray; <init> ([Lorg/h2/value/Value;)V 1 -1
Lorg/h2/util/ValueHashMap; get (Lorg/h2/value/Value;)Ljava/lang/Object; 1 -1
Lorg/h2/util/ValueHashMap; getIndex (Lorg/h2/value/Value;)I 1 -1
Lorg/h2/value/ValueArray; hashCode ()I 1 -1
Lorg/h2/util/ValueHashMap; put (Lorg/h2/value/Value;Ljava/lang/Object;)V 1 -1
Lorg/h2/util/HashBase; checkSizePut ()V 1 -1
Lorg/h2/expression/Alias; updateAggregate (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/expression/Aggregate; updateAggregate (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/command/dml/Select; getCurrentGroupRowId ()I 1 -1
Lorg/h2/expression/AggregateData; <init> (II)V 1 -1
Lorg/h2/expression/AggregateData; add (Lorg/h2/engine/Database;ZLorg/h2/value/Value;)V 1 -1
Lorg/h2/util/HashBase; size ()I 1 -1
Lorg/h2/util/ValueHashMap; keys ()Lorg/h2/util/ObjectArray; 1 -1
Lorg/h2/engine/Database; compareTypeSave (Lorg/h2/value/Value;Lorg/h2/value/Value;)I 1 -1
Lorg/h2/value/ValueArray; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 1 -1
Lorg/h2/value/ValueArray; getList ()[Lorg/h2/value/Value; 1 -1
Lorg/h2/expression/Alias; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 1 -1
Lorg/h2/expression/Aggregate; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 1 -1
Lorg/h2/command/dml/Select; isQuickAggregateQuery ()Z 1 -1
Lorg/h2/expression/AggregateData; getValue (Lorg/h2/engine/Database;Z)Lorg/h2/value/Value; 1 -1
Lorg/h2/command/dml/Select; isHavingNullOrFalse ([Lorg/h2/value/Value;)Z 1 -1
Lorg/h2/command/dml/Select; keepOnlyDistinct ([Lorg/h2/value/Value;I)[Lorg/h2/value/Value; 1 -1
Lorg/h2/expression/Alias; getAlias ()Ljava/lang/String; 1 -1
Lorg/apache/derbyTesting/system/oe/model/Order; setId (I)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Order; getId ()I 1 -1
Lorg/h2/table/Column; validateConvertUpdateSequence (Lorg/h2/engine/Session;Lorg/h2/value/Value;)Lorg/h2/value/Value; 1 -1
Lorg/apache/derbyTesting/system/oe/model/Order; setEntry_d (Ljava/sql/Timestamp;)V 1 -1
Lorg/h2/value/ValueNull; getType ()I 1 -1
Lorg/h2/value/ValueNull; getObject ()Ljava/lang/Object; 1 -1
Lorg/apache/derbyTesting/system/oe/model/Order; setCarrier_id (Ljava/lang/Integer;)V 1 -1
Lorg/h2/value/Value; getInt ()I 1 -1
Lorg/h2/value/ValueShort; getShort ()S 1 -1
Lorg/apache/derbyTesting/system/oe/model/Order; setOl_cnt (I)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Order; getOl_cnt ()I 1 -1
Lorg/h2/expression/Function; setDataType (Lorg/h2/table/Column;)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Warehouse; setName (Ljava/lang/String;)V 1 -1
Lorg/h2/expression/Function; getType ()I 1 -1
Lorg/apache/derbyTesting/system/oe/model/Warehouse; setAddress (Lorg/apache/derbyTesting/system/oe/model/Address;)V 1 -1
Lorg/h2/table/TableData; getMaxDataModificationId ()J 1 -1
Lorg/apache/derbyTesting/system/oe/model/Order; getWarehouse ()S 1 -1
Lorg/apache/derbyTesting/system/oe/model/Order; getDistrict ()S 1 -1
Lorg/apache/derbyTesting/system/oe/model/OrderLine; <init> ()V 1 -1
Lorg/apache/derbyTesting/system/oe/model/OrderLine; setI_id (I)V 1 -1
Lorg/h2/jdbc/JdbcResultSet; getShort (Ljava/lang/String;)S 1 -1
Lorg/apache/derbyTesting/system/oe/model/Warehouse; getName ()Ljava/lang/String; 1 -1
Lorg/apache/derbyTesting/system/oe/model/OrderLine; setQuantity (S)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/OrderLine; setAmount (Ljava/lang/String;)V 1 -1
Lorg/h2/value/ValueNull; getTimestamp ()Ljava/sql/Timestamp; 1 -1
Lorg/apache/derbyTesting/system/oe/model/OrderLine; setDelivery_d (Ljava/sql/Timestamp;)V 1 -1
Lorg/h2/log/UndoLogRecord; undo (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/command/Parser; readIf (Ljava/lang/String;)Z 3 1
Lorg/h2/value/ValueInt; equals (Ljava/lang/Object;)Z 1 -1
Lorg/h2/jdbc/JdbcPreparedStatement; setObject (ILjava/lang/Object;I)V 1 -1
Lorg/h2/value/DataType; convertSQLTypeToValueType (I)I 1 -1
Lorg/h2/value/DataType; convertToValue (Lorg/h2/engine/SessionInterface;Ljava/lang/Object;I)Lorg/h2/value/Value; 1 -1
Lorg/h2/command/Parser; readFactor ()Lorg/h2/expression/Expression; 3 0
Lorg/dacapo/h2/TPCCSubmitter; runTransactions (Ljava/lang/Object;I)J 3 0
Lorg/h2/expression/Function; getPrecision ()J 1 -1
Lorg/h2/value/ValueDecimal; convertPrecision (J)Lorg/h2/value/Value; 1 -1
Lorg/h2/value/Value; convertPrecision (J)Lorg/h2/value/Value; 1 -1
Lorg/h2/value/ValueDecimal; multiply (Lorg/h2/value/Value;)Lorg/h2/value/Value; 1 -1
Lorg/h2/value/DataType; supportsAdd (I)Z 1 -1
Lorg/h2/value/DataType; getAddProofType (I)I 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; getData ()Ljava/lang/String; 1 -1
Lorg/apache/derbyTesting/system/oe/routines/Data; dataForBadCredit (Ljava/lang/String;IISSILjava/math/BigDecimal;)Ljava/lang/String; 1 -1
Lorg/h2/expression/Function; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 1 -1
Lorg/h2/expression/Function; substring (Ljava/lang/String;II)Ljava/lang/String; 1 -1
Lorg/apache/derbyTesting/system/oe/client/Submitter; runScheduleDelivery (Ljava/lang/Object;)V 1 -1
Lorg/apache/derbyTesting/system/oe/client/Submitter; runStockLevel (Ljava/lang/Object;)V 1 -1
Lorg/apache/derbyTesting/system/oe/util/OERandom; threshold ()I 1 -1
Lorg/apache/derbyTesting/system/oe/direct/Standard; stockLevel (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSI)V 1 -1
Lorg/h2/jdbc/JdbcConnection; getTransactionIsolation ()I 1 -1
Lorg/h2/engine/Database; update (Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V 1 -1
Lorg/h2/engine/Database; removeMeta (Lorg/h2/engine/Session;I)V 1 -1
Lorg/h2/table/Table; getTemplateSimpleRow (Z)Lorg/h2/result/SearchRow; 1 -1
Lorg/h2/result/SimpleRow; <init> ([Lorg/h2/value/Value;)V 1 -1
Lorg/h2/result/SimpleRow; setValue (ILorg/h2/value/Value;)V 1 -1
Lorg/h2/result/SimpleRow; getValue (I)Lorg/h2/value/Value; 1 -1
Lorg/h2/index/MultiVersionCursor; next ()Z 1 -1
Lorg/h2/index/BaseIndex; compareKeys (Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)I 1 -1
Lorg/h2/util/BitField; clear (I)V 1 -1
Lorg/h2/engine/Database; checkMetaFree (Lorg/h2/engine/Session;I)V 1 -1
Lorg/h2/table/TableFilter; getValue (Lorg/h2/table/Column;)Lorg/h2/value/Value; 1 -1
Lorg/h2/table/TableFilter; getSystemColumns ()[Lorg/h2/table/Column; 1 -1
Lorg/h2/command/dml/Optimizer; calculateBruteForceAll ()V 1 -1
Lorg/h2/util/Permutations; create ([Ljava/lang/Object;[Ljava/lang/Object;)Lorg/h2/util/Permutations; 1 -1
Lorg/h2/util/Permutations; <init> ([Ljava/lang/Object;[Ljava/lang/Object;I)V 1 -1
Lorg/h2/util/Permutations; reverseAfter (I)V 1 -1
Lorg/h2/command/dml/Optimizer; canStop (I)Z 1 -1
Lorg/h2/util/Permutations; next ()Z 1 -1
Lorg/h2/util/Permutations; moveIndex ()V 1 -1
Lorg/h2/util/Permutations; rightmostDip ()I 1 -1
Lorg/h2/table/TableFilter; optimizeFullCondition (Z)V 1 -1
Lorg/h2/expression/ConditionAndOr; addFilterConditions (Lorg/h2/table/TableFilter;Z)V 1 -1
Lorg/h2/expression/Comparison; addFilterConditions (Lorg/h2/table/TableFilter;Z)V 1 -1
Lorg/h2/expression/Expression; addFilterConditions (Lorg/h2/table/TableFilter;Z)V 1 -1
Lorg/h2/table/TableFilter; addFilterCondition (Lorg/h2/expression/Expression;Z)V 1 -1
Lorg/h2/table/TableFilter; addJoin (Lorg/h2/table/TableFilter;ZLorg/h2/expression/Expression;)V 1 -1
Lorg/h2/util/MathUtils; compare (JJ)I 1 -1
Lorg/h2/expression/AggregateData; groupDistinct (Lorg/h2/engine/Database;)V 1 -1
Lorg/h2/value/ValueLong; getType ()I 1 -1
Lorg/h2/value/ValueLong; getLong ()J 1 -1
Lorg/h2/value/Value; convertToInt (J)I 1 -1
Lorg/h2/command/Command; executeQueryLocal (I)Lorg/h2/result/LocalResult; 3 0
Lorg/h2/index/IndexCursor; get ()Lorg/h2/result/Row; 3 1
Lorg/h2/table/Table; fireConstraints (Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;Z)V 3 0
Lorg/apache/derbyTesting/system/oe/direct/Standard; orderStatus (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSI)V 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; clear ()V 1 -1
Lorg/h2/engine/Database; compare (Lorg/h2/value/Value;Lorg/h2/value/Value;)I 1 -1
Lorg/apache/derbyTesting/system/oe/model/Customer; setSince (Ljava/sql/Timestamp;)V 3 1
Lorg/h2/command/dml/Update; update ()I 3 0
Lorg/h2/value/ValueInt; hashCode ()I 1 -1
Lorg/h2/index/MultiVersionCursor; get ()Lorg/h2/result/Row; 3 0
Lorg/h2/expression/Parameter; getParamValue ()Lorg/h2/value/Value; 3 1
Lorg/h2/value/ValueDecimal; get (Ljava/math/BigDecimal;)Lorg/h2/value/ValueDecimal; 3 0
Lgnu/java/math/MPN; submul_1 ([II[III)I 3 0
Lorg/h2/jdbc/JdbcPreparedStatement; executeQuery ()Ljava/sql/ResultSet; 3 0
Lorg/h2/command/Command; executeQueryLocal (I)Lorg/h2/result/LocalResult; 3 1
Lorg/h2/jdbc/JdbcStatement; setExecutingStatement (Lorg/h2/command/CommandInterface;)V 3 1
Lorg/h2/message/Message; translate (Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String; 3 0
Lgnu/java/math/MPN; udiv_qrnnd (JI)J 3 0
Lorg/h2/jdbc/JdbcResultSet; getColumnIndex (Ljava/lang/String;)I 3 0
Lorg/h2/engine/Session; addLock (Lorg/h2/table/Table;)V 3 1
Lorg/h2/util/ValueHashMap; rehash (I)V 1 -1
Lorg/apache/derbyTesting/system/oe/direct/Standard; payment (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSSSLjava/lang/String;Ljava/lang/String;)V 3 0
Lorg/h2/table/TableData; removeRow (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 0
Lorg/h2/constraint/ConstraintReferential; checkRowOwnTable (Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;)V 3 0
Lorg/h2/jdbc/JdbcStatement; closeOldResultSet ()V 3 0
Lgnu/java/math/MPN; lshift ([II[III)I 3 0
Lgnu/java/math/MPN; lshift ([II[III)I 3 1
Lorg/h2/expression/ExpressionVisitor; getType ()I 3 2
Lorg/h2/index/MultiVersionIndex; commit (ILorg/h2/result/Row;)V 3 1
Lorg/h2/value/ValueStringFixed; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 3 1
Lorg/h2/command/dml/Query; getParameterValues ()[Lorg/h2/value/Value; 3 1
Lorg/h2/expression/Operation; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 3 0
Ljava/math/BigInteger; negate ([I[II)Z 3 0
Lorg/h2/jdbc/JdbcPreparedStatement; setShort (IS)V 3 1
Lorg/h2/result/RowList; next ()Lorg/h2/result/Row; 3 0
Lorg/h2/table/Table; fireConstraints (Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;Z)V 3 1
Lorg/dacapo/harness/TeeOutputStream; write (I)V 1 -1
Lorg/h2/constraint/ConstraintReferential; found (Lorg/h2/engine/Session;Lorg/h2/index/Index;Lorg/h2/result/SearchRow;Lorg/h2/result/Row;)Z 3 0
Lorg/h2/jdbc/JdbcResultSet; get (Ljava/lang/String;)Lorg/h2/value/Value; 3 1
Lorg/h2/index/ScanIndex; add (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 1
Lorg/h2/result/RowList; add (Lorg/h2/result/Row;)V 3 0
Lgnu/java/math/MPN; rshift ([I[IIII)I 3 0
Lorg/h2/message/TraceSystem; getTrace (Ljava/lang/String;)Lorg/h2/message/Trace; 3 1
Lorg/apache/derbyTesting/system/oe/direct/StatementHelper; prepareStatement (Ljava/lang/String;)Ljava/sql/PreparedStatement; 3 0
Lorg/h2/value/Value; compareEqual (Lorg/h2/value/Value;)Z 3 0
Ljava/math/BigDecimal; toBigInteger ()Ljava/math/BigInteger; 3 1
Lorg/h2/index/TreeIndex; replace (Lorg/h2/index/TreeNode;Lorg/h2/index/TreeNode;)V 3 0
Lorg/h2/expression/Alias; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 3 1
Lorg/h2/index/ScanIndex; remove (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 0
Lorg/h2/expression/Parameter; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 3 2
Lorg/h2/table/Table; fireRow ()Z 3 0
Ljava/util/IdentityHashMap; hash (Ljava/lang/Object;)I 3 0
Lorg/h2/jdbc/JdbcResultSet; getString (Ljava/lang/String;)Ljava/lang/String; 3 1
Lorg/h2/expression/Comparison; compareNotNull (Lorg/h2/engine/Database;Lorg/h2/value/Value;Lorg/h2/value/Value;I)Z 3 1
Lorg/h2/command/Prepared; trace (JI)V 3 0
Lorg/h2/index/TreeCursor; next ()Z 3 2
Lorg/h2/command/CommandContainer; query (I)Lorg/h2/result/LocalResult; 3 0
Lorg/h2/value/ValueInt; checkRange (J)Lorg/h2/value/ValueInt; 3 1
Lorg/h2/index/TreeNode; isFromLeft ()Z 3 1
Lorg/h2/jdbc/JdbcResultSet; closeInternal ()V 3 0
Lorg/h2/command/CommandContainer; query (I)Lorg/h2/result/LocalResult; 3 1
Ljava/util/IdentityHashMap; hash (Ljava/lang/Object;)I 3 1
Lorg/h2/index/MultiVersionCursor; getSearchRow ()Lorg/h2/result/SearchRow; 3 2
Lorg/h2/index/TreeIndex; remove (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 0
Lorg/h2/index/MultiVersionCursor; loadNext (Z)V 3 2
Lorg/h2/expression/Parameter; setValue (Lorg/h2/value/Value;Z)V 3 1
Lgnu/java/math/MPN; divide ([II[II)V 3 0
Ljava/math/BigInteger; realloc (I)V 3 0
Lorg/apache/derbyTesting/system/oe/direct/StatementHelper; getAddress (Ljava/sql/ResultSet;Ljava/lang/String;)Lorg/apache/derbyTesting/system/oe/model/Address; 3 1
Lorg/h2/expression/AggregateData; <init> (II)V 3 1
Lorg/h2/engine/Session; closeTemporaryResults ()V 3 0
Lorg/h2/util/MathUtils; setScale (Ljava/math/BigDecimal;I)Ljava/math/BigDecimal; 3 0
Lorg/apache/derbyTesting/system/oe/direct/Standard; newOrder (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSI[I[S[S)V 3 0
Lorg/h2/index/TreeIndex; findFirstNode (Lorg/h2/result/SearchRow;Z)Lorg/h2/index/TreeNode; 3 1
Lorg/h2/result/LocalResult; getColumnName (I)Ljava/lang/String; 3 1
Lorg/h2/engine/Session; getTrace ()Lorg/h2/message/Trace; 3 1
Lorg/h2/engine/Session; getUser ()Lorg/h2/engine/User; 3 2
Lorg/h2/result/Row; getVersion ()I 3 2
Lorg/h2/engine/Session; checkCommitRollback ()V 3 1
Lorg/h2/jdbc/JdbcPreparedStatement; clearParameters ()V 3 0
Lorg/h2/message/TraceObject; debugCodeAssign (Ljava/lang/String;IILjava/lang/String;)V 3 0
Lorg/h2/expression/ExpressionColumn; getTableName ()Ljava/lang/String; 3 1
Lorg/h2/jdbc/JdbcPreparedStatement; clearParameters ()V 3 1
Lorg/h2/jdbc/JdbcConnection; rollbackInternal ()V 3 1
Lorg/h2/jdbc/JdbcPreparedStatement; executeQuery ()Ljava/sql/ResultSet; 3 1
Lorg/h2/util/ObjectArray; <init> (I)V 3 1
Lorg/h2/index/TreeIndex; add (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 2
Lorg/h2/value/ValueArray; get ([Lorg/h2/value/Value;)Lorg/h2/value/ValueArray; 3 1
Ljava/math/BigInteger; toString (I)Ljava/lang/String; 3 1
Lorg/h2/store/Record; isDeleted ()Z 3 2
Ljava/util/IdentityHashMap; get (Ljava/lang/Object;)Ljava/lang/Object; 3 0
Lorg/dacapo/h2/TPCC; report (Ljava/io/PrintStream;)V 1 -1
Lorg/apache/derbyTesting/system/oe/client/Submitter; getTransactionCount ()[I 1 -1
Ljava/util/Formatter; <clinit> ()V 1 -1
Ljava/util/Formatter; <init> (Ljava/lang/Appendable;Ljava/util/Locale;)V 1 -1
Ljava/util/Formatter; format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter; 1 -1
Ljava/util/Formatter; format (Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter; 1 -1
Ljava/util/Formatter; advance ()V 1 -1
Ljava/util/Formatter; parseArgumentIndex ()I 1 -1
Ljava/util/Formatter; parseInt ()I 1 -1
Ljava/util/Formatter; parseFlags ()I 1 -1
Ljava/util/Formatter; parseWidth ()I 1 -1
Ljava/util/Formatter; parsePrecision ()I 1 -1
Ljava/util/Formatter; checkFlags (IIC)V 1 -1
Ljava/util/Formatter; decimalConversion (Ljava/lang/Object;IIIC)V 1 -1
Ljava/util/Formatter; basicIntegralConversion (Ljava/lang/Object;IIIIC)Lgnu/java/lang/CPStringBuilder; 1 -1
Ljava/util/Formatter; noPrecision (I)V 1 -1
Ljava/util/Formatter; applyLocalization (Lgnu/java/lang/CPStringBuilder;IIZ)V 1 -1
Ljava/util/Formatter; genericFormat (Ljava/lang/String;III)V 1 -1
Ljava/util/Formatter; floatingDecimalConversion (Ljava/lang/Object;IIIC)V 1 -1
Ljava/util/Formatter; percentFormat (III)V 1 -1
Ljava/util/Formatter; newLineFormat (III)V 1 -1
Lorg/dacapo/h2/TPCC; resetToInitialData ()V 1 -1
Lorg/h2/command/Parser; parseDelete ()Lorg/h2/command/dml/Delete; 1 -1
Lorg/h2/command/dml/Delete; <init> (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/command/dml/Delete; setTableFilter (Lorg/h2/table/TableFilter;)V 1 -1
Lorg/h2/command/dml/Delete; prepare ()V 1 -1
Lorg/h2/command/dml/Delete; update ()I 1 -1
Lorg/h2/result/RowList; size ()I 1 -1
Lorg/h2/command/dml/Delete; isTransactional ()Z 1 -1
Lorg/h2/command/dml/Delete; setCondition (Lorg/h2/expression/Expression;)V 1 -1
Lorg/h2/expression/Comparison; getCast (Lorg/h2/expression/Expression;IJIILorg/h2/engine/Session;)Lorg/h2/expression/Expression; 1 -1
Lorg/h2/expression/Function; setDataType (IJII)V 1 -1
Lorg/h2/value/ValueBoolean; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 1 -1
Lorg/h2/command/dml/Delete; update ()I 3 0
Lorg/h2/constraint/ConstraintReferential; checkRow (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 1 -1
Lorg/h2/value/ValueShort; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 3 2
Lorg/h2/expression/ValueExpression; getCost ()I 1 -1
Lorg/h2/index/TreeIndex; replace (Lorg/h2/index/TreeNode;Lorg/h2/index/TreeNode;)V 3 1
Lorg/h2/value/ValueStringBase; getPrecision ()J 3 1
Lorg/h2/value/ValueBoolean; getBoolean ()Ljava/lang/Boolean; 3 2
Lorg/h2/table/TableData; removeRow (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 1
Lorg/h2/value/ValueNull; getBoolean ()Ljava/lang/Boolean; 1 -1
Lorg/h2/value/ValueStringBase; getString ()Ljava/lang/String; 3 2
Lorg/dacapo/h2/TPCC; calculateSumDB (Ljava/lang/String;I)J 3 2
Lorg/h2/table/Column; getColumnId ()I 3 2
Lorg/h2/value/ValueShort; getString ()Ljava/lang/String; 3 1
Lorg/h2/value/ValueTimestamp; getString ()Ljava/lang/String; 3 0
Lorg/h2/jdbc/JdbcResultSet; next ()Z 3 1
Ljava/util/GregorianCalendar; calculateDay ([IJZ)V 3 1
Lorg/h2/value/ValueTimestamp; getString ()Ljava/lang/String; 3 1
Lorg/h2/jdbc/JdbcConnection; checkClosed (Z)V 3 2
Lorg/dacapo/harness/Benchmark; stopIteration ()V 1 -1
Lorg/dacapo/harness/TeePrintStream; closeLog ()V 1 -1
Lorg/dacapo/harness/TeeOutputStream; closeLog ()V 1 -1
Lorg/dacapo/harness/TeeOutputStream; flush ()V 1 -1
LMMTkCallback; stop ()V 1 -1
Lorg/dacapo/harness/Callback; stop ()V 1 -1
Lorg/dacapo/harness/Callback; stop (Z)V 1 -1
Lorg/dacapo/harness/Benchmark; validate (Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config; getOutputs (Ljava/lang/String;)Ljava/util/Set; 1 -1
Lorg/dacapo/parser/Config; hasDigest (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config$OutputFile; hasDigest ()Z 1 -1
Lorg/dacapo/parser/Config; getDigest (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/dacapo/harness/Benchmark; fileInScratch (Ljava/lang/String;)Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; isTextFile (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config; filterScratch (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/harness/FileDigest; get (Ljava/lang/String;ZZLjava/io/File;)[B 1 -1
Lorg/dacapo/harness/FileDigest; getText (Ljava/io/File;ZLjava/io/File;)[B 1 -1
Lorg/dacapo/harness/Digest; create ()Ljava/security/MessageDigest; 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect39442; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect39442; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lgnu/java/security/jce/hash/Sha160Spi; <init> ()V 1 -1
Lgnu/java/security/jce/hash/MessageDigestAdapter; <init> (Ljava/lang/String;)V 1 -1
Lgnu/java/security/jce/hash/MessageDigestAdapter; <init> (Lgnu/java/security/hash/IMessageDigest;)V 1 -1
Ljava/security/DummyMessageDigest; <init> (Ljava/security/MessageDigestSpi;Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/FileDigest; replaceAllFixed (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 1 -1
Ljava/security/DummyMessageDigest; engineUpdate (B)V 1 -1
Lgnu/java/security/jce/hash/Sha160Spi; engineUpdate (B)V 1 -1
Lgnu/java/security/jce/hash/MessageDigestAdapter; engineUpdate (B)V 1 -1
Ljava/security/DummyMessageDigest; engineDigest ()[B 1 -1
Lgnu/java/security/jce/hash/Sha160Spi; engineDigest ()[B 1 -1
Lgnu/java/security/jce/hash/MessageDigestAdapter; engineDigest ()[B 1 -1
Lorg/dacapo/harness/Digest; toString ([B)Ljava/lang/String; 1 -1
Lorg/dacapo/parser/Config; hasLines (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config$OutputFile; hasLines ()Z 1 -1
Lorg/dacapo/parser/Config; hasBytes (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/parser/Config$OutputFile; hasBytes ()Z 1 -1
Lorg/dacapo/parser/Config; checkExists (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/harness/Callback; complete (Ljava/lang/String;Z)V 1 -1
Lorg/dacapo/harness/Callback; complete (Ljava/lang/String;ZZ)V 1 -1
Lorg/dacapo/harness/H2; postIteration (Ljava/lang/String;)V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect41112; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/dacapo/h2/TPCC; postIteration (Ljava/lang/String;)V 1 -1
Lorg/h2/jdbc/JdbcConnection; close ()V 1 -1
Lorg/h2/engine/Session; cancel ()V 1 -1
Lorg/h2/jdbc/JdbcConnection; closeAndSetNull (Lorg/h2/command/CommandInterface;)Lorg/h2/command/CommandInterface; 1 -1
Lorg/h2/engine/Session; close ()V 1 -1
Lorg/h2/engine/Database; removeSession (Lorg/h2/engine/Session;)V 1 -1
Lorg/dacapo/harness/Benchmark; postIteration (Ljava/lang/String;)V 1 -1
Lorg/dacapo/harness/Benchmark; postIterationCleanup (Ljava/lang/String;)V 1 -1
Lorg/dacapo/parser/Config; isKept (Ljava/lang/String;Ljava/lang/String;)Z 1 -1
Lorg/dacapo/harness/Benchmark; deleteFile (Ljava/io/File;)V 1 -1
Lorg/dacapo/harness/Callback; runAgain ()Z 1 -1
Lorg/dacapo/harness/TeePrintStream; version ()V 1 -1
Lorg/dacapo/harness/TeeOutputStream; version ()V 1 -1
Lorg/h2/expression/Comparison; setEvaluatable (Lorg/h2/table/TableFilter;Z)V 3 1
Lorg/h2/table/TableData; unlock (Lorg/h2/engine/Session;)V 3 0
Lorg/h2/jdbc/JdbcResultSet; getColumnIndex (Ljava/lang/String;)I 3 1
Lorg/h2/value/Value; convertTo (I)Lorg/h2/value/Value; 3 1
Lorg/h2/value/ValueString; getType ()I 3 2
Lorg/apache/derbyTesting/system/oe/direct/Standard; orderStatus (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSLjava/lang/String;)V 3 0
Lorg/h2/engine/Session; rollback ()V 3 0
Lorg/h2/command/Prepared; setCurrentRowNumber (I)V 3 1
Ljava/math/BigInteger; divide (Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;I)V 3 1
Lorg/apache/derbyTesting/system/oe/direct/StatementHelper; reset (Ljava/sql/PreparedStatement;)V 3 1
Lorg/h2/value/CompareMode; compareString (Ljava/lang/String;Ljava/lang/String;Z)I 3 2
Lorg/apache/derbyTesting/system/oe/direct/Standard; payment (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSSSLjava/lang/String;Ljava/lang/String;)V 3 1
Lorg/h2/result/RowList; next ()Lorg/h2/result/Row; 3 1
Lorg/apache/derbyTesting/system/oe/client/Submitter; runPayment (Ljava/lang/Object;Z)V 3 0
Lorg/h2/command/dml/Update; update ()I 3 1
Lorg/h2/command/dml/Select; queryGroup (ILorg/h2/result/LocalResult;)V 3 0
Ljava/sql/SQLException; getErrorCode ()I 3 2
Lorg/apache/derbyTesting/system/oe/direct/StatementHelper; prepareStatement (Ljava/lang/String;)Ljava/sql/PreparedStatement; 3 1
Lorg/h2/constraint/ConstraintReferential; checkRow (Lorg/h2/engine/Session;Lorg/h2/table/Table;Lorg/h2/result/Row;Lorg/h2/result/Row;)V 3 0
Ljava/text/MessageFormat; applyPattern (Ljava/lang/String;)V 3 0
Lorg/h2/result/LocalResult; applyLimit ()V 3 0
Ljava/text/MessageFormat; scanString (Ljava/lang/String;ILgnu/java/lang/CPStringBuilder;)I 3 0
Lorg/h2/value/ValueString; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 3 2
Ljava/math/BigInteger; longValue ()J 3 1
Ljava/math/BigDecimal; add (Ljava/math/BigDecimal;)Ljava/math/BigDecimal; 3 0
Lgnu/java/math/MPN; mul ([I[II[II)V 3 1
Lorg/dacapo/h2/TPCCSubmitter; runTransactions (Ljava/lang/Object;I)J 3 1
Lorg/h2/value/ValueDecimal; getObject ()Ljava/lang/Object; 3 2
Lorg/h2/jdbc/JdbcResultSet; getObject (I)Ljava/lang/Object; 3 1
Ljava/math/BigInteger; shift (Ljava/math/BigInteger;I)Ljava/math/BigInteger; 3 0
Lorg/apache/derbyTesting/system/oe/direct/Standard; paymentById (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSSSILjava/lang/String;)V 3 0
Lorg/h2/value/ValueDecimal; getType ()I 3 2
Lorg/h2/result/LocalResult; done ()V 3 1
Lorg/h2/table/Table; updateRows (Lorg/h2/command/Prepared;Lorg/h2/engine/Session;Lorg/h2/result/RowList;)V 3 0
Lorg/h2/jdbc/JdbcResultSet; getInt (I)I 3 1
Lorg/h2/engine/Database; getSessionCount ()I 3 1
Ljava/math/BigInteger; shift (Ljava/math/BigInteger;I)Ljava/math/BigInteger; 3 1
Lorg/apache/derbyTesting/system/oe/direct/Standard; sortOrderItems ([I[S[S)V 3 0
Lorg/h2/index/TreeIndex; find (Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor; 3 2
Lorg/h2/expression/ExpressionColumn; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 3 2
Lorg/h2/result/RowList; <init> (Lorg/h2/engine/Session;)V 3 0
Lorg/h2/index/MultiVersionIndex; remove (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 0
Lorg/h2/result/RowList; add (Lorg/h2/result/Row;)V 3 1
Lorg/h2/expression/Operation; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 3 1
Lorg/h2/value/ValueDouble; get (D)Lorg/h2/value/ValueDouble; 3 0
Lorg/h2/index/ScanCursor; next ()Z 3 1
Lorg/h2/jdbc/JdbcResultSet; checkColumnIndex (I)V 3 2
Ljava/text/SimpleDateFormat; withLeadingZeros (IILgnu/java/text/FormatBuffer;)V 3 2
Ljava/util/GregorianCalendar; isGregorian (II)Z 3 2
Lorg/h2/command/dml/Select; queryFlat (ILorg/h2/result/LocalResult;J)V 3 2
Lgnu/java/math/MPN; mul_1 ([I[III)I 3 1
Lorg/h2/engine/Session; prepareLocal (Ljava/lang/String;)Lorg/h2/command/Command; 3 1
Lorg/h2/command/Parser; read ()V 3 0
Lorg/h2/table/Table; getBestPlanItem (Lorg/h2/engine/Session;[I)Lorg/h2/table/PlanItem; 3 0
Lorg/apache/derbyTesting/system/oe/client/Submitter; runNewOrder (Ljava/lang/Object;Z)V 3 0
Lorg/h2/command/CommandContainer; getParameters ()Lorg/h2/util/ObjectArray; 3 2
Lorg/h2/expression/Function; getNullOrValue (Lorg/h2/engine/Session;[Lorg/h2/expression/Expression;I)Lorg/h2/value/Value; 3 1
Ljava/math/BigDecimal; compareTo (Ljava/math/BigDecimal;)I 3 0
Lorg/h2/constraint/ConstraintReferential; found (Lorg/h2/engine/Session;Lorg/h2/index/Index;Lorg/h2/result/SearchRow;Lorg/h2/result/Row;)Z 3 1
Lorg/h2/log/UndoLogRecord; undo (Lorg/h2/engine/Session;)V 3 0
Lorg/h2/constraint/ConstraintReferential; isEqual (Lorg/h2/result/Row;Lorg/h2/result/Row;)Z 3 1
Lorg/h2/table/Table; updateRows (Lorg/h2/command/Prepared;Lorg/h2/engine/Session;Lorg/h2/result/RowList;)V 3 1
Lorg/apache/derbyTesting/system/oe/client/Submitter; runPayment (Ljava/lang/Object;Z)V 3 1
Lorg/h2/jdbc/JdbcPreparedStatement; setObject (ILjava/lang/Object;I)V 3 0
Lorg/h2/table/Column; updateSequenceIfRequired (Lorg/h2/engine/Session;Lorg/h2/value/Value;)V 3 0
Lorg/h2/util/ObjectArray; ensureCapacity (I)V 3 0
Lorg/h2/index/MultiVersionIndex; remove (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 1
Ljava/math/BigInteger; neg (Ljava/math/BigInteger;)Ljava/math/BigInteger; 3 0
Lorg/h2/constant/ErrorCode; getState (I)Ljava/lang/String; 3 0
Lorg/h2/jdbc/JdbcResultSet; getInt (Ljava/lang/String;)I 3 1
Lorg/h2/index/ScanIndex; remove (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 1
Ljava/math/BigInteger; shiftLeft (I)Ljava/math/BigInteger; 3 0
Lgnu/java/math/MPN; submul_1 ([II[III)I 3 1
Lorg/h2/constraint/ConstraintReferential; checkRowRefTable (Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;)V 3 0
Lorg/h2/command/CommandContainer; recompileIfRequired ()V 3 1
Lorg/h2/value/ValueDecimal; get (Ljava/math/BigDecimal;)Lorg/h2/value/ValueDecimal; 3 1
Lorg/h2/engine/Session; unlockAll ()V 3 0
Lorg/h2/expression/Comparison; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 3 2
Lorg/h2/index/IndexCursor; nextCursor ()V 3 0
Lorg/h2/expression/Operation; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 3 1
Lorg/apache/derbyTesting/system/oe/direct/Standard; stockLevel (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSI)V 3 0
Lorg/h2/value/ValueDecimal; equals (Ljava/lang/Object;)Z 3 1
Lorg/h2/value/ValueShort; equals (Ljava/lang/Object;)Z 3 1
Lorg/h2/index/TreeIndex; findFirstNode (Lorg/h2/result/SearchRow;Z)Lorg/h2/index/TreeNode; 3 2
Lorg/h2/constraint/ConstraintReferential; checkRow (Lorg/h2/engine/Session;Lorg/h2/table/Table;Lorg/h2/result/Row;Lorg/h2/result/Row;)V 3 1
Lorg/h2/index/ScanCursor; getSearchRow ()Lorg/h2/result/SearchRow; 3 2
Ljava/text/DecimalFormat; handleFractionalPart (Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/text/FieldPosition;Z)V 3 1
Ljava/sql/Timestamp; toString ()Ljava/lang/String; 3 2
Lorg/h2/value/ValueBoolean; getString ()Ljava/lang/String; 3 1
Ljava/text/DecimalFormat; appendZero (Ljava/lang/StringBuffer;II)V 3 0
Lorg/h2/command/dml/Optimizer; <init> ([Lorg/h2/table/TableFilter;Lorg/h2/expression/Expression;Lorg/h2/engine/Session;)V 3 1
Lorg/h2/engine/Setting; getCreateSQL ()Ljava/lang/String; 3 0
Lorg/h2/index/MultiVersionCursor; get ()Lorg/h2/result/Row; 3 1
Lorg/h2/command/Command; executeQueryLocal (I)Lorg/h2/result/LocalResult; 3 2
Ljava/math/BigDecimal; subtract (Ljava/math/BigDecimal;)Ljava/math/BigDecimal; 3 1
Lorg/h2/jdbc/JdbcConnection; getTransactionIsolation ()I 3 0
Lorg/h2/message/TraceObject; debugCodeAssign (Ljava/lang/String;IILjava/lang/String;)V 3 1
Lorg/h2/table/TableData; doLock (Lorg/h2/engine/Session;IZ)V 3 1
Lorg/h2/index/TreeIndex; remove (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 1
Ljava/math/BigInteger; compareTo (Ljava/math/BigInteger;)I 3 1
Lorg/h2/jdbc/JdbcConnection; commit ()V 3 0
Lorg/h2/constraint/ConstraintReferential; checkRowOwnTable (Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;)V 3 1
Lorg/h2/value/ValueInt; add (Lorg/h2/value/Value;)Lorg/h2/value/Value; 3 0
Ljava/math/BigInteger; alloc (I)Ljava/math/BigInteger; 3 1
Lorg/h2/jdbc/JdbcResultSet; close ()V 3 1
Ljava/math/BigInteger; compareTo (Ljava/math/BigInteger;Ljava/math/BigInteger;)I 3 0
Lorg/h2/message/Trace; isDebugEnabled ()Z 3 2
Lorg/h2/message/TraceObject; debugCodeCall (Ljava/lang/String;)V 3 1
Ljava/math/BigDecimal; <init> (D)V 3 0
Lorg/h2/value/Value; compareTo (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 3 2
Lorg/h2/value/ValueDouble; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 3 1
Lorg/h2/jdbc/JdbcSQLException; setSQL (Ljava/lang/String;)V 3 1
Lorg/h2/value/ValueInt; get (I)Lorg/h2/value/ValueInt; 3 1
Lorg/h2/command/dml/Delete; update ()I 3 1
Lorg/h2/value/ValueShort; getString ()Ljava/lang/String; 3 2
Ljava/math/BigInteger; times (Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger; 3 1
Lorg/h2/jdbc/JdbcResultSet; get (I)Lorg/h2/value/Value; 3 2
Lorg/h2/jdbc/JdbcConnection; convertToDefaultObject (Lorg/h2/value/Value;)Ljava/lang/Object; 3 0
Lorg/apache/derbyTesting/system/oe/direct/StatementHelper; getAddress (Lorg/apache/derbyTesting/system/oe/model/Address;Ljava/sql/ResultSet;Ljava/lang/String;)Lorg/apache/derbyTesting/system/oe/model/Address; 3 0
Ljava/math/BigInteger; add (Ljava/math/BigInteger;Ljava/math/BigInteger;I)Ljava/math/BigInteger; 3 0
Lorg/h2/engine/Session; closeTemporaryResults ()V 3 1
Ljava/text/MessageFormat; format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; 3 0
Lorg/h2/value/ValueDouble; hashCode ()I 3 1
Lorg/h2/table/TableData; checkRowCount (Lorg/h2/engine/Session;Lorg/h2/index/Index;I)V 3 1
Lorg/h2/value/ValueInt; add (Lorg/h2/value/Value;)Lorg/h2/value/Value; 3 1
Lorg/h2/message/Trace; error (Ljava/lang/String;Ljava/lang/Throwable;)V 3 1
Lorg/dacapo/h2/TPCCSubmitter; runTransaction (ILjava/lang/Object;)Z 3 0
Ljava/math/BigInteger; neg (Ljava/math/BigInteger;)Ljava/math/BigInteger; 3 1
Ljava/math/BigInteger; setNegative (Ljava/math/BigInteger;)V 3 0
Lorg/h2/jdbc/JdbcConnection; finalize ()V 1 -1
Lorg/h2/engine/Session; finalize ()V 1 -1
Lorg/apache/derbyTesting/system/oe/model/District; clear ()V 3 1
Lorg/h2/jdbc/JdbcPreparedStatement; setDouble (ID)V 3 0
Lorg/h2/value/ValueDecimal; getPrecision ()J 3 1
Lorg/h2/value/Value; cache (Lorg/h2/value/Value;)Lorg/h2/value/Value; 3 2
Ljava/math/BigInteger; setNegative (Ljava/math/BigInteger;)V 3 1
Lorg/h2/value/ValueTimestamp; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 3 1
Lorg/h2/command/dml/TransactionCommand; update ()I 3 0
Lorg/h2/value/ValueBoolean; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 3 0
Ljava/util/SimpleTimeZone; getDaysInMonth (II)I 3 0
Lorg/h2/command/Command; executeUpdate ()I 3 2
Lorg/apache/derbyTesting/system/oe/direct/OrderItem4Sort; compareTo (Ljava/lang/Object;)I 3 0
Lorg/h2/expression/Parameter; isEverything (Lorg/h2/expression/ExpressionVisitor;)Z 3 0
Lorg/h2/value/ValueShort; getPrecision ()J 3 2
Lorg/h2/command/Prepared; trace (JI)V 3 1
Lorg/h2/command/dml/Select; queryGroup (ILorg/h2/result/LocalResult;)V 3 1
Lorg/apache/derbyTesting/system/oe/direct/OrderItem4Sort; compareTo (Ljava/lang/Object;)I 3 1
Lorg/h2/jdbc/JdbcConnection; rollback ()V 3 1
Lorg/h2/index/MultiVersionIndex; commit (ILorg/h2/result/Row;)V 3 2
Lorg/apache/derbyTesting/system/oe/direct/StatementHelper; getAddress (Lorg/apache/derbyTesting/system/oe/model/Address;Ljava/sql/ResultSet;Ljava/lang/String;)Lorg/apache/derbyTesting/system/oe/model/Address; 3 1
Lorg/h2/result/LocalResult; close ()V 3 1
Ljava/math/BigInteger; canonicalize ()Ljava/math/BigInteger; 3 1
Lorg/h2/value/ValueBoolean; getType ()I 3 2
Lorg/h2/value/ValueBoolean; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 3 1
Lorg/h2/value/ValueDecimal; convertScale (ZI)Lorg/h2/value/Value; 3 1
Ljava/text/DecimalFormatSymbols; getZeroDigit ()C 3 2
Ljava/math/BigDecimal; toPlainString ()Ljava/lang/String; 3 1
Lorg/apache/derbyTesting/system/oe/direct/Standard; newOrder (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSI[I[S[S)V 3 1
Lorg/apache/derbyTesting/system/oe/direct/Standard; paymentById (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSSSILjava/lang/String;)V 3 1
Ljava/text/MessageFormat; scanString (Ljava/lang/String;ILgnu/java/lang/CPStringBuilder;)I 3 1
Lorg/h2/jdbc/JdbcStatement; getResultSet ()Ljava/sql/ResultSet; 3 0
Lorg/h2/expression/Function; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 3 1
Lorg/apache/derbyTesting/system/oe/direct/Standard; payment (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSSSILjava/lang/String;)V 3 0
Lorg/h2/util/ObjectArray; clear ()V 3 0
Lorg/h2/jdbc/JdbcSQLException; <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;Ljava/lang/String;)V 3 0
Lorg/h2/engine/Session; unlockAll ()V 3 1
Lorg/h2/jdbc/JdbcSQLException; buildMessage ()V 3 0
Ljava/math/BigInteger; negate ([I[II)Z 3 1
Lorg/apache/derbyTesting/system/oe/direct/Standard; payment (Lorg/apache/derbyTesting/system/oe/client/Display;Ljava/lang/Object;SSSSILjava/lang/String;)V 3 1
Lorg/h2/engine/User; checkRight (Lorg/h2/table/Table;I)V 3 1
Lorg/h2/table/TableFilter; <init> (Lorg/h2/engine/Session;Lorg/h2/table/Table;Ljava/lang/String;ZLorg/h2/command/dml/Select;)V 3 0
Lorg/h2/message/TraceObject; debugCodeCall (Ljava/lang/String;J)V 3 2
Lorg/h2/value/ValueInt; getString ()Ljava/lang/String; 3 2
Lorg/h2/engine/Session; isReconnectNeeded (Z)Z 3 2
Lorg/h2/result/RowList; <init> (Lorg/h2/engine/Session;)V 3 1
Lorg/h2/command/Parser; readConcat ()Lorg/h2/expression/Expression; 3 0
Lorg/h2/table/TableData; unlock (Lorg/h2/engine/Session;)V 3 1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect7261; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect50735; <init> ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect50735; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
L$Proxy10; <init> (Ljava/lang/reflect/InvocationHandler;)V 1 -1
L$Proxy10; value ()Z 1 -1
Lorg/h2/value/ValueDecimal; <init> (Ljava/math/BigDecimal;)V 3 1
Lorg/h2/jdbc/JdbcResultSet; getTimestamp (Ljava/lang/String;)Ljava/sql/Timestamp; 3 1
Lorg/h2/jdbc/JdbcSQLException; buildMessage ()V 3 1
Ljava/sql/SQLException; <init> (Ljava/lang/String;Ljava/lang/String;I)V 3 1
Ljava/math/BigInteger; setShiftLeft (Ljava/math/BigInteger;I)V 3 0
Lorg/h2/engine/Session; rollback ()V 3 1
Ljava/math/BigDecimal; add (Ljava/math/BigDecimal;)Ljava/math/BigDecimal; 3 1
Lorg/h2/engine/Session; checkCanceled ()V 3 0
Lorg/h2/expression/Aggregate; updateAggregate (Lorg/h2/engine/Session;)V 3 0
Lorg/h2/value/ValueDouble; equals (Ljava/lang/Object;)Z 3 1
Lorg/h2/message/Message; translate (Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String; 3 1
Lorg/h2/constraint/ConstraintReferential; checkRow (Lorg/h2/engine/Session;Lorg/h2/result/Row;)V 3 0
Lorg/h2/expression/ValueExpression; getValue (Lorg/h2/engine/Session;)Lorg/h2/value/Value; 3 2
Lorg/h2/jdbc/JdbcResultSet; next ()Z 3 2
Lorg/h2/command/Parser; parseColumnList (Lorg/h2/table/Table;)[Lorg/h2/table/Column; 3 0
Lorg/h2/table/TableData; traceLock (Lorg/h2/engine/Session;ZLjava/lang/String;)V 3 1
Lorg/h2/engine/Database; checkWritingAllowed ()V 3 0
Ljava/math/BigInteger; times (Ljava/math/BigInteger;I)Ljava/math/BigInteger; 3 1
Lorg/h2/jdbc/JdbcResultSet; closeInternal ()V 3 1
Lorg/h2/value/ValueDouble; get (D)Lorg/h2/value/ValueDouble; 3 1
Lorg/h2/engine/Session; rollbackTo (IZ)V 3 0
Lorg/apache/derbyTesting/system/oe/client/Submitter; runOrderStatus (Ljava/lang/Object;Z)V 3 0
Lgnu/java/math/MPN; divide ([II[II)V 3 1
LMMTkHarness; harnessBegin ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect26119; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/h2/command/dml/TransactionCommand; needRecompile ()Z 3 2
Lorg/h2/value/ValueDecimal; subtract (Lorg/h2/value/Value;)Lorg/h2/value/Value; 3 1
Lorg/h2/index/TreeCursor; get ()Lorg/h2/result/Row; 3 1
Lorg/h2/jdbc/JdbcPreparedStatement; setDouble (ID)V 3 1
Lorg/h2/value/ValueDecimal; compareSecure (Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I 3 1
Lorg/h2/table/TableFilter; getBestPlanItem (Lorg/h2/engine/Session;I)Lorg/h2/table/PlanItem; 3 0
Lorg/h2/value/ValueDecimal; checkPrecision (J)Z 3 1
Lorg/h2/util/MathUtils; setScale (Ljava/math/BigDecimal;I)Ljava/math/BigDecimal; 3 1
Ljava/math/BigDecimal; compareTo (Ljava/math/BigDecimal;)I 3 1
Lorg/h2/message/TraceObject; debugCodeCall (Ljava/lang/String;Ljava/lang/String;)V 3 0
Lorg/h2/jdbc/JdbcResultSet; getString (Ljava/lang/String;)Ljava/lang/String; 3 2
Ljava/util/SimpleTimeZone; getDaysInMonth (II)I 3 1
LMMTkHarness; harnessEnd ()V 1 -1
Lorg/jikesrvm/classloader/ReflectionBase$$Reflect26120; invokeInternal (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; 1 -1
Lorg/dacapo/harness/H2; cleanup ()V 1 -1
Lorg/dacapo/harness/Benchmark; cleanup ()V 1 -1
Lorg/dacapo/harness/Benchmark; deleteTree (Ljava/io/File;)V 1 -1
Lorg/h2/engine/DatabaseCloser; run ()V 1 -1
Lorg/h2/engine/Database; close (Z)V 1 -1
Lorg/h2/engine/Database; stopServer ()V 1 -1
Lorg/h2/log/LogSystem; setDisabled (Z)V 1 -1
Lorg/h2/table/TableData; close (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/index/ScanIndex; close (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/index/MultiVersionIndex; close (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/index/TreeIndex; close (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/table/MetaTable; close (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/engine/Database; getAllSchemaObjects (I)Lorg/h2/util/ObjectArray; 1 -1
Lorg/h2/schema/Schema; getAll (I)Lorg/h2/util/ObjectArray; 1 -1
Lorg/h2/schema/Sequence; close ()V 1 -1
Lorg/h2/schema/Sequence; flush (Lorg/h2/engine/Session;)V 1 -1
Lorg/h2/engine/Database; getSystemSession ()Lorg/h2/engine/Session; 1 -1
Lorg/h2/util/TempFileDeleter; deleteAll ()V 1 -1
Lorg/h2/util/TempFileDeleter; deleteUnused ()V 1 -1
Lorg/h2/engine/Database; closeOpenFilesAndUnlock (Z)V 1 -1
Lorg/h2/engine/Database; stopWriter ()V 1 -1
Lorg/h2/log/LogSystem; close (Z)V 1 -1
Lorg/h2/engine/Database; reconnectModified (Z)Z 1 -1
Lorg/h2/engine/Database; closeFiles ()V 1 -1
Lorg/h2/message/TraceSystem; close ()V 1 -1
Lorg/h2/message/TraceSystem; closeWriter ()V 1 -1
Lorg/h2/engine/DatabaseCloser; reset ()V 1 -1
Lorg/h2/engine/Engine; close (Ljava/lang/String;)V 1 -1
Ljava/io/BufferedWriter; <init> (Ljava/io/Writer;)V 1 -1
Ljava/io/BufferedWriter; <init> (Ljava/io/Writer;I)V 1 -1
Ljava/io/BufferedWriter; write (Ljava/lang/String;II)V 1 -1
Ljava/io/BufferedWriter; flush ()V 1 -1
Ljava/io/BufferedWriter; localFlush ()V 1 -1
